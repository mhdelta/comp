%!PS-Adobe- minimal conforming
%%Creator: HP-Oberon
%
% J. Templ, 1990, 1991, 1992
% J. Supcik, 1994
%
% m  moveto  x y -> -
% s  String  s -> -
% l  Line  x y w h -> -
% x  XLine  x y dx dy -> -
% c  scaled Circle  x y a b -> -
% b  shaded box  x y w h col -> -
% i  pattern image  x y w h mode  -> -
% p  Page  n -> -
% f  font setting  fntname -> -
% z Bezier cubic section  x1 y1 x2 y2 x3 y3 x0 y0 -> -
% u UseColor  r g b -> -

/mm {72 mul 25.4 div} def
/inch {72 mul} def
/rt {rlineto} def

/bdef {bind def} bind def

/m {moveto} bdef

/s {show} bdef

/u {setrgbcolor} bdef

/l {
  /ph exch def
  /pw exch def
  newpath
  moveto
  pw 0 rlineto
  0 ph rlineto
  pw neg 0 rlineto
  closepath
  fill
} bdef

/x {
  /dy exch def
  /dx exch def
  newpath
  moveto
  dx dy rlineto
  0 setlinewidth	% was 0 (JS)
  stroke
} bdef

/c {
  /pb exch def
  /pa exch def
  newpath
  gsave
  translate
  1 pb pa div scale
  0 0 pa 0 360 arc
  0 setlinewidth % was 0 (JS)
  stroke
  grestore
} bdef

/shade {
  gsave
  col 0 eq {1 setgray} if
  col 1 eq {0.99 setgray} if
  col 2 eq {0.9 setgray} if
  col 3 eq {0.65 setgray} if
  col 4 eq {0.35 setgray} if
  col 5 eq {0 setgray} if
  fill
  grestore
} bdef

/max {
  /h1 exch def
  /h2 exch def
  h1 h2 lt {h2} {h1} ifelse
} bdef

/texture {
  gsave
  clip
  newpath
  col 6 eq
    { px 20 idiv 20 mul py ph add 20 idiv 20 mul moveto
      /maxwh pw ph max 20 add def
      maxwh 10 idiv 1 add
        { maxwh maxwh rlineto
          maxwh neg dup 20 sub rmoveto
        } repeat
    } if
  col 7 eq
    { px 20 idiv 20 mul py 20 idiv 20 mul moveto
      /maxwh pw ph max 20 add def
      maxwh 10 idiv 1 add
        { maxwh neg maxwh rlineto
          maxwh 20 add maxwh neg rmoveto
        } repeat
    } if
  col 8 eq
    { px 15 idiv 15 mul py 15 idiv 15 mul moveto
      /ph ph 25 add def
      pw 15 idiv 1 add
        { 0 ph rlineto
          15 ph neg rmoveto
        } repeat
   } if
  col 9 eq
    { px 15 idiv 15 mul py 15 idiv 15 mul moveto
      /pw pw 15 add def
      ph 15 idiv 1 add
       { pw 0 rlineto
          pw neg 15 rmoveto
        } repeat
   } if
  1 setlinewidth
  stroke
  grestore
} bdef

/b {
  /col exch def
  /ph exch def
  /pw exch def
  /py exch def
  /px exch def
  newpath
  px py moveto
  pw 0 rlineto
  0 ph rlineto
  pw neg 0 rlineto
  closepath
  col 6 lt {shade} {texture} ifelse
} bdef

/i { % pattern image follows procedure i immediately
  /mode exch def
  /ph exch def
  /pw exch def
  /py exch def
  /px exch def
  /picstr 256 string def
  /nofbytes pw 7 add 8 idiv ph mul def
  gsave
  px py translate
  pw mode 1 add mul ph mode 1 add mul scale
  pw ph 1 [pw 0 0 ph 0 0]
    {nofbytes 256 ge
      { currentfile picstr readhexstring pop
        /nofbytes nofbytes 256 sub def }
      { /picstr nofbytes string def
        currentfile picstr readhexstring pop
        /nofbytes 0 def
      } ifelse
    } image
  grestore
} bdef

/f {findfont setfont} bdef

/z {newpath moveto curveto 0 setlinewidth stroke } bdef    % Bezier cubic section. width was 0 (JS)

/p {/#copies exch def showpage restore save} bdef    % show page for Booklet
% /p {/#copies exch def} bdef    % show page for Booklet

/pl {gsave 2480 0 translate 90 rotate .7 .7 scale} bdef
/pr {2506 0 translate} bdef
/pp {grestore showpage restore save} bdef

/GlobalBuildGlyph {
    1 index /CharData get exch
    2 copy known not {pop /.notdef} if get
    dup 0 get 0
    2 index 1 4 getinterval aload pop
    setcachedevice
    dup 5 2 getinterval aload pop true
    5 4 roll /imageMaskMatrix get
    dup 4 6 index 7 get put
    dup 5 6 index 8 get put
    5 4 roll 9 1 getinterval cvx
    imagemask
} def

/GlobalBuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
} def

/OberonEncoding {
  dup 32 /space put dup 33 /exclam put dup 34 /quotedbl put dup 35 /numbersign put 
  dup 36 /dollar put dup 37 /percent put dup 38 /ampersand put dup 39 /quotesingle put dup 40 /parenleft put 
  dup 41 /parenright put dup 42 /asterisk put dup 43 /plus put dup 44 /comma put dup 45 /minus put 
  dup 46 /period put dup 47 /slash put dup 48 /zero put dup 49 /one put dup 50 /two put dup 51 /three put 
  dup 52 /four put dup 53 /five put dup 54 /six put dup 55 /seven put dup 56 /eight put dup 57 /nine put 
  dup 58 /colon put dup 59 /semicolon put dup 60 /less put dup 61 /equal put dup 62 /greater put 
  dup 63 /question put dup 64 /at put dup 65 /A put dup 66 /B put dup 67 /C put dup 68 /D put dup 69 /E put 
  dup 70 /F put dup 71 /G put dup 72 /H put dup 73 /I put dup 74 /J put dup 75 /K put dup 76 /L put 
  dup 77 /M put dup 78 /N put dup 79 /O put dup 80 /P put dup 81 /Q put dup 82 /R put dup 83 /S put 
  dup 84 /T put dup 85 /U put dup 86 /V put dup 87 /W put dup 88 /X put dup 89 /Y put dup 90 /Z put 
  dup 91 /bracketleft put dup 92 /backslash put dup 93 /bracketright put dup 94 /arrowup put dup 95 /underscore put 
  dup 96 /grave put dup 97 /a put dup 98 /b put dup 99 /c put dup 100 /d put dup 101 /e put dup 102 /f put 
  dup 103 /g put dup 104 /h put dup 105 /i put dup 106 /j put dup 107 /k put dup 108 /l put dup 109 /m put 
  dup 110 /n put dup 111 /o put dup 112 /p put dup 113 /q put dup 114 /r put dup 115 /s put dup 116 /t put 
  dup 117 /u put dup 118 /v put dup 119 /w put dup 120 /x put dup 121 /y put dup 122 /z put dup 123 /braceleft put 
  dup 124 /bar put dup 125 /braceright put dup 126 /tilde put dup 128 /Adieresis put dup 129 /Odieresis put 
  dup 130 /Udieresis put dup 131 /adieresis put dup 132 /odieresis put dup 133 /udieresis put dup 134 /acircumflex put 
  dup 135 /ecircumflex put dup 136 /icircumflex put dup 137 /oicircumflex put dup 138 /uicircumflex put 
  dup 139 /agrave put dup 140 /egrave put dup 141 /igrave put dup 142 /ograve put dup 143 /ugrave put 
  dup 144 /eacute put dup 145 /edieresis put dup 146 /idieresis put dup 147 /ccedilla put dup 148 /aacute put 
  dup 149 /ntilde put dup 155 /endash put dup 159 /hyphen put dup 171 /germandbls put
} bdef

/OberonXEncoding {
  dup 0 /ascii000 put dup 1 /ascii001 put dup 2 /ascii002 put dup 3 /ascii003 put 
  dup 4 /ascii004 put dup 5 /ascii005 put dup 6 /ascii006 put dup 7 /ascii007 put 
  dup 8 /ascii008 put dup 9 /ascii009 put dup 10 /ascii010 put dup 11 /ascii011 put 
  dup 12 /ascii012 put dup 13 /ascii013 put dup 14 /ascii014 put dup 15 /ascii015 put 
  dup 16 /ascii016 put dup 17 /ascii017 put dup 18 /ascii018 put dup 19 /ascii019 put 
  dup 20 /ascii020 put dup 21 /ascii021 put dup 22 /ascii022 put dup 23 /ascii023 put 
  dup 24 /ascii024 put dup 25 /ascii025 put dup 26 /ascii026 put dup 27 /ascii027 put 
  dup 28 /ascii028 put dup 29 /ascii029 put dup 30 /ascii030 put dup 31 /ascii031 put 
  dup 127 /ascii127 put dup 150 /ascii150 put dup 151 /ascii151 put dup 152 /ascii152 put 
  dup 153 /ascii153 put dup 154 /ascii154 put dup 155 /ascii155 put dup 156 /ascii156 put 
  dup 157 /ascii157 put dup 158 /ascii158 put dup 160 /ascii160 put dup 161 /ascii161 put 
  dup 162 /ascii162 put dup 163 /ascii163 put dup 164 /ascii164 put dup 165 /ascii165 put 
  dup 166 /ascii166 put dup 167 /ascii167 put dup 168 /ascii168 put dup 169 /ascii169 put
  dup 170 /ascii170 put dup 172 /ascii172 put dup 173 /ascii173 put dup 174 /ascii174 put
  dup 175 /ascii175 put dup 176 /ascii176 put dup 177 /ascii177 put dup 178 /ascii178 put
  dup 179 /ascii179 put dup 180 /ascii180 put dup 181 /ascii181 put dup 182 /ascii182 put
  dup 183 /ascii183 put dup 184 /ascii184 put dup 185 /ascii185 put dup 186 /ascii186 put
} bdef

/OberonYEncoding {
  dup 187 /ascii187 put dup 188 /ascii188 put dup 189 /ascii189 put dup 190 /ascii190 put
  dup 191 /ascii191 put dup 192 /ascii192 put dup 193 /ascii193 put dup 194 /ascii194 put
  dup 195 /ascii195 put dup 196 /ascii196 put dup 197 /ascii197 put dup 198 /ascii198 put
  dup 199 /ascii199 put dup 200 /ascii200 put dup 201 /ascii201 put dup 202 /ascii202 put
  dup 203 /ascii203 put dup 204 /ascii204 put dup 205 /ascii205 put dup 206 /ascii206 put
  dup 207 /ascii207 put dup 208 /ascii208 put dup 209 /ascii209 put dup 210 /ascii210 put
  dup 211 /ascii211 put dup 212 /ascii212 put dup 213 /ascii213 put dup 214 /ascii214 put
  dup 215 /ascii215 put dup 216 /ascii216 put dup 217 /ascii217 put dup 218 /ascii218 put
  dup 219 /ascii219 put dup 220 /ascii220 put dup 221 /ascii221 put dup 222 /ascii222 put
  dup 223 /ascii223 put dup 224 /ascii224 put dup 225 /ascii225 put dup 226 /ascii226 put
  dup 227 /ascii227 put dup 228 /ascii228 put dup 229 /ascii229 put dup 230 /ascii230 put
  dup 231 /ascii231 put dup 232 /ascii232 put dup 233 /ascii233 put dup 234 /ascii234 put
  dup 235 /ascii235 put dup 236 /ascii236 put dup 237 /ascii237 put dup 238 /ascii238 put
  dup 239 /ascii239 put dup 240 /ascii240 put dup 241 /ascii241 put dup 242 /ascii242 put
  dup 243 /ascii243 put dup 244 /ascii244 put dup 245 /ascii245 put dup 246 /ascii246 put
  dup 247 /ascii247 put dup 248 /ascii248 put dup 249 /ascii249 put dup 250 /ascii250 put
  dup 251 /ascii251 put dup 252 /ascii252 put dup 253 /ascii253 put dup 254 /ascii254 put
  dup 255 /ascii255 put 
} bdef

/OberonInit {
	systemdict /gcheck known {
  	mark
  	/HWResolution [300 300]
  	counttomark 2 idiv dup dict begin
  	{def} repeat
  	pop currentdict
  	end
     setpagedevice
  } if
  .24 .24 scale % A4
  % .34 .34 scale % A3
  % .24 .22 scale % Letter
  152 18 translate % Pluto portrait
  % 60 10 translate % UNIX portrait
  % 10 0 translate % V3 portrait
  % 2480.3 0 translate 90 rotate 12 106 translate % Pluto landscape
  % 2480.3 0 translate 90 rotate 7 42 translate % UNIX landscape
  % 2480.3 0 translate 90 rotate V3 landscape
  % 3507.9 0 translate 90 rotate 400 -100 translate % SPECIAL CLI
  (Syntax10.Scn.Fnt) f
  0 setgray
} bdef

/OberonClose {
} bdef
% Conversion of the Oberon font Syntax10.Scn.Fnt
% abstraction: 0, family: S, variant: 32
% height: 42

9 dict begin

/FontType 3 def
/FontMatrix [ 72 300 div  .24 div 0 0 72 300 div  .24 div 0 0] def
/FontBBox [-2 -10 38 31] def

/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding OberonEncoding OberonXEncoding OberonYEncoding /Encoding exch def

/CharData 122 dict def
CharData begin
/.notdef [0 0 0 0 0 1 1 0 0
<>] bdef
/space [11 0 0 0 0 1 1 0 0
<>] bdef
/exclam [12 4 0 8 25 4 25 -4 0
<F0F0F0F0000000006060607070707070707070707070707070>] bdef
/quotedbl [12 2 17 10 25 8 8 -2 -17
<848484C6C6C6E7E7>] bdef
/numbersign [20 1 0 19 25 18 25 -1 0
<0E1C000C18000E1C000C18000E1C000C18000E1C000C1800060C00FDFBC0EFDF
 C00C18000E1C000C1800060C00FDFBC0EFDFC00C18000E1C000C18000E1C000C
 18000E1C000C18000E1C00>] bdef
/dollar [20 2 -3 18 28 16 31 -2 3
<0300030003001FE07FF8F31C430E030603070307030703070307030E031E0FFC
 3FF079807180E180E180E180E18061807182398F1FFE07F8018001800180>] bdef
/percent [27 2 -1 25 26 23 27 -2 1
<3000003800E01C03F80C071C0E060C070E0E030E0E038E0E01C60C00C71C00E3
 F80070E0003000003800001C000E0C003F8E0071C70060C300E0E380E0E1C0E0
 E0C060C0E071C0703F80300E0038000018>] bdef
/ampersand [22 1 0 21 25 20 25 -1 0
<1FC0607FF0F07838E0F00DC0E007C0E00380E00700E00F00E00E80603C807038
 C01870C01CE0C006E0C00180C003C0000760000630000E18000C0C000C0C000C
 0C00061C0007F80001F000>] bdef
/quotesingle [7 2 17 5 25 3 8 -2 -17
<808080C0C0C0E0E0>] bdef
/parenleft [15 3 -7 12 28 9 35 -3 7
<0100038007000E001C001C0038003800700070007000E000E000E000E000E000
 E000E000E000E000E000E000E000E000700070007000380038001C001C000E00
 070003800100>] bdef
/parenright [15 2 -7 11 28 9 35 -2 7
<4000E000700038001C001C000E000E0007000700070003800380038003800380
 038003800380038003800380038003800700070007000E000E001C001C003800
 7000E0004000>] bdef
/asterisk [21 1 0 20 19 19 19 -1 0
<0C06000C07000E0E00060C0003180003180001B00000A000F84000FFFFE00043
 E000A00001B000031800031800060C000E0E001C07000C0600>] bdef
/plus [21 1 0 19 19 18 19 -1 0
<00E00000C00000C00000E00000C00000C00000E00000C00000C000FFFFC0FFFF
 C000C00000E00000C00000C00000E00000C00000C00000E000>] bdef
/comma [7 2 -6 5 3 3 9 -2 6
<808080C0C0C0E0E0E0>] bdef
/minus [21 1 9 19 11 18 2 -1 -9
<FFFFC0FFFFC0>] bdef
/period [7 2 0 5 3 3 3 -2 0
<E0E0E0>] bdef
/slash [20 2 -2 20 27 18 29 -2 2
<C00000C000006000007000003000003800001800001C00000E00000600000700
 0003000003800001C00000C00000E000006000007000003800001800001C0000
 0C00000E000007000003000003800001800000C00000C0>] bdef
/zero [20 1 0 18 25 17 25 -1 0
<01C0000FF8000E3800380E00380E00700700700700600300F00780600300E003
 80E00380E00380E00380E00380600300F00780600300700700700700380E0038
 0E000E38000FF80001C000>] bdef
/one [20 1 0 13 25 12 25 -1 0
<0070007000700070007000700070007000700070007000700070007000700070
 4070E07078701C300E30033001B000700030>] bdef
/two [20 1 0 17 25 16 25 -1 0
<FFFF8FFF4000300018000E000700038001C000E0007000380038001C001C000E
 000E000E000E000E001C001C60787FF00FC0>] bdef
/three [20 2 0 16 25 14 25 -2 0
<1F80FFE0E0F000380038001C001C001C001C0038003800F07FC07E0001C00070
 00380018001C001C001C0038E078FFF01FC0>] bdef
/four [20 0 0 20 25 20 25 0 0
<001C00001C00001C00001C00001C00001C00001C00001C00FFFFF08FFFF0401C
 00601C00301C00181C00181C000C1C00061C00030C00019C00018C0000CC0000
 6C00002C00001C00000C00>] bdef
/five [20 3 0 17 25 14 25 -3 0
<7A007F8001E0007000380038001C001C001C001C001C0038003800F0FFE09680
 40006000700030003000380018001FFC1FFC>] bdef
/six [20 2 0 18 25 16 25 -2 0
<07C01FF03C3C300C70066006E003E007E003D007D006C80EC63CE3F860A06000
 7000300038001C000E00070003C000FE003E>] bdef
/seven [20 1 0 18 25 17 25 -1 0
<1000007800003800001C00001E00000E000007000007000003800003800001C0
 0000C00000E000007000007000003800003800001C00000C00000E0000070000
 0300000180FFFF80FFFF00>] bdef
/eight [20 2 0 18 25 16 25 -2 0
<07E01FF8781E700EE007C007E003C0076006700E383C0EF001800F703C1C700E
 6006E003C007E003E007700E781E1FF807E0>] bdef
/nine [20 2 0 18 25 16 25 -2 0
<7C007F0003C000E000700038001C000C000E000605061FC73C637013600BE00B
 C007E007C0076006600E300C3C3C0FF803E0>] bdef
/colon [10 4 0 7 16 3 16 -4 0
<E0E0E000000000000000000000E0E0E0>] bdef
/semicolon [10 4 -6 7 16 3 22 -4 6
<808080C0C0C0E0E0E000000000000000000000E0E0E0>] bdef
/less [21 1 0 20 19 19 19 -1 0
<0000E00003E0000F80003E0000F80003E0000F80003E0000F80000E00000F800
 003E00000F800003E00000F800003E00000F800003E00000E0>] bdef
/equal [21 1 6 19 14 18 8 -1 -6
<FFFFC0FFFFC0000000000000000000000000FFFFC0FFFFC0>] bdef
/greater [21 1 0 20 19 19 19 -1 0
<E00000F800003E00000F800003E00000F800003E00000F800003E00000E00003
 E0000F80003E0000F80003E0000F80003E0000F80000E00000>] bdef
/at [33 2 -3 31 25 29 28 -2 3
<00FC000003FC00000F000E000C001F80180038C038003060301E3060707F3030
 6071303070F0B038E0E0701860E07038E0E0701860E07038E0E0701860E07038
 606070387070703830707030303C7070380FF0701803F0E00E0000E00E000380
 0780038001E01E0000FFFC00001FE000>] bdef
/A [25 1 0 24 25 23 25 -1 0
<200008F0001E70001C70001C3800383800381800381C00701C00700FFFE00FFF
 E00600E00701C00701C003018003838001830001830000C70000C60000C60000
 6C00006C00003800003800>] bdef
/B [23 4 0 20 25 16 25 -4 0
<FFC0FFF0E03CE00EE00EE007E007E007E007E00EE00EE03CFFF0FFC0E070E018
 E01CE00CE00EE00EE01EE01CE07CFFF8FFE0>] bdef
/C [22 2 0 20 25 18 25 -2 0
<01FE0007FFC00F81C01E00003C0000380000780000700000F00000E00000E000
 00E00000E00000E00000E000007000007000007000003800003800001C00000F
 000007C00001FFC0007FC0>] bdef
/D [28 4 0 25 25 21 25 -4 0
<FFF000FFFE00E03F80E007C0E001E0E000E0E000F0E00070E00070E00078E000
 38E00038E00038E00038E00038E00078E00070E00070E000F0E000E0E001E0E0
 07C0E03F80FFFE00FFF000>] bdef
/E [20 4 0 18 25 14 25 -4 0
<FFFCFFFCE000E000E000E000E000E000E000E000E000E000FFF8FFF8E000E000
 E000E000E000E000E000E000E000FFF8FFF8>] bdef
/F [19 4 0 17 25 13 25 -4 0
<E000E000E000E000E000E000E000E000E000E000E000E000FFF8FFF8E000E000
 E000E000E000E000E000E000E000FFF8FFF8>] bdef
/G [25 2 0 21 25 19 25 -2 0
<01FF8007FFE00F80E01E00E03C00E03800E07800E07000E0F000E0E000E0E000
 E0E000E0E000E0E00000E000007000007000007000003800003800001C00000F
 000007C00001FFC0007FC0>] bdef
/H [27 4 0 22 25 18 25 -4 0
<E001C0E001C0E001C0E001C0E001C0E001C0E001C0E001C0E001C0E001C0E001
 C0E001C0FFFFC0FFFFC0E001C0E001C0E001C0E001C0E001C0E001C0E001C0E0
 01C0E001C0E001C0E001C0>] bdef
/I [12 4 0 7 25 3 25 -4 0
<E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0>] bdef
/K [24 4 0 22 25 18 25 -4 0
<E00180E003C0E00780E00F00E01E00E03C00E07800E0F000E1E000E3C000E780
 00EF0000EC0000E70000E38000E1C000E0E000E07000E03800E01C00E00E00E0
 0700E00380E001C0E00080>] bdef
/L [17 4 0 17 25 13 25 -4 0
<FFF8FFF8E000E000E000E000E000E000E000E000E000E000E000E000E000E000
 E000E000E000E000E000E000E000E000E000>] bdef
/M [37 2 0 35 25 33 25 -2 0
<E001C00380E001C00380E0036003807003600700700360070070077007007006
 3007003806300E00380E380E00380E380E00180C180C001C1C1C1C001C1C1C1C
 001C1C0C1C000C180C18000E380E38000E380E38000630063000063006300007
 7007700003600360000360036000036003600001C001C00001C001C000>] bdef
/N [28 4 0 24 25 20 25 -4 0
<E000C0E000F0E001B0E001B0E00330E00730E00630C00E70E01E30E01C70E038
 30C07870E0F070E0E030C1C070E3C070C78070E70030C60070CE0070CC0070D8
 0070D80070F00070300070>] bdef
/O [28 2 0 25 25 23 25 -2 0
<00BA0003FF800F83E00E00E03C007838003870001C70001CE0001E70000CE000
 0EE0000EE0000EE0000EE0000E70001CE0000E70001C70001C3800383C00780E
 00E00F83E003FF8000BA00>] bdef
/P [20 4 0 18 25 14 25 -4 0
<E000E000E000E000E000E000E000E000E000E000E000FF80FFE0E0F0E038E038
 E01CE01CE01CE01CE03CE038E0F8FFF0FF80>] bdef
/Q [28 2 -4 27 25 25 29 -2 4
<0000070000001F8000007E000000F80000B9E00003FF00000F83C0000E00E000
 3C0078003800380070001C0070001C00E0001E0070000C00E0000E00E0000E00
 E0000E00E0000E00E0000E0070001C00E0000E0070001C0070001C0038003800
 3C0078000E00E0000F83E00003FF800000BA0000>] bdef
/R [24 4 0 21 25 17 25 -4 0
<E00600E00780E00F00E01E00E01C00E03C00E07800E07000E0E000E1E000E3C0
 00FF0000FFE000E07800E01C00E01C00E00E00E00E00E00E00E00E00E01E00E0
 1C00E07C00FFF800FFE000>] bdef
/S [19 2 0 17 25 15 25 -2 0
<1FC0FFF0E07C001C001E000E000E000E001E001C007C03F80FE03F807C007000
 F000E000E000E000F00070007C0E1FFE07F0>] bdef
/T [19 0 0 19 25 19 25 0 0
<00E00000E00000E00000E00000E00000E00000E00000E00000E00000E00000E0
 0000E00000E00000E00000E00000E00000E00000E00000E00000E00000E00000
 E00000E000FFFFE0FFFFE0>] bdef
/U [27 4 0 23 25 19 25 -4 0
<03F8000FFE003E0F803803807001C07001C07001C0E000E0E000E0E000E0E000
 E0E000E0E000E0E000E0E000E0E000E0E000E0E000E0E000E0E000E0E000E0E0
 00E0E000E0E000E0E000E0>] bdef
/V [23 1 0 22 25 21 25 -1 0
<00700000700000D80000D80000D80001CC00018C00038C000386000306000707
 000703000E03000E03800E01801C01C01C01C03C00C03800E03800E070007070
 0070F00078E00038200020>] bdef
/W [39 1 0 38 25 37 25 -1 0
<0070007000007000700000D800D80000D800D80000D800D80001CC01CC00018C
 018C00018C018C00038E018E0003860386000306030600070603070007070703
 0006030703000E030603800E030E01801C038E01C01C018C01C01C018C00C038
 019C00E03800D800E07800D800707000D80070F0007000783000700060>] bdef
/X [25 3 0 22 25 19 25 -3 0
<6000C0F001E07001C03803C01807801C07000E0E00061C00071C0003380001B0
 0000F00000400001E00001B000039800071C00070C000E0E001C07003C030078
 03807001C0F001E06000C0>] bdef
/Y [21 1 0 20 25 19 25 -1 0
<00E00000E00000E00000E00000E00000E00000E00000E00000E00000E00000E0
 0000E00001F00001B000039800071800070C000E0E000E06001C07003C038038
 03807801C0F001E03000C0>] bdef
/Z [20 1 0 18 25 17 25 -1 0
<FFFF80CFFF806000007000003800003800001C00000E00000E00000700000380
 0003800001C00000E00000E000007000003800003800001C00000E00000E0000
 07000003007FF9807FFF80>] bdef
/bracketleft [15 4 -6 11 27 7 33 -4 6
<FEFEC0E0C0E0C0E0C0E0C0E0C0E0C0E0C0E0C0E0C0E0C0E0C0E0C0E0C0E0C0FE
 FE>] bdef
/bracketright [15 3 -6 10 27 7 33 -3 6
<FEFE060E060E060E060E060E060E060E060E060E060E060E060E060E060E06FE
 FE>] bdef
/arrowup [20 1 0 18 21 17 21 -1 0
<01C00000C00001800000C00001800000C00001800000C00001800000C0000180
 0040C100E1838060C700388E00189C000C980006B00002A00001C000008000>] bdef
/a [19 2 0 17 19 15 19 -2 0
<3E0E7F9EF098E058E038E038E038703878381E1803F800380038003860387038
 3C700FF003C0>] bdef
/b [22 3 0 19 28 16 28 -3 0
<1FC0FFF0F878E01CE00EE00EE007E007E007E007E007E007E007D00FC80EEC1E
 E77CE7F8E1E0E000E000E000E000E000E000E000E000E000>] bdef
/c [16 2 0 15 19 13 19 -2 0
<07C01FF03C3078007000F000E000E000E000E000E000E000F000700078003800
 1E000FF803F8>] bdef
/d [22 2 0 18 28 16 28 -2 0
<07871FE73EE778377013F00BE007E007E007E007E007E007E007700770073807
 1E1F0FFB03E7000700070007000700070007000700070007>] bdef
/e [19 2 0 17 19 15 19 -2 0
<07C01FF03C3C700C7000E000E000E000E000E000FFFEEFF66006700E300C381C
 1C380FF003C0>] bdef
/f [11 0 0 11 28 11 28 0 0
<1C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C00
 FFE0FFE01C001C001C001C001C000E000E000F0007E001E0>] bdef
/g [19 1 -9 18 19 17 28 -1 9
<0FC0007FF000703C00E00E00C00600C00700600700600700300E000C3E0003F8
 001FC0007C00007000003000000C000003C0000FF0001C3800181800380C0030
 1C00380C00301C001818001C33800FFF8003C000>] bdef
/h [22 3 0 18 28 15 28 -3 0
<E00EE00EE00EE00EE00EE00EE00EE00EE00EE00EE00EE00EE00ED00EC81EEC0E
 E73CE3FCE0F0E000E000E000E000E000E000E000E000E000>] bdef
/i [10 3 0 6 26 3 26 -3 0
<E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E000000000E0E0E0>] bdef
/j [10 -2 -10 6 26 8 36 2 10
<F0FC1E0E0F070707070707070707070707070707070707070707070707000000
 00070707>] bdef
/k [19 3 0 18 28 15 28 -3 0
<E00CE01EE03CE078E0F0E1E0E3C0E780EF00FE00EC00E700E380E1C0E0E0E070
 E038E01CE008E000E000E000E000E000E000E000E000E000>] bdef
/l [10 3 0 6 28 3 28 -3 0
<E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0>] bdef
/m [34 3 0 30 19 27 19 -3 0
<E00E00E0E00E00E0E00E00E0E00E00E0E00E00E0E00E00E0E00E00E0E00E00E0
 E00E00E0E00E00E0E00E00E0E00E00E0E00E00E0D00D00E0C81C81E0EC0CC0E0
 E73C73C0E3F83FC0E0F00F00>] bdef
/n [22 3 0 18 19 15 19 -3 0
<E00EE00EE00EE00EE00EE00EE00EE00EE00EE00EE00EE00EE00ED00EC81EEC0E
 E73CE3FCE0F0>] bdef
/o [23 2 0 20 19 18 19 -2 0
<03F0000FFC001E1E00380700700380700380E001C0E001C0E001C0E001C0E001
 C0E001C0E001C07003807003803807001E1E000FFC0003F000>] bdef
/p [22 3 -9 19 19 16 28 -3 9
<E000E000E000E000E000E000E000E000E000E7C0DFF0F878E01CE00EE00EE007
 E007E007E007E007E007E007D00FC80EEC1EE77CE7F8E1E0>] bdef
/q [22 2 -9 18 19 16 28 -2 9
<00070007000700070007000700070007000707871FE73EE778377013F00BE007
 E007E007E007E007E007E0077007700738071E1F0FFF03F8>] bdef
/r [13 3 0 13 19 10 19 -3 0
<E000E000E000E000E000E000E000E000E000E000E000E000E000D000C800CE00
 E7C0E7C0E1C0>] bdef
/s [17 2 0 14 19 12 19 -2 0
<3F00FFC0E1E000E000700070007000E007E03FC07E007000E000E000E0007000
 78703FF00FC0>] bdef
/t [12 0 0 12 24 12 24 0 0
<07800FE01E701C201C001C001C001C001C001C001C001C001C001C001C000C00
 FBE0EFE018001C001C001C001C001C00>] bdef
/u [22 3 0 18 19 15 19 -3 0
<1E0E7F8E79CEE06EF026E016E00EE00EE00EE00EE00EE00EE00EE00EE00EE00E
 E00EE00EE00E>] bdef
/v [17 0 0 16 19 16 19 0 0
<0380038006C006C006400E600C601C301C30183038183818301C700C700C700E
 E006E0072004>] bdef
/w [28 0 0 27 19 27 19 0 0
<038038000380380006C06C0006C06C0006C06C000E40E6000C60C6000C60C600
 1C60C3001C21C30038318300383183803831818070138180701B01C0701B01C0
 E00B00C0E00E00E0200E0080>] bdef
/x [18 0 0 16 19 16 19 0 0
<600CE01E701C303818381C700C6006E003C0018003C0076006300E381C181C0C
 380E78073006>] bdef
/y [19 0 -9 17 19 17 28 0 9
<B00000FC00000E000006000003000003000003800001800001800001C00001C0
 000360000360000320000730000630000E18000E18000C18001C0C001C0C0018
 0E00380600380600380700700300700380100200>] bdef
/z [16 1 0 14 18 13 18 -1 0
<FFF8C7F86000300038001C000C000E0007000380038001C000C000E000600030
 FF18FFF8>] bdef
/braceleft [15 0 -6 12 27 12 33 0 6
<007001F00380030007000700060007000600070006000700060006000C001800
 E000E00018000C000600060007000600070006000700060007000300038001F0
 0070>] bdef
/bar [10 3 -6 6 27 3 33 -3 6
<E0C0E0C0E0C0E0C0E0C0E0C0E0C0E0C0E0C0E0C0E0C0E0C0E0C0E0C0E0C0E0C0
 E0>] bdef
/braceright [15 2 -6 14 27 12 33 -2 6
<E000F8001C000C000E000E0006000E0006000E0006000E000600060003000180
 0070007001800300060006000E0006000E0006000E0006000E000C001C00F800
 E000>] bdef
/tilde [23 2 6 21 13 19 7 -2 -6
<C00F00C03FC0C070C0C0E06061C0607F80601E0060>] bdef
  end

/BuildGlyph {GlobalBuildGlyph} bdef
/BuildChar {GlobalBuildChar} bdef

/imageMaskMatrix [1 0 0 1 0 0] bdef

currentdict

end

/Syntax10.Scn.Fnt exch definefont pop

% Conversion of the Oberon font Syntax12.Scn.Fnt
% abstraction: 0, family: S, variant: 32
% height: 50

9 dict begin

/FontType 3 def
/FontMatrix [ 72 300 div  .24 div 0 0 72 300 div  .24 div 0 0] def
/FontBBox [-4 -12 45 38] def

/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding OberonEncoding OberonXEncoding OberonYEncoding /Encoding exch def

/CharData 122 dict def
CharData begin
/.notdef [0 0 0 0 0 1 1 0 0
<>] bdef
/space [11 0 0 0 0 1 1 0 0
<>] bdef
/quotedbl [14 3 21 12 31 9 10 -3 -21
<820082008200C300C300C300C300E380E380E380>] bdef
/quotesingle [8 3 21 6 31 3 10 -3 -21
<808080C0C0C0C0E0E0E0>] bdef
/parenleft [16 4 -7 14 32 10 39 -4 7
<008001C0030007000C000C00180018003000300030006000700060006000E000
 6000E0006000E0006000E0006000E00060006000700060003000300030001800
 18000C000C000700030001C00080>] bdef
/parenright [16 2 -7 12 32 10 39 -2 7
<4000E000300038000C000C0006000600030003000300018003800180018001C0
 018001C0018001C0018001C0018001C001800180038001800300030003000600
 06000C000C0038003000E0004000>] bdef
/asterisk [26 2 0 24 22 22 22 -2 0
<0C00C01C00E00E01C006018003030003030001860000CC0000CC00003000FFFF
 FCFFFFFC00300000CC0000CC000186000303000303000601800E01C01C00E00C
 00C0>] bdef
/plus [26 2 0 24 22 22 22 -2 0
<003000003000003000003000003000003000003000003000003000003000FFFF
 FCFFFFFC00300000300000300000300000300000300000300000300000300000
 3000>] bdef
/comma [10 4 -7 8 4 4 11 -4 7
<808080C0C0C0E0E0E0F0F0>] bdef
/minus [26 2 10 24 12 22 2 -2 -10
<FFFFFCFFFFFC>] bdef
/period [11 4 0 8 4 4 4 -4 0
<F0F0F0F0>] bdef
/slash [20 4 -1 19 31 15 32 -4 1
<4000E0006000600030003000380018001C000C000C0006000600070003000300
 0180018001C000C000E00060006000300030003800180018000C000C000E0004
 >] bdef
/zero [24 2 0 22 30 20 30 -2 0
<01F80007FE000F0F001C03803801C03801C07000E07000E0700060E00070E000
 70E00070E00070E00070E00070E00070E00070E00070E00070E00070E0007070
 00E07000E07000E03801C03801C01C03800F0F0007FE0001F800>] bdef
/one [24 2 0 14 30 12 30 -2 0
<0070007000700070007000700070007000700070007000700070007000700070
 00700070007000704070E070707038701C700E700770037001F000F0>] bdef
/two [24 2 0 20 30 18 30 -2 0
<FFFFC0FFFFC0C000007000003800001C00000E000007000003800001E00000E0
 00007800003800001C00000E00000E0000070000070000038000038000038000
 0380000380000380000780000700600F00783E003FFC000FF000>] bdef
/three [24 3 0 20 30 17 30 -3 0
<3FE000FFF800C03E00000E000007000007000003800003800003800003800003
 80000700000700000E00003C001FE0001FE000003800000C00000E0000060000
 0700000700000700000700000F00000E00603E007FFC001FF000>] bdef
/four [24 1 0 23 30 22 30 -1 0
<0007000007000007000007000007000007000007000007000007007FFFFCFFFF
 FCC007006007007007003807001807001C07000E070006070007070003870001
 870001C70000E700006700003300003300001B00000F00000F00>] bdef
/five [24 3 0 21 30 18 30 -3 0
<3FC000FFF000C07C00001E00000F000007800003800003C00001C00001C00001
 C00001C00001C00001C0C003C0E00380D00780DC1F00CFFE00E3F80060000060
 00007000007000007000003000003800003800003FFF803FFF80>] bdef
/six [24 3 0 22 30 19 30 -3 0
<03F0000FFE001F0F803C03803801C07001C07000E0E000E0E000E0E000E0E000
 E0F000E0D001E0D801C0CC03C0E70F80E3FF00E0FC0060000070000070000038
 00003800001C00000E000007000003C00001F000007FE0000FE0>] bdef
/seven [24 2 0 22 30 20 30 -2 0
<1800003800001C00001C00000E00000E000007000007000003800003800001C0
 0001E00000E000007000007000003800003800001C00001C00000E00000E0000
 07000007800003800001C00001C00000E0000070FFFFF0FFFFE0>] bdef
/eight [24 3 0 22 30 19 30 -3 0
<07F8001FFF003C0F007003C06001C0E001E0C000E0E000E0C000E0E000E07001
 C07001C01807801E1F0007FC0001E00007F8001F1E001C060038038078018070
 00C07001C07000C07001C03801803803801E0F000FFE0003F800>] bdef
/nine [24 2 0 21 30 19 30 -2 0
<FE0000FFC00001F000007800001C00000E000007000003800003800001C00001
 C00000C007E0E01FF8E03E1CE0780660700360F00160E001E0E000E0E000E0E0
 00E0E000E0E001C07001C07003803807803E1F000FFE0001F800>] bdef
/colon [11 4 0 8 20 4 20 -4 0
<F0F0F0F0000000000000000000000000F0F0F0F0>] bdef
/semicolon [11 4 -7 8 20 4 27 -4 7
<808080C0C0C0E0E0E0F0F0000000000000000000000000F0F0F0F0>] bdef
/less [26 2 0 24 22 22 22 -2 0
<00000C00003C0000F80003E0000F80003E0000F80003C0000F00003C0000E000
 00E000003800000F000003C00000F000003C00000F000003C00000F000003C00
 000C>] bdef
/equal [26 2 7 24 16 22 9 -2 -7
<FFFFFCFFFFFC000000000000000000000000000000FFFFFCFFFFFC>] bdef
/greater [26 2 0 24 22 22 22 -2 0
<C00000F000003C00000F000003C00000F000003C00000F000003C00000700000
 1C00001C0000F00003C0000F00007C0001F00007C0001F00007C0000F00000C0
 0000>] bdef
/question [21 2 0 19 30 17 30 -2 0
<03C00003C00003C00003C0000000000000000000000380000380000380000380
 0003800001C00001E000007000007800001C00000E0000070000070000038000
 0380000380000380000380000700C00700F01E003FFE000FF000>] bdef
/at [37 2 -2 35 30 33 32 -2 2
<00BF00000003D5000000070003C0000E0007F0001C000638001800061C003807
 860C00301FC60E00303C6606007038160700607016030060380E0300E0700E03
 8060700E0300E0700E038060700E0380E0300E030060700E0380E0380E030060
 380E0380601C0E0300700E0E07003007AE07003001FE06001800000E00180000
 0C000E00001C000600003800038000700000E001E000007AAF80000017F40000
 >] bdef
/A [26 0 -1 27 30 27 31 0 1
<20000080E00001E0700001C0700001C0380003C038000380180003801C000780
 1C0007000E000F000E000E000E000E0007FFFE0007FFFC0003001C0003803800
 0180380001C0780001C0700000C0700000E0E0000060E0000071C0000071C000
 0031C000003B8000001B8000001B0000001F0000000E0000000E0000>] bdef
/B [25 5 0 23 30 18 30 -5 0
<FFC000FFF800E07E00E00F00E00700E00780E00380E003C0E00380E003C0E003
 80E00780E00700E00F00E03C00FFE000FFE000E03C00E00E00E00700E00700E0
 0380E00380E00380E00780E00700E00F00E03E00FFFC00FFF000>] bdef
/C [28 3 0 26 30 23 30 -3 0
<005F4001FFF007C03C0F000E1E00043C0000380000780000700000700000E000
 00700000E00000E00000E00000E00000E00000E00000700000E0000070000070
 00003800003800001C00000E000007000403E03E00FFFC0017A0>] bdef
/D [32 5 0 30 30 25 30 -5 0
<FFFA0000FFFF8000E00FE000E001F000E0007800E0003C00E0001C00E0000E00
 E0000E00E0000700E0000700E0000700E0000380E0000700E0000380E0000380
 E0000700E0000380E0000700E0000700E0000700E0000E00E0000E00E0001C00
 E0003C00E0007800E001F000E00FE000FFFF8000FFFA0000>] bdef
/E [23 5 0 20 30 15 30 -5 0
<FFFEFFFEE000E000E000E000E000E000E000E000E000E000E000E000FFFEFFFE
 E000E000E000E000E000E000E000E000E000E000E000E000FFFEFFFE>] bdef
/F [21 5 0 20 30 15 30 -5 0
<E000E000E000E000E000E000E000E000E000E000E000E000E000E000FFFEFFFE
 E000E000E000E000E000E000E000E000E000E000E000E000FFFEFFFE>] bdef
/G [30 3 0 27 30 24 30 -3 0
<005F4001FFF807C03F0F00071E00073C0007380007780007700007700007E000
 07700007E00007E00007E00007E00000E00000E00000700000E0000070000070
 00003800003800001C00000E000007000403E03E00FFFC0017A0>] bdef
/H [31 5 0 27 30 22 30 -5 0
<E0001CE0001CE0001CE0001CE0001CE0001CE0001CE0001CE0001CE0001CE000
 1CE0001CE0001CE0001CFFFFFCFFFFFCE0001CE0001CE0001CE0001CE0001CE0
 001CE0001CE0001CE0001CE0001CE0001CE0001CE0001CE0001C>] bdef
/I [12 5 0 8 30 3 30 -5 0
<E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0>] bdef
/J [14 -1 0 10 30 11 30 1 0
<F800FE000F00038001C001C000E000C000E000E000E000E000E000E000E000E0
 00E000E000E000E000E000E000E000E000E000E000E000E000E000E0>] bdef
/K [26 5 0 26 30 21 30 -5 0
<E00030E00078E000F0E001E0E003C0E00780E00780E01E00E01E00E03800E078
 00E0F000E1E000E3C000E78000EE0000E70000E38000E1C000E0E000E07000E0
 3800E01C00E00E00E00700E00380E001C0E001E0E00070E00060>] bdef
/L [20 5 0 21 31 16 31 -5 0
<FFFEFFFEE000E000E000E000E000E000E000E000E000E000E000E000E000E000
 E000E000E000E000E000E000E000E000E000E000E000E000E000E0000000>] bdef
/M [41 3 0 39 30 36 30 -3 0
<C001E00070E001E00070E001F00070E003B000E06003B000E07003B800E07003
 1800E070071800E070071C01C030071C01C0380E0C01C0380E0E01C0380E0E03
 80181C060380181C0703801C1C0703801C3C0303801C380387000C380187000C
 380187000C7001C7000E7001C6000E7000C600066000CE0006E000EE0006E000
 6E0006E0006C0003C0003C0003C0003C0003C0003C00>] bdef
/N [31 5 0 27 30 22 30 -5 0
<E00030C0007CE0007CC000ECE001ECC001CCE0038CC0039CE0070CC00F1CE00E
 0CC01E1CE01C0CC0381CE0380CC0701CE0F00CC0E01CE1E00CC3C01CE3800CC7
 801CE7000CCE001CCE000CDC001CDC000CF8001CF0000C30001C>] bdef
/O [33 3 0 31 30 28 30 -3 0
<007FE00001FFF80007C03E000F000F001E0007803C0003C0380001C0780001E0
 700000E0700000E0F00000F0E0000070E0000070E0000070E0000070E0000070
 E0000070E0000070E0000070F00000F0700000E0700000E0780001E0380001C0
 3C0003C01E0007800F000F0007C03E0001FFF800007FE000>] bdef
/P [22 5 0 21 30 16 30 -5 0
<E000E000E000E000E000E000E000E000E000E000E000E000E000E000FFE0FFF8
 E03CE00EE00EE007E007E007E007E007E007E00EE00EE03CFFF8FFE0>] bdef
/Q [33 3 -4 31 30 28 34 -3 4
<00000060000001F0000007E000001F80007FFE0001FFF80007C03E000F000F00
 1E0007803C0003C0380001C0780001E0700000E0700000E0F00000F0E0000070
 E0000070E0000070E0000070E0000070E0000070E0000070E0000070F00000F0
 700000E0700000E0780001E0380001C03C0003C01E0007800F000F0007C03E00
 01FFF800007FE000>] bdef
/R [24 5 0 26 30 21 30 -5 0
<E00060E00078E000F0E001E0E001C0E003C0E00780E00F00E00E00E01E00E03C
 00E03800E07000E0F000FFC000FFC000E07800E01C00E00E00E00E00E00700E0
 0700E00700E00700E00700E00E00E00E00E03C00FFF800FFE000>] bdef
/S [23 3 0 21 30 18 30 -3 0
<1FF0007FFC00F01E004007000007000003800003800003800003800003800007
 80000700000F00003E0000FC0003F0000FC0001F00003C000038000078000070
 00007000007000007000007800003800803E03C00FFF8003FE00>] bdef
/T [22 1 0 22 30 21 30 -1 0
<0070000070000070000070000070000070000070000070000070000070000070
 0000700000700000700000700000700000700000700000700000700000700000
 7000007000007000007000007000007000007000FFFFF8FFFFF8>] bdef
/U [31 5 0 27 30 22 30 -5 0
<03FE000FFF801F03E03C00E0380070700038700038E0001CE0001CE0001CE000
 0CE0001CE0000CE0001CE0000CE0001CE0000CE0001CE0000CE0001CE0000CE0
 001CE0000CE0001CE0000CE0001CE0000CE0001CE0000CE0001C>] bdef
/V [26 0 0 27 30 27 30 0 0
<000E0000000E0000001F0000001B0000003B0000003B8000007180000071C000
 0071C00000E0C00000E0E00001C0600001C0700003C070000380300003803800
 0700180007001C000F001C000E000E000E000E001E0006001C0007003C000700
 3800038038000380780001C0700001C0F00000E0300000C0>] bdef
/W [45 1 0 45 30 44 30 -1 0
<003800038000003800038000006C0006C000006C0006C000006C0006C00000EE
 000EE00000E6000E600000C7000C700001C7001C700001C3001C30000183801C
 38000383803838000381803818000781C0381C000701C0701C000700C0700E00
 0F00E0700E000E0060E006000E0070E007001E0070E007001C0030C003001C00
 39C003803C0039C00380380019C0018038001D8001C078000D8001C070000D80
 00E070000F0000E0F00007000070600007000060>] bdef
/X [25 1 0 24 30 23 30 -1 0
<600018E0001E7000383800783800701C00F00E00E00E01C00703C00383800387
 8001C70000CE0000EE00007C00003800007C0000FC0000EE0001C60003C70003
 83800783800F01C00E00E01E00E03C007038003878003C100010>] bdef
/Y [22 0 0 23 30 23 30 0 0
<0038000038000038000038000038000038000038000038000038000038000038
 00003800003800003800003800007C0000EE0000E60001C70003838003838007
 01C00F00E00E00E01C00703C003838003878001CF0000E60000C>] bdef
/Z [20 1 0 20 30 19 30 -1 0
<7FFFE0FFFFE0E000007000007800003800001C00001C00000E00000E00000700
 0003800003800001C00001E00000E000007000007000003800003C00001C0000
 0E00000E000007000003800003800001C00000E0FFFFE0FFFFC0>] bdef
/bracketleft [16 5 -6 14 32 9 38 -5 6
<AA80FF80C000E000C000E000C000E000C000E000C000E000C000E000C000E000
 C000E000C000E000C000E000C000E000C000E000C000E000C000E000C000E000
 C000E000C000E000FF80AA80>] bdef
/bracketright [16 2 -6 11 32 9 38 -2 6
<AA80FF8001800380018003800180038001800380018003800180038001800380
 0180038001800380018003800180038001800380018003800180038001800380
 0180038001800380FF80AA80>] bdef
/a [21 3 0 21 22 18 22 -3 0
<3E07007F8FC070CC40E02C00E01C00C01C00E01C00E01C00601C00701C003C1C
 000FFC0002FC00001C00001C00001C00001C00601C00701C003838001FF80007
 F000>] bdef
/b [24 4 0 22 34 18 34 -4 0
<FFC000FFF000E03C00E00E00E00700E00300E00380E00180E001C0E001C0E001
 C0E001C0E001C0E001C0E001C0E001C0D003C0D80380CC0780C70F00E3FE00E0
 F800E00000E00000E00000E00000E00000E00000E00000E00000E00000E00000
 E00000E00000>] bdef
/c [19 2 0 18 22 16 22 -2 0
<07E01FF83C1E78077002F000E000E000E000E000E000E000E000E00060007000
 300038001C000F0703FF00F8>] bdef
/d [24 2 0 20 34 18 34 -2 0
<07C1C01FF1C03C38C0780CC07006C0F002C0E001C0E001C0E001C0E001C0E001
 C0E001C0E001C0E001C06001C07001C03001C03801C01C01C00F01C003FFC000
 FFC00001C00001C00001C00001C00001C00001C00001C00001C00001C00001C0
 0001C00001C0>] bdef
/e [21 2 0 19 22 17 22 -2 0
<07E0001FF8003C1E00780700700200F00000E00000E00000E00000E00000E000
 00E00000FFFF80FFFF006003807003003003003807001806000E0E0007FC0001
 F000>] bdef
/f [13 1 0 14 34 13 34 -1 0
<0E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E00
 0E000E000E000E00FFF8FFF80E000E000E000E000E000E0006000700070003C0
 01F80078>] bdef
/g [21 2 -12 20 22 18 34 -2 12
<0FE0003FFC00701E00E00700E00380C00380C001C0C001C0E001C06003C03003
 801807800C3F0003FC003FE000FC0000C00000C000007000001C000003E0000F
 F8001C1C00180C00380E00300600300600300600300600380E00180C001C1C00
 0FF1C003FFC0>] bdef
/h [25 4 0 21 34 17 34 -4 0
<E00380E00380E00380E00380E00380E00380E00380E00380E00380E00380E003
 80E00380E00380E00380E00380E00380D00380D80380CC0700E60F00E3FE00E0
 F800E00000E00000E00000E00000E00000E00000E00000E00000E00000E00000
 E00000E00000>] bdef
/i [11 4 0 7 30 3 30 -4 0
<E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E00000000000E0E0E0>] bdef
/j [11 -2 -12 7 30 9 42 2 12
<F000FC001E000700070003000380038003800380038003800380038003800380
 0380038003800380038003800380038003800380038003800380038003800380
 0380038000000000000000000000038003800380>] bdef
/k [22 4 0 20 34 16 34 -4 0
<E006E00FE01EE01CE078E078E0E0E1E0E3C0E780EF00EE00E700E380E1C0E0E0
 E070E038E01CE00EE007E002E000E000E000E000E000E000E000E000E000E000
 E000E000>] bdef
/l [11 4 0 7 34 3 34 -4 0
<E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0
 E0E0>] bdef
/m [39 4 0 35 22 31 22 -4 0
<E003800EE003800EE003800EE003800EE003800EE003800EE003800EE003800E
 E003800EE003800EE003800EE003800EE003800EE003800EE003800EE003800E
 D003400ED803600ECC07301CE60E183CE3FE0FF8E0F803E0>] bdef
/n [25 4 0 21 22 17 22 -4 0
<E00380E00380E00380E00380E00380E00380E00380E00380E00380E00380E003
 80E00380E00380E00380E00380E00380D00380D80380CC0700E60F00E3FE00E0
 F800>] bdef
/o [24 2 0 22 22 20 22 -2 0
<03FC000FFF001E07803801C03000C07000E0600060E00070E00070E00070E000
 70E00070E00070E00070E000706000E07000E03001C03801C01E07800FFF0003
 FC00>] bdef
/p [24 4 -12 22 22 18 34 -4 12
<E00000E00000E00000E00000E00000E00000E00000E00000E00000E00000E000
 00E00000FFC000FFF000E03C00E00E00E00700E00300E00380E00180E001C0E0
 01C0E001C0E001C0E001C0E001C0E001C0E001C0D003C0D80380CC0780C70F00
 E3FE00E0F800>] bdef
/q [24 2 -12 20 22 18 34 -2 12
<0001C00001C00001C00001C00001C00001C00001C00001C00001C00001C00001
 C00001C007C1C01FF1C03C38C0780CC07006C0F002C0E001C0E001C0E001C0E0
 01C0E001C0E001C0E001C0E001C06001C07001C03001C03801C01C01C00F01C0
 03FFC000FFC0>] bdef
/r [15 4 0 15 22 11 22 -4 0
<E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000
 D000D800CE00E7E0E7E0E1E0>] bdef
/s [17 2 0 15 22 13 22 -2 0
<3F80FFE0C0F000700038003800380038007001F007E01F803E0078007000E000
 E000E000700078183FF80FE0>] bdef
/t [14 1 0 14 29 13 29 -1 0
<03E007F80F180E000E000E000E000E000E000E000E000E000E000E000E000E00
 0E000E000E000E00FFF8FFF80E000E000E000E000E000E000E00>] bdef
/u [25 4 0 21 22 17 22 -4 0
<0F83803FE380783380701980E00D80E00580E00380E00380E00380E00380E003
 80E00380E00380E00380E00380E00380E00380E00380E00380E00380E00380E0
 0380>] bdef
/v [18 0 0 18 22 18 22 0 0
<01C00001C0000360000360000360000730000730000638000E18000E18000E1C
 001C0C001C0C001C0E00380600380600380700700300700380F00380E001C060
 0180>] bdef
/w [33 0 0 33 22 33 22 0 0
<01C003800001C003800003E007C000036006C000036006C00007300E60000730
 0C600006300C70000E381C30000E181C30000E181838001C1C3818001C0C381C
 001C0C301C00380E700C003806700E003806600E007003600600700360070070
 03C00700E001C003806001C00300>] bdef
/x [20 2 0 18 22 16 22 -2 0
<C006E00F600E701C383818380C700C7006E002C001C00380034007600E300E30
 1C181C1C380E7006F0076003>] bdef
/y [18 -3 -12 18 22 21 34 3 12
<F80000FE00000F000003800001C00000C00000E0000060000070000030000030
 00003800003800003800006C00006C00006C0000E60000E60000C70001C30001
 C30001C3800381800381800381C00700C00700C00700E00E00600E00701E0070
 1C00380C0030>] bdef
/z [19 2 0 17 22 15 22 -2 0
<7FFEFFFEC0006000380038001C001E000E0007000780038001C001E000E00070
 00380038000C0006FFFEFFFC>] bdef
/braceleft [16 1 -6 14 32 13 38 -1 6
<002801F801800300030007000300070003000700030007000300070003000600
 06000C00F000F0000C0006000600030007000300070003000700030007000300
 070003000300018001F80028>] bdef
/bar [11 4 -7 7 32 3 39 -4 7
<E0C0E0C0E0C0E0C0E0C0E0C0E0C0E0C0E0C0E0C0E0C0E0C0E0C0E0C0E0C0E0C0
 E0C0E0C0E0C0E0>] bdef
/braceright [16 2 -6 15 32 13 38 -2 6
<A000FC000C000600060007000600070006000700060007000600070006000300
 0300018000780078018003000300060007000600070006000700060007000600
 0700060006000C00FC00A000>] bdef
/tilde [26 2 7 24 15 22 8 -2 -7
<C003C0C00FF0C01C38E0381860701C70E00C3FC00C0F000C>] bdef
/udieresis [25 4 0 21 30 17 30 -4 0
<0F83803FE380783380701980E00D80E00580E00380E00380E00380E00380E003
 80E00380E00380E00380E00380E00380E00380E00380E00380E00380E00380E0
 03800000000000000000000000000000001C1C001C1C001C1C00>] bdef
  end

/BuildGlyph {GlobalBuildGlyph} bdef
/BuildChar {GlobalBuildChar} bdef

/imageMaskMatrix [1 0 0 1 0 0] bdef

currentdict

end

/Syntax12.Scn.Fnt exch definefont pop

% Conversion of the Oberon font Syntax16m.Scn.Fnt
% abstraction: 0, family: S, variant: 77
% height: 67

9 dict begin

/FontType 3 def
/FontMatrix [ 72 300 div  .24 div 0 0 72 300 div  .24 div 0 0] def
/FontBBox [-4 -16 64 49] def

/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding OberonEncoding OberonXEncoding OberonYEncoding /Encoding exch def

/CharData 121 dict def
CharData begin
/.notdef [0 0 0 0 0 1 1 0 0
<>] bdef
/space [13 0 0 0 0 1 1 0 0
<>] bdef
/L [29 6 0 30 42 24 42 -6 0
<FFFFFEFFFFFEFFFFFEFFFFFEFFFFFEFEAAAAFF0000FE0000FF0000FE0000FF00
 00FE0000FF0000FE0000FF0000FE0000FF0000FE0000FF0000FE0000FF0000FE
 0000FF0000FE0000FF0000FE0000FF0000FE0000FF0000FE0000FF0000FE0000
 FF0000FE0000FF0000FE0000FF0000FE0000FF0000FE0000FF0000000000>] bdef
/N [46 6 0 41 42 35 42 -6 0
<FC00003FC0FC00007FC0FC00007FC0FC0000FFC0FC0001FFC0FC0001FFC0FC00
 03FFC0FC0007FFC0FC0007FFC0FC000FF7C0FC001FEFC0FC001FEFC0FC003FCF
 C0FC003FCFC0FC007F8FC0FC00FF8FC0FC00FF0FC0FC01FE0FC0FC03FE0FC0FC
 03FC0FC0FC07F80FC0FC0FF80FC0FC0FF00FC0FC1FF00FC0FC1FE00FC0FC3FC0
 0FC0FC7FC00FC0FC7F800FC0F8FF000FC0FDFF000FC0F9FE000FC0FDFC000FC0
 FFFC000FC0FFF8000FC0FFF0000FC0FFF0000FC0FFE0000FC0FFC0000FC0FFC0
 000FC0FF80000FC0FF80000FC00000000000>] bdef
/S [32 3 -1 31 42 28 43 -3 1
<0054000007FFC0003FFFF0007FFFFC003FFFFF003FFFFF003E83FF8010007FC0
 00003FC000001FC000001FE000001FE000001FC000001FE000001FE000003FC0
 00007FC00000FF800003FF80000FFF00003FFE0000FFFC0001FFF80007FFE000
 0FFF80000FFE00001FF800003FE000003FC000003FC000003F8000003F800000
 3F8000003F8000003FC000001FE000801FF007C00FFFFFC007FFFFE003FFFFE0
 01FFFFE0003FFE8000035000>] bdef
/a [29 1 0 28 31 27 31 -1 0
<0FE03F803FF87FE07FFE7FC07FFF7FC0FFFFFF40FF9FFE00FE03FE00FE01FE00
 FE00FE00FC00FE007E00FE007E00FE007F00FE003F80FE001FF4FE000FFFFE00
 03FFFE0000FFFE00000FFE000000FE000000FE000000FE000800FE001C01FE00
 3F01FE003FD7FE001FFFFC0007FFFC0001FFF800007FF000000FC000>] bdef
/e [32 3 -1 30 31 27 32 -3 1
<0028000001FFC00007FFF0000FFFFC001FFFFF001FFFFF803FC07F807F800F00
 7F0006007F000000FF000000FE000000FE000000FE000000FE000000FF555540
 FFFFFFE0FFFFFFC0FFFFFFE0FFFFFFC07E000FC07F000FE07F000FC03F001FC0
 3F801FC01FC03F801FF0FF800FFFFF0007FFFE0003FFFC0000FFF000001FC000
 >] bdef
/l [17 4 0 11 46 7 46 -4 0
<FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE
 FEFEFEFEFEFEFEFEFEFEFEFEFEFE>] bdef
/m [54 4 0 49 31 45 31 -4 0
<FE001FC003F8FE001FC003F8FE001FC003F8FE001FC003F8FE001FC003F8FE00
 1FC003F8FE001FC003F8FE001FC003F8FE001FC003F8FE001FC003F8FE001FC0
 03F8FE001FC003F8FE001FC003F8FE001FC003F8FE001FC003F8FE001FC003F8
 FE001FC003F8FE001FC003F8FE001FC003F8FE001FC003F8FE001FC003F8FF00
 1FE003F8FF803FF007F8FFC03FF807F8FFF07FFE0FF8FFFFFFBFFFF0FEFFFF9F
 FFF0FE7FFF0FFFE0FE3FFF07FFE0FE0FFC01FF80FE03F0007E00>] bdef
/o [34 2 0 31 31 29 31 -2 0
<001FC00000FFF80003FFFE0007FFFF000FFFFF801FF07FC03FC01FE03F800FE0
 7F0007F07F0007F07E0003F0FF0007F8FE0003F8FE0003F8FE0003F8FE0003F8
 FE0003F8FE0003F8FE0003F8FF0007F87E0003F07F0007F07F0007F03F800FE0
 3FC01FE01FF07FC00FFFFF8007FFFF0003FFFE0000FFF800001FC000>] bdef
/s [24 1 0 22 31 21 31 -1 0
<2FF800FFFF00FFFFC0FFFFE07D7FF0700FF00003F80003F80003F80007F80007
 F8001FF8007FF001FFF007FFE01FFFC03FFF003FFC007FF0007FC000FF00007F
 0000FE00007E00007E00007F80703FEBF01FFFF80FFFF803FFF8007F40>] bdef
/t [21 0 0 21 40 21 40 0 0
<00FF0003FFC007FFF807FFF80FFFF00FF0700FE0000FE0000FE0000FE0000FE0
 000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000F
 E0000FE0000FE0000FE000AFEAA8FFFFF8FFFFF8FFFFF8FFFFF80FE0000FE000
 0FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE000>] bdef
/y [27 -2 -15 27 31 29 46 2 15
<FF800000FFE00000FFF00000FFF80000D7FC000001FC000000FE0000007E0000
 007F0000003F0000003F8000003F8000001F8000001FC000001FC000001FC000
 001FE000001FE000003FF000003FF000003FF000007FF800007FF80000FEF800
 00FEFC0000FE7C0001FCFE0001FC7E0001FC7E0003F83F0003F83F0003F83F80
 07F81F8007F01F8007F01FC00FF00FC00FE00FC00FE00FE01FE007E01FC007F0
 1FC007F03FC003F03FC003F87F8001F87F8001F87F8001F8>] bdef
  end

/BuildGlyph {GlobalBuildGlyph} bdef
/BuildChar {GlobalBuildChar} bdef

/imageMaskMatrix [1 0 0 1 0 0] bdef

currentdict

end

/Syntax16m.Scn.Fnt exch definefont pop

% Conversion of the Oberon font Syntax12m.Scn.Fnt
% abstraction: 0, family: S, variant: 77
% height: 50

9 dict begin

/FontType 3 def
/FontMatrix [ 72 300 div  .24 div 0 0 72 300 div  .24 div 0 0] def
/FontBBox [-2 -12 47 37] def

/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding OberonEncoding OberonXEncoding OberonYEncoding /Encoding exch def

/CharData 121 dict def
CharData begin
/.notdef [0 0 0 0 0 1 1 0 0
<>] bdef
/space [11 0 0 0 0 1 1 0 0
<>] bdef
/quotesingle [13 5 19 11 31 6 12 -5 -19
<00C0C0E0E0F0F0F0F8F8F8A8>] bdef
/comma [14 4 -7 10 6 6 13 -4 7
<40C0E0E0E0F0F0F0F8F8FCFCA8>] bdef
/minus [27 2 9 26 13 24 4 -2 -9
<AAAAABFFFFFFFFFFFFFFFFFF>] bdef
/period [14 4 0 10 6 6 6 -4 0
<FCF8FCF8FCA8>] bdef
/zero [25 1 -1 25 31 24 32 -1 1
<00000001FF0007FFC00FFFE01FD7F01F01F83E00F87E00FC7C007C7C007CFC00
 7EFC003EF8007EF8003EF8007EF8003EF8007EF8003EF8007EF8003EFC007EFC
 003E7C007C7C007C7C007C3E00F83F01F81F83F00FFFF00FFFC003FF8000FC00
 >] bdef
/one [25 2 0 18 31 16 31 -2 0
<007E003E007E003E007E003E007E003E007E003E007E003E007E003E007E003E
 007E003E207E303EF87E7C3E3E3E1F3E0FBE07FE03FE01FE00FE007E0030>] bdef
/two [25 2 0 23 31 21 31 -2 0
<7FFFF07FFFF07FFFF0FFFFF03C00003F00000F800007C00003E00001F00000F8
 00007C00007E00001F00001F80000F800007C00007C00007E00003E00003E000
 03E00003E00007E00007E02007C0781FC0FFFF803FFF801FFE0003F000>] bdef
/three [25 2 -1 22 31 20 32 -2 1
<0000000FF8007FFE007FFF807D7FC0200FC00007E00007E00003E00003E00003
 E00003E00007E0000FC0003F800FFF0007F8000FFE0005FF00000FC00007C000
 07E00003E00003E00003E00007E00007E0300FC03FFFC0FFFF801FFE0003F000
 >] bdef
/four [25 0 0 25 31 25 31 0 0
<0003E0000003E0000003E0000003E0000003E0000003E0000003E0000003E000
 0003E0007FFFFF007FFFFF80FFFFFF00FFFFFF80F803E0007C03E0003E03E000
 1F03E0001F03E0000F83E00007C3E00003E3E00003E3E00001F3E00000FBE000
 00FBE000007FE000003FE000001FE000001FE000000FE00000054000>] bdef
/five [25 2 -1 24 31 22 32 -2 1
<0000001FF8007FFE003FFF801EFFC0100FE00003F00001F00001F80000F80000
 F80000FC0000F80000FC1001F87801F87C03F07F1FF03FFFE03FFFC03CFF003E
 10003E00001E00001F00001F00001F00001F00000FFFF00FFFF00FFFF00FFFF0
 >] bdef
/six [25 2 -1 25 31 23 32 -2 1
<00000001FE0007FFC00FFFE01FEFF01F81F83F00FC3E007C7E007C7C007C7C00
 7E7C007CFE007C7F00FCFF80FC7FE7F87DFFF07CFFE07C3F807E00003E00003E
 00001F00001F80000F800007C00007F00001FC0000FFF8007FF8001FF80002F8
 >] bdef
/seven [25 1 -1 23 31 22 32 -1 1
<0200000E00003F00001F00001F80000F800007C00007E00003E00003F00001F0
 0001F80000F80000FC00007C00007E00003E00003F00001F00000F80000FC000
 07C00007E00003E00003F00001F00001F80000F8FFFFFCFFFFF8FFFFF8FFFFF0
 >] bdef
/eight [25 3 -1 25 31 22 32 -3 1
<00000007FE001FFF803FFFE07F07F07C01F07C01F8F800F87800F8F800F87800
 F87C01F83E03F03F07F00FDFE007FFC001FF0007FE001FFF803F8FE03F03F07E
 01F07C00F87C00F87C00F87C00F87E00F83E03F03FDFF00FFFE007FF80017E00
 >] bdef
/nine [25 2 -1 25 31 23 32 -2 1
<0000003FC0003FF0003FFC0005FF00003F80000FC00007E00003E00001F00001
 F80000F80000F801E0FC07FC7C1FFF7C1FFF7C3F07FE7E01FC7C00FE7C00FCFC
 007C7C007CFC007C7C00FC7C00F83E01F83F87F01FFFE00FFFE003FF8000BC00
 >] bdef
/A [27 0 0 29 31 29 31 0 0
<F80001F8F80003F07C0003F07C0003E03C0007E03E0007E03E0007C01F000FC0
 1F000FC01F000F800FFFFF800FFFFF8007FFFF0007FFFF0007C03E0003C03E00
 03E07E0001E07C0001E07C0001F0FC0000F0F80000F0F8000079F8000079F000
 0079F000003DF000003FE000003FE000001FC000001FC000000FC000>] bdef
/B [27 5 0 26 31 21 31 -5 0
<ABF400FFFF00FFFFC0FFFFE0F807F0FC03F0F801F8FC01F0F801F8FC01F0F801
 F8FC01F0F803F0FC07E0FFFFC0FFFE00FFFF00FEAFC0F807C0FC03E0F801E0FC
 01F0F801F0FC01F0F801F0FC03F0F807E0FFFFE0FFFFC0FFFF80ABFA00>] bdef
/C [27 3 0 26 31 23 31 -3 0
<007FD001FFFE03FFFE0FFFFC0FE01C1FC0003F00003F00007E00007E00007E00
 00FC00007C0000FC00007C0000FC00007C0000FC00007C00007C00007E00003E
 00003E00001F00001F80000FC00007F01C03FFFC01FFFE007FFE000FD0>] bdef
/D [34 5 -1 32 31 27 32 -5 1
<00000000FFFD0000FFFFE000FFFFF800FFFFFC00FC01FE00F8007F00FC003F80
 F8001F80FC000FC0F8000FC0FC0007C0F80007C0FC0007E0F80007E0FC0007E0
 F80007C0FC0007E0F80007C0FC0007C0F80007C0FC000FC0F8000FC0FC000F80
 F8001F80FC003F00F8007F00F805FE00FFFFF800FFFFF000FFFFC000BFC40000
 >] bdef
/F [23 5 0 23 31 18 31 -5 0
<FC0000F80000FC0000F80000FC0000F80000FC0000F80000FC0000F80000FC00
 00F80000FC0000FC0000FFFF80FFFF80FFFF80FFFF80F80000FC0000F80000FC
 0000F80000FC0000F80000FC0000FC0000FFFFC0FFFF80FFFFC0FFFF80>] bdef
/G [30 3 0 28 31 25 31 -3 0
<007FD00001FFFD0003FFFF800FFFFF800FE01F801FC00F803F001F803F000F80
 7E001F807E000F807E001F80FC000F807C001F80FC000F807C001F80FC001F80
 7C000000FC0000007C0000007C0000007E0000003E0000003E0000001F000000
 1F8000000FC0000007F01C0003FFFC0001FFFE00007FFE00000FD000>] bdef
/I [14 5 0 11 31 6 31 -5 0
<FCF8FCF8FCF8FCF8FCF8FCF8FCF8FCF8FCF8FCF8FCF8FCF8FCF8FCF8FCF8FC>] bdef
/L [21 5 0 22 31 17 31 -5 0
<FFFF80FFFF80FFFF80FFFF80FC0000F80000FC0000F80000FC0000F80000FC00
 00F80000FC0000F80000FC0000F80000FC0000F80000FC0000F80000FC0000F8
 0000FC0000F80000FC0000F80000FC0000F80000FC0000F80000FC0000>] bdef
/M [44 2 0 44 31 42 31 -2 0
<F8003F000FC0F8007F000FC078007F000F807C007F800F807C00FF801F803C00
 FFC01F803C00FBC01F003E01FBC01F003E01F3E01F001E01FBE03F001E03F1E0
 3F001F03F1F03E001F03E1F03E000F03E0F03E000F07E0F87E000F87C0F87C00
 0F87C0787C00078FC07C7C00078F807CFC0007CF803CFC0007DF803EF80003DF
 803EF80003DF001EF80003FF001FF80003FF001FF00001FE000FF00001FE000F
 F00001FE000FF00001FC0007F00000FC0007E00000FC0007E000>] bdef
/O [34 3 0 33 31 30 31 -3 0
<003FF00000FFFC0003FFFF0007FFFF800FF03FC01FC00FE01F8007E03F0003F0
 3F0003F07E0001F87E0001F87C0000F87E0001F8FC0000FC7C0000F8FC0000FC
 7C0000F8FC0000FC7E0001F87C0000F87E0001F87E0001F83F0003F03F0003F0
 1F8007E01FC00FE00FF03FC007FFFF8003FFFF0000FFFC00003FF000>] bdef
/P [25 5 0 26 31 21 31 -5 0
<F80000F80000F80000F80000F80000F80000F80000F80000F80000F80000F800
 00F80000F80000FFF400FFFF00FFFFC0FFFFE0F80FE0F803F0F803F0F801F8F8
 01F0F801F8F801F0F803F8F803F0F80FF0FFFFE0FFFFE0FFFF80AFFA00>] bdef
/R [28 5 0 28 31 23 31 -5 0
<F8007EF800FEF800FCF801F8F801F8F803F0F803F0F807E0F807C0F80FC0F80F
 80F81F80F83F00FFFE00FFFC00FFFF00FFFFC0F80FE0F803E0F803F0F801F0F8
 01F0F801F8F801F0F803F8F803F0F80FF0FFFFE0FFFFE0FFFF80AFFA00>] bdef
/S [24 3 0 23 31 20 31 -3 0
<17F000FFFE00FFFF00FFFFC0741FC04007E00003E00003F00003E00003F00007
 F0000FE0003FE000FFC001FF8007FF001FFC003FF0007FC0007F0000FE0000FC
 00007C0000FC00007C00007E00203F82E03FFFF00FFFF007FFF000FE80>] bdef
/T [20 -1 0 23 31 24 31 1 0
<007E00007C00007E00007C00007E00007C00007E00007C00007E00007C00007E
 00007C00007E00007C00007E00007C00007E00007C00007E00007C00007E0000
 7C00007E00007C00007E00007C00007E00FFFFFFFFFFFFFFFFFFFFFFFF>] bdef
/a [22 2 0 21 23 19 23 -2 0
<1F07E07FCFE07FEFE0FFFF80FC3F80F81F80F80F80F80F80780F807C0F803F0F
 801FFF8007FF8000FF80000F80000F80100F80300F807C1F803F7F001FFF0007
 FE0001F800>] bdef
/b [26 4 0 25 34 21 34 -4 0
<AFD000FFFC00FFFE00FD7F80F80FC0F807C0F807E0F803E0F801F0F801F0F801
 F0F801F0F801F8F801F0F801F8F801F0FC03F0FF03F0FFDFE0FBFFE0F9FFC0F8
 7F80F81A00F80000F80000F80000F80000F80000F80000F80000F80000F80000
 F80000F80000>] bdef
/c [20 3 0 20 23 17 23 -3 0
<0FF0001FFC003FFF007FBF007E0700FC0200FC0000F80000F80000F80000F800
 00F80000F80000F80000F800007C00007C00007E00003F82001FFF000FFF0003
 FF8000B400>] bdef
/d [26 2 0 23 34 21 34 -2 0
<02C0F80FF0F81FFCF83FFEF83FDFF87E07F87E01F87C00F8FC00F87C00F8FC00
 F87C00F87C00F87C00F87C00F83E00F83F00F81F00F81F80F80FF5F803FFF801
 FFF8005FF80000F80000F80000F80000F80000F80000F80000F80000F80000F8
 0000F80000F8>] bdef
/e [24 3 0 23 23 20 23 -3 0
<03FC000FFF001FFFC03FDFE03F03C07E00807C0000FC0000F80000FC0000FAAA
 A0FFFFF0FFFFF0FFFFF07C01F07C01E07C01F03E03E03E03E01FAFC00FFFC007
 FF0001FC00>] bdef
/f [13 1 0 15 34 14 34 -1 0
<1F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F00
 1F001F001F00FFFCFFFCFFFCBF541F001F001F001F001F001F000F800FFC07FC
 03FC00FC>] bdef
/g [23 2 -12 24 23 22 35 -2 12
<01400017FA003FFF807F5FC0FC07E0F803E0F801F0F801F0F801F07801F07C03
 F01E0FE0077FE00FFFC03FFF00FFF800FF8000F800007800001E000007E8000F
 FE003FFF803F0F807E07C07C03E07C03E07C03E07C03E07C03C03E07C03F0FFC
 0FFFFC07FFFC00FC00>] bdef
/h [26 4 0 23 34 19 34 -4 0
<F803E0F803E0F803E0F803E0F803E0F803E0F803E0F803E0F803E0F803E0F803
 E0F803E0F803E0F803E0F803E0F803E0FC03E0FF07E0FFAFE0FBFFC0F9FFC0F8
 FF80F81D00F80000F80000F80000F80000F80000F80000F80000F80000F80000
 F80000F80000>] bdef
/i [13 4 0 9 32 5 32 -4 0
<F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F800000000F8F8F8F8F8
 >] bdef
/j [13 -2 -11 9 31 11 42 2 11
<FC00FF00FF80FFC007C003E003E003E003E003E003E003E003E003E003E003E0
 03E003E003E003E003E003E003E003E003E003E003E003E003E003E003E003E0
 03E003E000000000000003E003E003E003E003E0>] bdef
/l [13 4 0 9 34 5 34 -4 0
<F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8
 F8F8>] bdef
/m [40 4 0 37 23 33 23 -4 0
<F803E00F80F803E00F80F803E00F80F803E00F80F803E00F80F803E00F80F803
 E00F80F803E00F80F803E00F80F803E00F80F803E00F80F803E00F80F803E00F
 80F803E00F80F803E00F80F803E00F80FC03F00F80FF07FC1F80FFAFDEBF80FB
 FFCFFF00F9FFC7FF00F8FF83FE00F81F007C00>] bdef
/n [26 4 0 23 23 19 23 -4 0
<F803E0F803E0F803E0F803E0F803E0F803E0F803E0F803E0F803E0F803E0F803
 E0F803E0F803E0F803E0F803E0F803E0FC03E0FF07E0FFAFE0FBFFC0F9FFC0F8
 FF80F81D00>] bdef
/o [25 3 0 24 23 21 23 -3 0
<01FC0007FF000FFF803FFFE03F07E07E03F07C01F0FC01F8F800F8F800F8F800
 F8F800F8F800F8F800F8F800F8FC01F87C01F07E03F03F07E03FFFE00FFF8007
 FF0001FC00>] bdef
/p [26 4 -11 25 23 21 34 -4 11
<F80000F80000F80000F80000F80000F80000F80000F80000F80000F80000F800
 00FFD000FFFC00FFFE00FD7F80F80FC0F807C0F807E0F803E0F801F0F801F0F8
 01F0F801F0F801F8F801F0F801F8F801F0FC03F0FF03F0FFDFE0FBFFE0F9FFC0
 F87F80F81E00>] bdef
/r [15 4 0 16 23 12 23 -4 0
<F800F800F800F800F800F800F800F800F800F800F800F800F800F800F800FC00
 FF00FFF0FBF0FBF0F9F0F9F0F870>] bdef
/s [18 1 0 17 23 16 23 -1 0
<1FD07FFCFFFE7ABE701F001F001F001F003F00FE07FE1FFC3FF03F807E007C00
 7C007C003E063F5E1FFF0FFE03F8>] bdef
/t [16 1 0 16 30 15 30 -1 0
<03F00FFC0FFE1FFE1F8C1F001F001F001F001F001F001F001F001F001F001F00
 1F001F001F00FFFEFFFEFFFEBF561F001F001F001F001F001F001F00>] bdef
/u [26 4 0 23 23 19 23 -4 0
<1703E03FE3E07FF3E07FFBE0FEBFE0FC1FE0F807E0F803E0F803E0F803E0F803
 E0F803E0F803E0F803E0F803E0F803E0F803E0F803E0F803E0F803E0F803E0F8
 03E0F803E0>] bdef
/v [21 1 0 22 23 21 23 -1 0
<01F80001F80001FC0003FC0003FC0003DE0007DE0007DE0007CF000F8F000F8F
 801F8F801F07801F07C01F07C03F03E03E03E07E03E07E01F07C01F0FC01F0FC
 00F8FC00F8>] bdef
/x [21 -1 0 22 23 23 23 1 0
<FC007E7E00FC3F01FC1F01F80F83F00FC7F007C7E003EFC001EFC001FF8000FF
 00007F00007E0000FF0001FF8001F7C003F7C007E3E007E1F00FC1F81F80F81F
 807C3F007E>] bdef
/y [21 1 -11 22 23 21 34 -1 11
<F80000FE0000FF0000FF800007C00003C00003E00001E00001F00001F00000F0
 0001F80001F80001FC0003FC0003FC0003DE0007DE0007DE0007CF000F8F000F
 8F801F8F801F07801F07C01F07C03F03E03E03E07E03E07E01F07C01F0FC01F0
 FC00F8FC00F8>] bdef
  end

/BuildGlyph {GlobalBuildGlyph} bdef
/BuildChar {GlobalBuildChar} bdef

/imageMaskMatrix [1 0 0 1 0 0] bdef

currentdict

end

/Syntax12m.Scn.Fnt exch definefont pop

% Conversion of the Oberon font Syntax12i.Scn.Fnt
% abstraction: 0, family: S, variant: 73
% height: 50

9 dict begin

/FontType 3 def
/FontMatrix [ 72 300 div  .24 div 0 0 72 300 div  .24 div 0 0] def
/FontBBox [-7 -12 45 36] def

/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding OberonEncoding OberonXEncoding OberonYEncoding /Encoding exch def

/CharData 121 dict def
CharData begin
/.notdef [0 0 0 0 0 1 1 0 0
<>] bdef
/space [10 0 0 0 0 1 1 0 0
<>] bdef
/parenleft [16 2 -6 17 34 15 40 -2 6
<0200070006000C001C0018003800300030007000600060006000E0006000E000
 6000E0006000E0006000600070007000300030003800180018000C000E000600
 03000380018000E000200038000C0006>] bdef
/parenright [16 1 -6 16 34 15 40 -1 6
<C0006000380008000E0003000380018000C000E0006000300030003800180018
 001C001C000C000C000E000C000E000C000E000C000E000C000C000C001C0018
 0018003800300070006000C001C00080>] bdef
/plus [25 2 0 23 22 21 22 -2 0
<01800001C00001800000C00000C00000C00000E00000600000E000006000FFFF
 F8FFFFF8003000003800003000003800001800001800001800000C00001C0000
 0C00>] bdef
/comma [11 1 -6 6 4 5 10 -1 6
<8080C0C0E06070707878>] bdef
/minus [25 2 11 23 13 21 2 -2 -11
<FFFFF8FFFFF8>] bdef
/period [11 1 0 6 4 5 4 -1 0
<F0F07878>] bdef
/zero [24 2 0 23 30 21 30 -2 0
<0FE0001EF800381C00300E00700300600380600180E001C06000C0E000E06000
 E0E00060600070E0007070003060007070003870003030003838003038003818
 00301C00380C00300E003006007003806001C0E000FBC0003F80>] bdef
/one [24 3 0 18 30 15 30 -3 0
<0380038001C0038001C001C001C000E000C000E000E000E00070007000700070
 007000380038003800384018F01C381C1E1C078C01CC00E6003E000E>] bdef
/two [24 1 0 22 31 21 31 -1 0
<7FFFF047FFF0E000003000001C000007000007800001C00000E0000078000038
 00000E00000F000003800003C00000C00000E000007000007000003800003800
 00380000380000380000380000780200700701F003EFE000FF80001200>] bdef
/three [24 1 0 21 31 20 31 -1 0
<3FE000F57800C01E000007000003800003800001C00001C00001C00001C00001
 C0000380000380000F0007FC0007E000001E000007800001C00000E00000E000
 00700000700000700000700000700000F00001E00757C007FF00002800>] bdef
/five [24 4 0 24 30 20 30 -4 0
<FF0000FFE00000F800003C00000E000007000007000003800003800001C00001
 C00001C00001C00001C00003C0000380700780780F0067FE0032F80030000038
 00001C00001C00000C00000E00000E000006000007FFF007FFF0>] bdef
/eight [24 0 0 23 30 23 30 0 0
<0FFC003F5F003807807001C06001C0E000E06000E06000E07000E03001E03801
 C00C03C00E0780038F0000DE00003C00007B0000F1C001C06003C03803801807
 001C07000C07000C07000E07000C03801C01C03800F2F8003FE0>] bdef
/nine [24 2 0 23 30 21 30 -2 0
<FC0000DF800001E000007000003C00000E000006000003800003800001C00000
 C00000E000007003F07007FC301F07301C01B81C009838005838007838003838
 00383800381800381C00780E00700600700781E001F7C0007F00>] bdef
/colon [11 3 0 12 21 9 21 -3 0
<F000F00078007800000000000000000000000000000000000000000000000000
 00000F000F0007800780>] bdef
/equal [25 2 8 24 16 22 8 -2 -8
<FFFFF8FFFFF80000000000000000000000007FFFFC7FFFFC>] bdef
/A [23 -3 -1 21 30 24 31 3 1
<200000E0000760000770000730000738000718000E1C00070E000E06000E0700
 0E03000E03FFFC01FFFE01800C00E01C00E01C00701C00301C00381800183C00
 1C18000C180006380006380003380003300001300001B00000B00000F0>] bdef
/B [23 2 0 22 30 20 30 -2 0
<FF8000FFF000E07C00E00F00E007006003807003807001C07001C07001C03001
 C03803C03803803807803FFE001FF000181E001C07801C01C01C00E00C00E00E
 00700E00700E00700E00700600700700F00701E007FFC007FE80>] bdef
/C [23 3 -1 25 30 22 31 -3 1
<00400003F4000FAF001E03803C0100780000700000700000E00000E00000E000
 00E00000E00000E00000E00000E00000700000E0000070000070000038000038
 00001C00000E00000F000003800003C00000F000003E00000FFC0001FC>] bdef
/D [29 2 0 29 30 27 30 -2 0
<FFE00000FFFE0000E00F80007001E0007000F0007000380070001C0070000E00
 38000E00380007003800038038000380380003801C0001C01C0003C01C0001C0
 1C0001E00E0001C00E0001C00E0001E00E0001C00E0001C0070003C007000380
 0700078007000F0007001E0003807C0003FFF00003FFC000>] bdef
/E [21 1 0 22 30 21 30 -1 0
<FFFFC07FFFC07000007000007000003800003800003800003800003800001C00
 001C00001C00001C00000FFFE00FFFE00E00000E00000E000007000007000007
 000007000007000003800003800003800003800003FFF803FFF8>] bdef
/F [20 1 0 22 30 21 30 -1 0
<F000007000007000007000007000003800003800003800003800003800001C00
 001C00001C00001C00001FFFE00FFFE00C00000E00000E00000E000007000007
 000007000007000007000003800003800003800003FFF803FFF8>] bdef
/G [26 3 0 24 30 21 30 -3 0
<03FA000FFFC01E01C03C01C07801C07000E0F000E0E000E0E000E0E000E0E000
 70E00070E00070E00070E00070E00000E0000070000070000070000038000038
 00001C00000E00000E000003800003C00000F000003FF8000FF8>] bdef
/I [11 1 0 12 30 11 30 -1 0
<F00070007000700038003800380038001C001C001C001C001C000E000E000E00
 0E000E000700070007000700038003800380038001C001C001C001E0>] bdef
/L [17 1 0 18 30 17 30 -1 0
<FFFF807FFF807000007000003800003800003800003800001C00001C00001C00
 001C00001C00000E00000E00000E00000E00000E000007000007000007000007
 000003800003800003800003800001C00001C00001C00001E000>] bdef
/M [39 -1 0 36 30 37 30 1 0
<E000F000386000F000387000C800387000C800383000CC00383800C400381800
 C600381C00C600380C00C300380C01C380380E00C180380601C1C0380701C0C0
 380301C0E0380301C060380381C070380181C0303801C1C0383800C1C0183800
 C1801C380061C00C180061800638003180061800318003180011800318001980
 01980009800098000980009800078000780007800078>] bdef
/N [30 2 0 30 30 28 30 -2 0
<E0001C00E0003C00E00034006000760070007600700076007000E6003000E700
 3001C7003801C3003803C300380383001807838018070380180703801C0E0180
 1C0E01801C1C01800C1C01C00C3C01C00C3801C00E3800C00E7000C0067000E0
 066000E006E000E006C0006002C000700380007003800070>] bdef
/O [31 3 0 29 30 26 30 -3 0
<03FE00000FAF80001E01E0003C0070003800380070001C0070000E00E0000E00
 E0000700E0000700E0000380E0000380E0000380E00001C0E00001C0E00001C0
 E00001C0700001C0700001C0700001C0380001C0380001C01C0001C01C000380
 0E0003800700070003800F0001E01E00007D7C00001FF000>] bdef
/P [21 1 0 22 30 21 30 -1 0
<F000007000007000007000003800003800003800003800001C00001C00001C00
 001C00001C00000E00000FF8000FFF000E07C00E01C00700E007007007007007
 003803803803803803803803803801C07001C0F001FFE001FF80>] bdef
/R [24 1 0 22 30 21 30 -1 0
<F000207000787000707000F03800E03801E03801C03801C01C03801C07801C07
 001C07001C0E000E1E000FF8000FF8000E0F000E03C00700E007007007007007
 003803803803803803803803803801C07001C0F001FFE001FF40>] bdef
/S [19 -1 0 20 30 21 30 1 0
<1FE000FFF800E01E000006000007000003800003800003800003800003800007
 80000700000F00001E00003C0000F80001E00003C0000780000700000F00000E
 00000E00000E00000E000007000003000003C03800FFF8003FC0>] bdef
/T [20 2 0 24 30 22 30 -2 0
<1E00000E00000E00000E00000700000700000700000700000380000380000380
 0003800003800001C00001C00001C00001C00001C00000E00000E00000E00000
 E000007000007000007000007000003800003800FFFFFCFFFFFC>] bdef
/V [22 3 0 27 31 24 31 -3 0
<0F00000D00000D80000C80000CC0001CC0001C60001C70001830001838003C18
 00181C00380C003806003807003803003003807001803001C07000C07000E070
 0060700070E00038700018E0001CE0000CE0000EE00006E00007000004>] bdef
/W [41 4 0 45 30 41 30 -4 0
<3C0003C000003C0003C000003200032000003300033000003300033000003180
 0318000071C00318000030C0031C000070E0070C00007060030E000070700706
 0000703007070000703807030000701807038000701C07018000F00C0701C000
 700E0700E000E0060700E000E00707007000E00307007000E00387003800E001
 87003800E00187001C00E000C6001C00E000C7000E00E00066000E00E0006600
 0700E00026000700E0001E000380E0001E000300>] bdef
/bracketleft [16 2 -5 18 33 16 38 -2 5
<AB00FF00E0006000E00060006000700030003000300038003000180018001800
 1C001C000C000C000C000E000E00060006000600070003000700030003000380
 01800180018001C000D500FF>] bdef
/bracketright [16 0 -5 16 33 16 38 0 5
<FF00AB00038001800180018001C000C000C000E000C000E00060006000600070
 007000300030003000380038001800180018000C001C000C000C000C000E0006
 000600070006000700FF00D5>] bdef
/a [20 1 0 19 22 18 22 -1 0
<3E0F007F8FC0F0CC40E02400E01400E00E00E00C00700E00700E003806000E06
 0007C700007F000007000003000003800003800003800C03800F038003EF0000
 FF00>] bdef
/b [22 1 0 21 34 20 34 -1 0
<FE000077C00070F000703800701E003807003007003803803801C03800E01800
 E01C00E01C00701C00701C00700E00700D00700C80700CC0700670E0063FE007
 0FC007000007000003000003800003800003800003800001800001C00001C000
 01C00001C000>] bdef
/c [17 1 0 18 22 17 22 -1 0
<1780003FE000783800F01C00E00800E00000E00000E00000E00000E00000E000
 007000007000007000003800003800001C00000E000007000003C00000FA8000
 3F80>] bdef
/d [22 1 0 23 34 22 34 -1 0
<3F06007FC60070E600E03300E01300E00B00E00700E00380E00380E003807003
 807001807001C03801C01C01C00E01C00E00C00780E001C0E000F0E0003E6000
 07F000007000007000007000007000003800003800003800003800003800001C
 00001C00001C>] bdef
/e [18 1 0 19 22 18 22 -1 0
<1F80007FE000783800F01C00E00800E00000E00000E00000E00000E00000E000
 007540007FF800703E003807003803801C01800E01C00601800381C001EB8000
 5F00>] bdef
/f [12 -7 -12 19 34 26 46 7 12
<F8000000FE000000070000000380000001C0000001C0000000E0000000E00000
 00E0000000700000007000000070000000700000007000000038000000380000
 003800000038000000380000001C0000001C0000001C0000001C0000001C0000
 000E0000000E0000000E0000000E0000000E0000000700000007000000070000
 007FFF80007FFF800003800000038000000180000001C0000001C0000001C000
 0000E0000000E000000070000000380000001FC0000007C0>] bdef
/g [20 -2 -12 22 22 24 34 2 12
<0FC0003FF800381E00600700E00380600380E001C06001C06001C03001C03803
 C00C0780031F8000FE0007F0000FC0001E00001C00000C000007000000FE0001
 D7800381C00700E00700E006007007007007007007003003807003807001C0E0
 00F587003FFF>] bdef
/h [23 2 0 21 34 19 34 -2 0
<E00700E00700E00700E007007003007003807003807003803803803801803801
 C03801C01801C01C01C01C00C01A00E01900E00D80E00CC0E00C70E00E1FE00E
 0FC0060000070000070000070000030000038000038000038000038000018000
 01C00001C000>] bdef
/i [11 2 0 12 30 10 30 -2 0
<E000E000E000E0007000700070007000700038003800380038001C001C001C00
 1C001C000E000E000E000E00000000000000000000000780038003C0>] bdef
/j [10 -7 -12 11 30 18 42 7 12
<E80000FE00000F000003800001C00001C00000E00000E00000E00000E0000060
 00007000007000007000007000003800003000003800003800003800001C0000
 1C00001C00001C00000C00001E00000E00000E00000E00000600000700000700
 0007000007800000000000000000000000000000000003C00001C00001C0>] bdef
/k [22 2 -1 23 34 21 35 -2 1
<000200E00380E00380E00700E00F00700E00701C00703C0070380038700038E0
 0038E00039C00018E0001C70001C38001C1C001C0F001C07000E01C00E01E00E
 00700E0038060010070000070000070000038000038000038000038000038000
 01C00001C00001C000>] bdef
/l [10 2 0 12 34 10 34 -2 0
<E000E000E000E0007000700070007000380038003800380018001C001C001C00
 1C001C000E000E000E000E0006000700070007000380038003800380038001C0
 01C001C0>] bdef
/m [36 2 0 34 22 32 22 -2 0
<E0070038E0070038E0070038E0070038700300187003801C7003801C7003801C
 3803801C3801800C3801C00E3801C00E1801C00E1C01C00E1C00E0061A00D007
 1900C8070D80CC070CC0E6070C70E3870E1FE0FF0E0FC07E>] bdef
/n [23 2 0 21 22 19 22 -2 0
<E00700E00700E00700E007007003007003807003807003803803803801803801
 C03801C01801C01C01C01C00C01A00E01900E00D80E00CC0E00C70E00E1FE00E
 0FC0>] bdef
/o [23 2 0 21 22 19 22 -2 0
<1FC0003EF000703C00700E00E00700E00300E00380E001C0C001C0E000C0E000
 E0E000E06000E07000607000E03800E03800E01C00E00E01C00701C001EF8000
 7F00>] bdef
/p [22 -1 -12 21 22 22 34 1 12
<E00000E00000E000007000007000007000007000007000003800003800003800
 003800003F800019F0001C3C001C0E001C07800C01C00E01C00E00E00E00700E
 003806003807003807001C07001C07001C03801C03401C03201C03301C019C38
 018FF80183F0>] bdef
/r [15 2 0 18 22 16 22 -2 0
<E000E000E00070007000700070007000380038003800380038001C001C001E00
 1D000D800CE00C7F0E3F0E0F>] bdef
/s [15 -1 0 16 22 17 22 1 0
<FF8000FFE000007800003800001C00001C00001C00001C0000380000780001F0
 0007C0000F00000E00001C00001C00001C00001C00000E00000F000003FF8000
 FF80>] bdef
/t [15 2 0 17 30 15 30 -2 0
<3F007FC070E07038701C70087000380038003800380038001C001C001C001C00
 0E000E000E000E00FFFEFFFE070007000700070003800380038003C0>] bdef
/u [23 2 0 21 22 19 22 -2 0
<7E0E00FF0E00E1C600E06600E03600E01300E00B006007007007007003007003
 807003803003803803803801C03801C03801C01801C01C00E01C00E01C00E01C
 00E0>] bdef
/v [19 1 0 20 22 19 22 -1 0
<0E00000E00000D00000D80001C80001CC0001C60001C60001830001C30003818
 00381C00380C00380E003806003007007803003001807001C07000C07000E0F0
 0040>] bdef
/w [35 2 0 36 22 34 22 -2 0
<1C001C00001C001C00001A001A00001B001B00003900390000198019800039C0
 39C00038C038C00030E030E00038603860007070307000303030380070187018
 00701C301C00700C700C00700E700E007006600700E0027007006003600380E0
 01600180E000E001C0E000E00080>] bdef
/x [19 -1 0 21 22 22 22 1 0
<400300E003C07007803807001C07000E0E00070E00039C00019C0000D8000038
 00007000006C0000E60000E70001C38001C1C00380E00380700780380F001C03
 0008>] bdef
/y [19 -7 -12 20 22 27 34 7 12
<E8000000FE0000000780000001C0000000C0000000E000000070000000300000
 0038000000180000001C0000000C0000000E0000000E0000000D0000000D8000
 001C8000001CC000001C6000001C600000183000001C30000038180000381C00
 00380C0000380E0000380600003007000078030000300180007001C0007000C0
 007000E000F00040>] bdef
/z [18 1 0 18 22 17 22 -1 0
<7FFE00CFFE00C000006000003800003C00001E00000E000007000007800003C0
 0001C00000E000007000007800003800001C00000E000007000001801FF9801F
 FF00>] bdef
  end

/BuildGlyph {GlobalBuildGlyph} bdef
/BuildChar {GlobalBuildChar} bdef

/imageMaskMatrix [1 0 0 1 0 0] bdef

currentdict

end

/Syntax12i.Scn.Fnt exch definefont pop

% Conversion of the Oberon font Elektra.Scn.Fnt
% abstraction: 0, family: E, variant: 32
% height: 122

9 dict begin

/FontType 3 def
/FontMatrix [ 72 300 div  .24 div 0 0 72 300 div  .24 div 0 0] def
/FontBBox [0 0 112 122] def

/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding OberonEncoding OberonXEncoding OberonYEncoding /Encoding exch def

/CharData 37 dict def
CharData begin
/.notdef [0 0 0 0 0 1 1 0 0
<>] bdef
/exclam [20 0 0 18 18 18 18 0 0
<03F0000FFC001C0E00380700700380600180C000C0C000C0C000C0C000C0C000
 C0C000C06001807003803807001C0E000FFC0003F000>] bdef
/quotesingle [36 0 0 34 32 34 32 0 0
<0000C000000001E000000003F0000000073800000006180000000E1C0000001C
 0E000000380700000070038000006001800000E001C00001C000E00003800070
 00070000380006000018000E00001C001C00000E003800000700700000038060
 00000180FFFFFFFFC0FFFFFFFFC00000C000000000C000000000C000000000C0
 00000000C000000000C000000000C000000000C000000000C000000000C00000
 >] bdef
/parenleft [48 0 8 48 26 48 18 0 -8
<00FFFFFFFF0001FFFFFFFF800380000001C00700000000E00E00000000701C00
 0000003838000000001C70000000000EE00000000007E0000000000770000000
 000E38000000001C1C00000000380E00000000700700000000E00380000001C0
 01FFFFFFFF8000FFFFFFFF00>] bdef
/plus [16 0 2 10 16 10 14 0 -2
<FFC0FFC00C000C000C000C000C000C000C000C000C000C000C000C00>] bdef
/comma [16 0 4 14 14 14 10 0 -4
<000C000C000C000CFFFCFFFC000C000C000C000C>] bdef
/minus [16 0 0 10 14 10 14 0 0
<0C000C000C000C000C000C000C000C000C000C000C000C00FFC0FFC0>] bdef
/period [16 2 4 16 14 14 10 -2 -4
<C000C000C000C000FFFCFFFCC000C000C000C000>] bdef
/zero [100 4 0 96 122 92 122 -4 0
<FFFFFFFFFC00000000000000FFFFFFFFFFF8000000000000C000000007FFC000
 00000000C0000000000FF80000000000C000000000007F0000000000C0000000
 00000FC000000000C0000000000001F800000000C00000000000007E00000000
 C00000000000000F80000000C000000000000003C0000000C000000000000000
 F0000000C0000000000000007C000000C0000000000000001E000000C0000000
 0000000007800000C00000000000000003800000C00000000000000001E00000
 C00000000000000000E00000C00000000000000000780000C000000000000000
 00380000C000000000000000001E0000C000000000000000000E0000C0000000
 0000000000070000C00000000000000000038000C00000000000000000018000
 C0000000000000000001C000C0000000000000000000E000C000000000000000
 00006000C00000000000000000007000C00000000000000000003000C0000000
 0000000000003800C00000000000000000001C00C00000000000000000000C00
 C00000000000000000000E00C00000000000000000000600C000000000000000
 00000600C00000000000000000000700C00000000000000000000300C0000000
 0000000000000380C00000000000000000000180C00000000000000000000180
 C00000000000000000000180C000000000000000000001C0C000000000000000
 000000C0C000000000000000000000C0C000000000000000000000C0C0000000
 00000000000000E0C000000000000000000000E0C00000000000000000000060
 C00000000000000000000060C00000000000000000000060C000000000000000
 00000060C00000000000000000000070C00000000000000000000030C0000000
 0000000000000030C00000000000000000000030C00000000000000000000030
 C00000000000000000000030C00000000000000000000030C000000000000000
 00000030C00000000000000000000030C00000000000000000000030C0000000
 0000000000000030C00000000000000000000030C00000000000000000000030
 C00000000000000000000030C00000000000000000000030C000000000000000
 00000030C00000000000000000000030C00000000000000000000030C0000000
 0000000000000030C00000000000000000000070C00000000000000000000060
 C00000000000000000000060C00000000000000000000060C000000000000000
 00000060C000000000000000000000E0C000000000000000000000E0C0000000
 00000000000000C0C000000000000000000000C0C000000000000000000000C0
 C000000000000000000001C0C00000000000000000000180C000000000000000
 00000180C00000000000000000000180C00000000000000000000380C0000000
 0000000000000300C00000000000000000000700C00000000000000000000600
 C00000000000000000000600C00000000000000000000E00C000000000000000
 00000C00C00000000000000000001C00C00000000000000000003800C0000000
 0000000000003000C00000000000000000007000C00000000000000000006000
 C0000000000000000000E000C0000000000000000001C000C000000000000000
 00018000C00000000000000000038000C00000000000000000070000C0000000
 00000000000E0000C000000000000000001E0000C00000000000000000380000
 C00000000000000000780000C00000000000000000E00000C000000000000000
 01E00000C00000000000000003800000C00000000000000007800000C0000000
 000000001E000000C0000000000000007C000000C000000000000000F0000000
 C000000000000003C0000000C00000000000000F80000000C00000000000007E
 00000000C0000000000001F800000000C000000000000FC000000000C0000000
 00007F0000000000C0000000000FF80000000000C000000007FFC00000000000
 FFFFFFFFFFF8000000000000FFFFFFFFFC00000000000000>] bdef
/one [116 4 0 112 122 108 122 -4 0
<FFFFE00000000000000000000000DFFFFF800000000000000000000060003FFC
 00000000000000000000380000FFC00000000000000000001C000007FC000000
 0000000000000E0000007FC000000000000000000700000007F8000000000000
 000003000000007E000000000000000003800000000FC00000000000000001C0
 00000003F80000000000000000C0000000007E0000000000000000E000000000
 0F8000000000000000700000000003E000000000000000300000000000FC0000
 00000000003800000000003F0000000000000018000000000007C00000000000
 001C000000000001F00000000000000C000000000000780000000000000E0000
 000000001E000000000000060000000000000F80000000000006000000000000
 03C000000000000700000000000000F000000000000300000000000000380000
 00000003000000000000001E0000000000038000000000000007000000000001
 8000000000000003C000000000018000000000000000E00000000001C0000000
 00000000700000000000C0000000000000001C0000000000C000000000000000
 0E0000000000C000000000000000038000000000E00000000000000001C00000
 0000600000000000000000E00000000060000000000000000038000000006000
 0000000000000018000000006000000000000000000E00000000700000000000
 0000000600000000300000000000000000038000000030000000000000000001
 C000000030000000000000000000C00000003000000000000000000070000000
 3000000000000000000030000000380000000000000000001C00000018000000
 0000000000000C000000180000000000000000000E0000001800000000000000
 0000070000001800000000000000000003000000180000000000000000000380
 000018000000000000000000018000001800000000000000000001C000001800
 000000000000000000C000001800000000000000000000E000001C0000000000
 00000000006000000C000000000000000000006000000C000000000000000000
 006000000C000000000000000000007000000C00000000000000000000300000
 0C000000000000000000003000000C000000000000000000003000000C000000
 000000000000003000000C000000000000000000003000000C00000000000000
 0000003000000C000000000000000000003000000C0000000000000000000030
 00000C000000000000000000003000000C000000000000000000003000000C00
 0000000000000000007000000C000000000000000000006000000C0000000000
 00000000006000001C0000000000000000000060000018000000000000000000
 00E000001800000000000000000000C000001800000000000000000001C00000
 1800000000000000000001800000180000000000000000000380000018000000
 0000000000000300000018000000000000000000070000001800000000000000
 00000E000000180000000000000000000C000000380000000000000000001C00
 0000300000000000000000003000000030000000000000000000700000003000
 0000000000000000C000000030000000000000000001C0000000300000000000
 000000038000000070000000000000000006000000006000000000000000000E
 0000000060000000000000000018000000006000000000000000003800000000
 600000000000000000E000000000E00000000000000001C000000000C0000000
 00000000038000000000C0000000000000000E0000000000C000000000000000
 1C0000000001C0000000000000007000000000018000000000000000E0000000
 00018000000000000003C0000000000380000000000000070000000000030000
 00000000001E0000000000030000000000000038000000000007000000000000
 00F000000000000600000000000003C00000000000060000000000000F800000
 0000000E0000000000001E0000000000000C000000000000780000000000001C
 000000000001F000000000000018000000000007C00000000000003800000000
 003F00000000000000300000000000FC00000000000000700000000003E00000
 0000000000E0000000000F8000000000000000C0000000007E00000000000000
 01C000000003F80000000000000003800000000FC00000000000000003000000
 007E00000000000000000700000007F800000000000000000E0000007FC00000
 0000000000001C000007FC000000000000000000380000FFC000000000000000
 000060003FFC00000000000000000000DFFFFF8000000000000000000000FFFF
 E00000000000000000000000>] bdef
/two [32 4 0 26 122 22 122 -4 0
<800000C000006000003800001C00000E000007000003000003800001C00000C0
 0000E000007000003000003800001800001C00000C00000E0000060000060000
 07000003000003000003800001800001800001C00000C00000C00000C00000E0
 0000600000600000600000600000700000300000300000300000300000300000
 3800001800001800001800001800001800001800001800001800001800001C00
 000C00000C00000C00000C00000C00000C00000C00000C00000C00000C00000C
 00000C00000C00000C00000C00000C00001C0000180000180000180000180000
 1800001800001800001800001800003800003000003000003000003000003000
 00700000600000600000600000600000E00000C00000C00000C00001C0000180
 000180000380000300000300000700000600000600000E00000C00001C000018
 0000380000300000700000E00000C00001C0000380000300000700000E00001C
 0000380000600000C00000800000>] bdef
/three [100 4 0 96 98 92 98 -4 0
<C00000000000000000000000F00000000000000000000000BC00000000000000
 00000000CF0000000000000000000000C3C000000000000000000000C0F00000
 0000000000000000C03C00000000000000000000C00F00000000000000000000
 C003C0000000000000000000C000F0000000000000000000C0003C0000000000
 00000000C0000F000000000000000000C00003C00000000000000000C00000F0
 0000000000000000C000003C0000000000000000C000000F0000000000000000
 C0000003C000000000000000C0000000F000000000000000C00000003C000000
 00000000C00000000F00000000000000C000000003C0000000000000C0000000
 00F0000000000000C0000000003C000000000000C0000000000F000000000000
 C00000000003C00000000000C00000000000F00000000000C000000000003C00
 00000000C000000000000F0000000000C0000000000003C000000000C0000000
 000000F000000000C00000000000003C00000000C00000000000000F00000000
 C000000000000003C0000000C000000000000000F0000000C000000000000000
 3C000000C0000000000000000F000000C00000000000000003C00000C0000000
 0000000000F00000C000000000000000003C0000C000000000000000000F0000
 C0000000000000000003C000C0000000000000000000F000C000000000000000
 00003C00C00000000000000000000F00C000000000000000000003C0C0000000
 00000000000000F0C00000000000000000000030C00000000000000000000030
 C00000000000000000000030C00000000000000000000030C000000000000000
 00000030C00000000000000000000030C000000000000000000000F0C0000000
 00000000000003C0C00000000000000000000F00C00000000000000000003C00
 C0000000000000000000F000C0000000000000000003C000C000000000000000
 000F0000C000000000000000003C0000C00000000000000000F00000C0000000
 0000000003C00000C0000000000000000F000000C0000000000000003C000000
 C000000000000000F0000000C000000000000003C0000000C00000000000000F
 00000000C00000000000003C00000000C0000000000000F000000000C0000000
 000003C000000000C000000000000F0000000000C000000000003C0000000000
 C00000000000F00000000000C00000000003C00000000000C0000000000F0000
 00000000C0000000003C000000000000C000000000F0000000000000C0000000
 03C0000000000000C00000000F00000000000000C00000003C00000000000000
 C0000000F000000000000000C0000003C000000000000000C000000F00000000
 00000000C000003C0000000000000000C00000F00000000000000000C00003C0
 0000000000000000C0000F000000000000000000C0003C000000000000000000
 C000F0000000000000000000C003C0000000000000000000C00F000000000000
 00000000C03C00000000000000000000C0F000000000000000000000C3C00000
 0000000000000000CF0000000000000000000000BC0000000000000000000000
 F00000000000000000000000C00000000000000000000000>] bdef
/colon [28 6 8 26 32 20 24 -6 -8
<FFFFF0FFFFF07FFFE07FFFE07FFFE03FFFC03FFFC01FFF801FFF801FFF800FFF
 000FFF0007FE0007FE0007FE0003FC0003FC0001F80001F80001F80000F00000
 F000006000006000>] bdef
/semicolon [28 6 4 26 28 20 24 -6 -4
<00600000600000F00000F00001F80001F80001F80003FC0003FC0007FE0007FE
 0007FE000FFF000FFF001FFF801FFF801FFF803FFFC03FFFC07FFFE07FFFE07F
 FFE0FFFFF0FFFFF0>] bdef
/less [28 4 6 28 26 24 20 -4 -6
<00000300001F00007F0003FF000FFF007FFF01FFFF0FFFFF3FFFFFFFFFFFFFFF
 FF3FFFFF0FFFFF01FFFF007FFF000FFF0003FF00007F00001F000003>] bdef
/greater [28 8 6 32 26 24 20 -8 -6
<E00000F80000FE0000FFC000FFF000FFFE00FFFF80FFFFF0FFFFFCFFFFFFFFFF
 FFFFFFFCFFFFF0FFFF80FFFE00FFF000FFC000FE0000F80000E00000>] bdef
/H [32 0 0 32 34 32 34 0 0
<80000000C0000000E000000070000000380000001C0000000E00000007000000
 0380000001C0000000E000000070000000380000001C0000000E000000070000
 000380000001C0000000E000000070000000380000001C0000000E0000000700
 00000380000001C0000000E000000070000000380000001C0000000E00000007
 0000000300000001>] bdef
/I [32 0 0 32 34 32 34 0 0
<0000000100000003000000070000000E0000001C0000003800000070000000E0
 000001C0000003800000070000000E0000001C0000003800000070000000E000
 0001C0000003800000070000000E0000001C0000003800000070000000E00000
 01C0000003800000070000000E0000001C0000003800000070000000E0000000
 C000000080000000>] bdef
  end

/BuildGlyph {GlobalBuildGlyph} bdef
/BuildChar {GlobalBuildChar} bdef

/imageMaskMatrix [1 0 0 1 0 0] bdef

currentdict

end

/Elektra.Scn.Fnt exch definefont pop

% Conversion of the Oberon font Syntax8.Scn.Fnt
% abstraction: 0, family: S, variant: 32
% height: 34

9 dict begin

/FontType 3 def
/FontMatrix [ 72 300 div  .24 div 0 0 72 300 div  .24 div 0 0] def
/FontBBox [-1 -9 33 25] def

/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding OberonEncoding OberonXEncoding OberonYEncoding /Encoding exch def

/CharData 122 dict def
CharData begin
/.notdef [0 0 0 0 0 1 1 0 0
<>] bdef
/space [9 0 0 0 0 1 1 0 0
<>] bdef
/quotesingle [6 2 15 4 22 2 7 -2 -15
<808080C080C0C0>] bdef
/minus [17 1 7 16 9 15 2 -1 -7
<AAAAFFFE>] bdef
/zero [17 2 0 16 22 14 22 -2 0
<07801C603030601860186018C00C4008C00CC00CC00CC00CC00CC00C4008C00C
 601860186018303018E00780>] bdef
/one [17 1 0 10 22 9 22 -1 0
<018001800180018001800180018001800180018001800180018001800180C180
 618031801880068002800180>] bdef
/two [17 2 0 14 22 12 22 -2 0
<5550CFF06000300018000C0006000300018000C0004000600020003000300030
 003000300060C0E075C01F00>] bdef
/three [17 2 0 14 22 12 22 -2 0
<3F00EBC080E0006000300030003000300020006055807E000180006000200030
 0030003000308060F5E01F80>] bdef
/four [17 1 0 17 22 16 22 -1 0
<003000300030003000300030AAB5DFFF403060303030183018300C1004300610
 03300110009000D000500030>] bdef
/five [17 2 0 15 22 13 22 -2 0
<BF00EBC000E000300030001800180018001800184038C030F2F04FC060006000
 60006000300030003FF82AA8>] bdef
/six [17 2 0 16 22 14 22 -2 0
<07C01D7030186018600CC00CC00CC00CA00C9018C818CD70C3C0600060003000
 300018000C00070001D4007C>] bdef
/seven [17 2 0 16 22 14 22 -2 0
<30003000180018000C000C0006000600030003000180018000C000C000600060
 0030003000180008FFFCAAA8>] bdef
/eight [17 2 0 15 22 13 22 -2 0
<0F8035E06030C0104018C01840186030307009E007800F003C8070606030C010
 C018C010401860303D600F80>] bdef
/nine [17 2 0 16 22 14 22 -2 0
<F800AE00038000C0006000300030001800180F0C3ACC604C6024C014C00CC00C
 C00CC018601860303AE00F80>] bdef
/A [19 0 0 19 22 19 22 0 0
<C00060C000606000C06000C02001803001803001801003001AAB000FFE000806
 000C0600040C00060C0002080002180003180001100001300000A00000A00000
 E000>] bdef
/C [20 2 0 18 22 16 22 -2 0
<01F4075F0E0218003800300070006000E0006000E0006000E000600070003000
 380018000C000F0003AF00FD>] bdef
/D [24 4 0 22 22 18 22 -4 0
<AF8000FAF000C03C00C00E00C00700C00300C00380C00180C00180C000C0C001
 80C000C0C00180C000C0C00180C00380C00300C00700C00E00C03C00FAF000AF
 8000>] bdef
/E [18 4 0 15 22 11 22 -4 0
<AAA0FFE0C000C000C000C000C000C000C000C000EAA0FFE0C000C000C000C000
 C000C000C000C000FFE0AAA0>] bdef
/G [22 2 0 19 22 17 22 -2 0
<01F400075F800E0180180180380180300180700180600180E00180600180E001
 80600180E000006000007000003000003800001800000C00000F000003AF0000
 FD00>] bdef
/I [10 4 0 6 22 2 22 -4 0
<C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0>] bdef
/K [19 4 0 19 22 15 22 -4 0
<C004C00EC01CC038C070C0E0C0C0C380C300C600CC00D800CC00C600C300C180
 C0C0C060C030C018C00CC006>] bdef
/L [15 4 0 15 22 11 22 -4 0
<AAA0FFE0C000C000C000C000C000C000C000C000C000C000C000C000C000C000
 C000C000C000C000C000C000>] bdef
/M [29 2 0 27 22 25 22 -2 0
<C01C0180C0140180C0140180C034018040320180602203006062030060630300
 606303002041030020C1860030C1860030818600318086001180C4001180C400
 11004C0013004C000B0028000A0028000A0028000E003800>] bdef
/O [25 2 0 23 22 21 22 -2 0
<01FC000757000E03801800C03800E0300060700070600030600030C000186000
 30600030C000186000306000307000703000603800E01800C00E038007570001
 FC00>] bdef
/Q [25 2 -3 23 22 21 25 -2 3
<0000200000F00003C001FC000757000E03801800C03800E03000607000706000
 30600030C00018600030600030C000186000306000307000703000603800E018
 00C00E038007570001FC00>] bdef
/R [19 4 0 19 22 15 22 -4 0
<C00EC00CC01CC038C030C060C0E0C1C0C180C300FF00D5C0C0E0C060C030C030
 C030C030C060C0E0EBC0BF00>] bdef
/S [16 2 0 14 22 12 22 -2 0
<BF00D5C000600060003000300030007000E003E00F801F007C007000E000C000
 C000C000600060003AB00FD0>] bdef
/V [19 0 0 19 22 19 22 0 0
<00E00000A00000A000019000011000031800030800020800060C000604000C06
 000C06000C02001803001801003001803001803000806000C06000C0C00060C0
 0060>] bdef
/W [33 0 0 33 22 33 22 0 0
<01C001C000014001400003400340000320032000032003200006200620000630
 06300006100610000C100C18000C180C18000C180C08001808180C00180C180C
 00180C1804003004300600300630060030023002006002600300600260030060
 01600100C001400180C001C00180>] bdef
/Y [16 0 0 16 22 16 22 0 0
<018001800180018001800180018001800180018001800340034006200E300C10
 1818380C30046006E0034002>] bdef
/a [15 2 0 15 16 13 16 -2 0
<7C70E658C140C0C0C0C0C0C060C038C007C000C000C000C0408060C035800F00
 >] bdef
/b [18 3 0 16 24 13 24 -3 0
<DF00F1C0C060C030C030C018C018C018C018C018C018C018A0309070CDE0C380
 C000C000C000C000C000C000C000C000>] bdef
/c [14 2 0 13 16 11 16 -2 0
<0E803DE070406000C000C000C000C000C000C000C0006000600030001CA007E0
 >] bdef
/d [18 2 0 15 24 13 24 -2 0
<0E183D9870486028C018C018C018C018C018C018C0186018601830181C7807D8
 00180018001800180018001800180018>] bdef
/e [16 2 0 14 16 12 16 -2 0
<0E8035E060406000C000C000C000C0008550FFF0C0104030602030601AC00700
 >] bdef
/i [8 3 0 5 22 2 22 -3 0
<C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C000000000C0C0>] bdef
/m [28 3 0 25 16 22 16 -3 0
<C0300CC0300CC0300CC0300CC0300CC0300CC0300CC0300CC0300CC0300CC030
 0CC0300CA0280890240CCD6358C3C0F0>] bdef
/n [18 3 0 15 16 12 16 -3 0
<C030C030C030C030C030C030C030C030C030C030C030C030A0209030CD60C3C0
 >] bdef
/o [18 2 0 16 16 14 16 -2 0
<0F803D60303060186018C00CC00CC00CC00CC00CC00C6018601830301AF007C0
 >] bdef
/p [18 3 -8 16 16 13 24 -3 8
<C000C000C000C000C000C000C000C000DF00F1C0C060C030C030C018C018C018
 C018C018C018C018A0309070CDE0C380>] bdef
/r [11 3 0 11 16 8 16 -3 0
<C0C0C0C0C0C0C0C0C0C0C0A090D8CFC3>] bdef
/s [13 2 0 11 16 9 16 -2 0
<FC00D700030001800180018003001F007C006000C000C000C000600075801F80
 >] bdef
/t [11 0 0 11 21 11 21 0 0
<07000DC0186008001800180018001800180018001800180018001800FFC0BD40
 18001800180018001800>] bdef
/v [15 1 0 14 16 13 16 -1 0
<0700050005000C800C80088018C01840104030603020203060306010C018C018
 >] bdef
/w [25 1 0 24 16 23 16 -1 0
<0E01C00A01400A014009012019032019833010821030861030C61830C6086044
 08604C0C606C04C02804C02806C03806>] bdef
  end

/BuildGlyph {GlobalBuildGlyph} bdef
/BuildChar {GlobalBuildChar} bdef

/imageMaskMatrix [1 0 0 1 0 0] bdef

currentdict

end

/Syntax8.Scn.Fnt exch definefont pop


OberonInit
save

%%EndProlog
%%Page: 0 0

%deinit

  -152 -18 translate % Pluto portrait
  1 .24 div dup scale % A4

/number (236) def
/date (June 1995) def

/reencsmalldict 12 dict def
/ReEncodeSmall {
  reencsmalldict begin
  /newcodesandnames exch def
  /newfontname exch def
  /basefontname exch def

  /basefontdict basefontname findfont def
  /newfont basefontdict maxlength dict def
	
  basefontdict
  { exch dup /FID ne
    { dup /Encoding eq
      { exch dup length array copy
      newfont 3 1 roll put }
      { exch newfont 3 1 roll put }
      ifelse 
    }
    { pop pop }
    ifelse
  } forall
  
  newfont /FontName newfontname put
  newcodesandnames aload pop
  newcodesandnames length 2 idiv
  { newfont /Encoding get 3 1 roll put }
  repeat

  newfontname newfont definefont pop
  end
} def

/newVector [
  8#200 /Ccedilla
  8#201 /udieresis
  8#202 /eacute
  8#203 /acircumflex
  8#204 /aumlaut
  8#205 /agrave
  8#206 /aring
  8#207 /ccedilla
  8#210 /ecircumflex
  8#211 /eumlaut
  8#212 /egrave
  8#213 /iumlaut
  8#214 /icircumflex
  8#215 /igrave
  8#216 /Aumlaut
  8#217 /Aring
  8#220 /Eacute
  8#221 /aeligature
  8#222 /AEligature
  8#223 /ocircumflex
  8#224 /odieresis
  8#225 /ograve
  8#226 /ucircumflex
  8#227 /ugrave
  8#230 /yumlaut
  8#231 /Oumlaut
  8#232 /Uumlaut
  ] def

/ETHlogo {
%  /s exch def
%  /y exch def
%  /x exch def
  newpath
  0 0 moveto
  60 200 rt      % upper left corner
  483 0 rt       % 485 would be correct, but ...
  -20 -75 rt     % down in 'H' letter
  20 0 rt        %
  24 75 rt       % up in 'H' letter
  93 0 rt        % upper right corner
  -60 -200 rt    % lower right corner
  -93 0 rt       %
  20 75 rt       % up in 'H' letter
  -20 0 rt       %
  -24 -75 rt     % down in 'H' letter
  -93 0 rt       %
  42 140 rt      % up at left side of 'H'
  -60 0 rt       %
  -42 -140 rt    % down at right side of 'T'
  -90 0 rt       %
  42 140 rt      % up at left side of 'T'
  -140 0 rt      % 
  -4 -15 rt      %
  80 0 rt        %
  -15 -50 rt     %
  -80 0 rt       %
  -4 -15 rt      %
  100 0 rt       %
  -18 -60 rt     %
  closepath
  fill
} def

0.3 mm setlinewidth

% top line
newpath 15 mm 270 mm moveto 180 mm 0 rt stroke

% logo
gsave
15 mm 250 mm translate
.16 .16 scale
ETHlogo
grestore

/Helvetica /Helvetica-New newVector ReEncodeSmall
/Helvetica-Bold /Helvetica-Bold-New newVector ReEncodeSmall

/sl {15 mm yline moveto show} def
/sr {105 mm yline moveto show} def
/sm {dup stringwidth pop 2 div 90 mm exch sub 15 mm add yline moveto show} def 
/lf {/yline yline 18 1.2 mul sub def} def

/yline 240 mm def
/Helvetica-New findfont 18 scalefont setfont
(Eidgen\224ssische) sl (Departement Informatik) sr lf
(Technische Hochschule) sl (Institut f\201r) sr lf
(Z\201rich) sl (Computersysteme) sr lf

/author {/Helvetica-New findfont 18 scalefont setfont 15 mm yline moveto show} def
/title {/Helvetica-Bold-New findfont 18 scalefont setfont 105 mm yline moveto show /yline yline 18 1.2 mul sub def} def
/subtitle {/Helvetica-Bold-New findfont 16 scalefont setfont 105 mm yline moveto show /yline yline 16 1.2 mul sub def} def
/nextAuthor {/yline yline 25 sub def} def

/yline 185 mm def

(Niklaus Wirth) author
(Lola System Notes) title

/Helvetica-New findfont 18 scalefont setfont
% middle line
newpath 15 mm 200 mm moveto 180 mm 0 rt stroke

% date
/yline 70 mm def
date sl

% report number
/yline 40 mm def
number sm

% bottom line
newpath 15 mm 30 mm moveto 180 mm 0 rt stroke
1 p

%%Page: 0 1
2105 3224 m (Syntax10.Scn.Fnt) f (0) s
177 3119 m (Syntax12.Scn.Fnt) f (Institut f\205r Computersysteme, ETH Z\205rich) s
1877 3119 m (3. 6. 1995) s
910 2979 m (Syntax16m.Scn.Fnt) f (Lola System Notes) s
1069 2879 m (Syntax12.Scn.Fnt) f (N. Wirth) s
236 2779 m (Syntax12m.Scn.Fnt) f (Abstract) s
236 2696 m (Syntax12.Scn.Fnt) f (These) s
355 2696 m (notes) s
469 2696 m (describe) s
634 2696 m (the) s
706 2696 m (Lola) s
794 2696 m (System,) s
948 2696 m (a) s
981 2696 m (collection) s
1172 2696 m (of) s
1221 2696 m (tools) s
1323 2696 m (supporting) s
1535 2696 m (the) s
1607 2696 m (design) s
1738 2696 m (of) s
1787 2696 m (digital) s
1912 2696 m (circuits.) s
236 2636 m (Rather) s
381 2636 m (than) s
491 2636 m (a) s
537 2636 m (manual) s
704 2636 m (for) s
781 2636 m (the) s
866 2636 m (user,) s
979 2636 m (they) s
1082 2636 m (are) s
1164 2636 m (an) s
1234 2636 m (explanation) s
1475 2636 m (of) s
1536 2636 m (the) s
1620 2636 m (system's) s
1795 2636 m (structure) s
1984 2636 m (and) s
236 2576 m (algorithms,) s
458 2576 m (intended) s
637 2576 m (as) s
689 2576 m (a) s
724 2576 m (guide) s
840 2576 m (to) s
892 2576 m (the) s
966 2576 m (implementor) s
1224 2576 m (of) s
1275 2576 m (additional) s
1475 2576 m (tools.) s
1589 2576 m (Such) s
1694 2576 m (tools) s
1797 2576 m (are) s
1867 2576 m (integrated) s
236 2516 m (into the Lola System by their use of the common data structure representing digital circuits.) s
236 2416 m (Syntax12m.Scn.Fnt) f (Contents) s
295 2333 m (Syntax12.Scn.Fnt) f (0. Introduction) s
295 2273 m (1. The basic data structure) s
295 2213 m (2. Basic operations) s
295 2153 m (3. Generating the data structure by program) s
295 2093 m (4. Generating the data structure through a compiler) s
295 2033 m (5. The compiler's object code) s
295 1973 m (6. Interpretation of the compiled data structure) s
295 1913 m (7. Circuit simulation) s
295 1853 m (8. Circuit implementation) s
295 1793 m (9. Fuse-map generation for a PLD) s
295 1733 m (10. The GAL circuit board for Ceres and loading the fuse map) s
295 1673 m (11. Converting expressions into normal form) s
295 1613 m (12. References) s
295 1553 m (13. Program Listings) s
177 1413 m (Syntax12m.Scn.Fnt) f (0. Introduction) s
177 1330 m (Syntax12.Scn.Fnt) f (The) s
272 1330 m (Lola) s
375 1330 m (System) s
534 1330 m (is) s
589 1330 m (a) s
637 1330 m (toolbox) s
805 1330 m (consisting) s
1016 1330 m (of) s
1080 1330 m (various) s
1238 1330 m (modules) s
1426 1330 m (whose) s
1573 1330 m (commands) s
1808 1330 m (serve) s
1927 1330 m (to) s
1992 1330 m (specify,) s
177 1270 m (implement,) s
412 1270 m (and) s
502 1270 m (test) s
588 1270 m (digital) s
721 1270 m (circuits.) s
883 1270 m (These) s
1009 1270 m (notes) s
1130 1270 m (explain) s
1283 1270 m (its) s
1345 1270 m (structure) s
1530 1270 m (to) s
1588 1270 m (the) s
1668 1270 m (user) s
1766 1270 m (of) s
1823 1270 m (Lola) s
1919 1270 m (and) s
2008 1270 m (to) s
2065 1270 m (the) s
177 1210 m (implementer) s
434 1210 m (of) s
487 1210 m (additional) s
689 1210 m (tools.) s
806 1210 m (The) s
890 1210 m (system's) s
1056 1210 m (base) s
1154 1210 m (is) s
1197 1210 m (a) s
1233 1210 m (module) s
1392 1210 m (containing) s
1603 1210 m (the) s
1678 1210 m (definition) s
1872 1210 m (of) s
1924 1210 m (the) s
1999 1210 m (central) s
177 1150 m (data) s
272 1150 m (structure) s
452 1150 m (used) s
554 1150 m (to) s
607 1150 m (describe) s
774 1150 m (digital) s
902 1150 m (circuits.) s
1059 1150 m (Its) s
1117 1150 m (name) s
1238 1150 m (is) s
1281 1150 m (Syntax12i.Scn.Fnt) f (LSB) s
1354 1150 m (Syntax12.Scn.Fnt) f (\(Lola) s
1460 1150 m (System) s
1606 1150 m (Base\).) s
1731 1150 m (Typically,) s
1910 1150 m (such) s
2010 1150 m (a) s
2045 1150 m (data) s
177 1090 m (structure) s
361 1090 m (is) s
408 1090 m (generated) s
610 1090 m (from) s
720 1090 m (a) s
760 1090 m (Lola) s
855 1090 m (text) s
943 1090 m (by) s
1004 1090 m (the) s
1083 1090 m (compiler,) s
1276 1090 m (and) s
1365 1090 m (thereafter) s
1564 1090 m (used) s
1670 1090 m (as) s
1727 1090 m (argument) s
1927 1090 m (for) s
1997 1090 m (further) s
177 1030 m (processing) s
388 1030 m (steps,) s
508 1030 m (such) s
611 1030 m (as) s
666 1030 m (simplification,) s
944 1030 m (analysis,) s
1112 1030 m (comparison,) s
1357 1030 m (simulation,) s
1581 1030 m (and) s
1667 1030 m (layout) s
1796 1030 m (generation.) s
2021 1030 m (Fig.) s
2101 1030 m (1) s
177 970 m (gives an overview of the described components and their interdependence.) s
1152 723 1 95 l
416 819 191 1 l
606 819 1 95 l
416 913 191 1 l
416 819 1 95 l
1056 563 191 1 l
1246 563 1 95 l
1056 657 191 1 l
1056 563 1 95 l
736 819 191 1 l
926 819 1 95 l
736 913 191 1 l
736 819 1 95 l
1056 819 191 1 l
1246 819 1 95 l
1056 913 191 1 l
1056 819 1 95 l
1376 819 191 1 l
1566 819 1 95 l
1376 913 191 1 l
1376 819 1 95 l
1152 659 3 63 l
495 787 m (Elektra.Scn.Fnt) f (:) s
815 787 m (:) s
1135 787 m (:) s
1455 787 m (:) s
1775 787 m (:) s
1119 595 m (Syntax10.Scn.Fnt) f (LSB) s
832 723 1 95 l
1472 723 1 95 l
1792 723 1 95 l
512 723 1279 3 l
1071 851 m (Checker) s
1743 851 m (DNF) s
1696 819 191 1 l
1886 819 1 95 l
1696 913 191 1 l
1696 819 1 95 l
1439 851 m (GAL) s
743 851 m (Simulator) s
463 851 m (Lola) s
512 723 1 95 l
758 495 m (Syntax12.Scn.Fnt) f (Fig. 1. Module structure of the Lola system) s
177 412 m (First) s
268 412 m (we) s
335 412 m (describe) s
499 412 m (the) s
571 412 m (basic) s
675 412 m (data) s
767 412 m (structure) s
944 412 m (representing) s
1186 412 m (circuits) s
1329 412 m (and) s
1411 412 m (serving) s
1551 412 m (as) s
1601 412 m (the) s
1673 412 m (common) s
1855 412 m (ground) s
2001 412 m (for) s
2065 412 m (the) s
177 352 m (various) s
320 352 m (tools.) s
433 352 m (Then) s
538 352 m (follows) s
683 352 m (an) s
741 352 m (explanation) s
970 352 m (of) s
1018 352 m (some) s
1130 352 m (basic) s
1233 352 m (operations) s
1440 352 m (on) s
1500 352 m (the) s
1571 352 m (structure,) s
1757 352 m (operations) s
1964 352 m (provided) s
177 292 m (in) s
228 292 m (module) s
387 292 m (LSB.) s
481 292 m (A) s
522 292 m (brief) s
620 292 m (chapter) s
773 292 m (shows) s
903 292 m (how) s
999 292 m (the) s
1073 292 m (structure) s
1252 292 m (can) s
1331 292 m (be) s
1390 292 m (generated) s
1587 292 m (by) s
1643 292 m (programs) s
1833 292 m (formulated) s
2054 292 m (in) s
2104 292 m (a) s
177 232 m (programming) s
444 232 m (language) s
622 232 m (such) s
720 232 m (as) s
770 232 m (Oberon.) s
935 232 m (The) s
1015 232 m (programs) s
1203 232 m (are) s
1272 232 m (supported) s
1472 232 m (by) s
1525 232 m (an) s
1582 232 m (appropriate) s
1807 232 m (auxiliary) s
1971 232 m (module,) s
1 p
%%Page: 0 2
2105 3224 m (Syntax10.Scn.Fnt) f (1) s
177 3119 m (Syntax12.Scn.Fnt) f (a package of function procedures allowing a concise formulation of expressions.) s
177 3036 m (A) s
216 3036 m (much) s
337 3036 m (preferable) s
536 3036 m (way) s
621 3036 m (is) s
662 3036 m (to) s
713 3036 m (specifiy) s
860 3036 m (circuits) s
1004 3036 m (in) s
1053 3036 m (a) s
1087 3036 m (suitable) s
1244 3036 m (hardware) s
1432 3036 m (description) s
1650 3036 m (language,) s
1839 3036 m (such) s
1937 3036 m (as) s
1987 3036 m (Lola) s
2075 3036 m ([1,) s
177 2976 m (2].) s
246 2976 m (This) s
339 2976 m (approach) s
529 2976 m (requires) s
695 2976 m (the) s
772 2976 m (availability) s
981 2976 m (of) s
1035 2976 m (a) s
1073 2976 m (compiler,) s
1264 2976 m (and) s
1351 2976 m (has) s
1431 2976 m (the) s
1508 2976 m (advantage) s
1711 2976 m (that) s
1802 2976 m (the) s
1879 2976 m (compiler) s
2060 2976 m (can) s
177 2916 m (perform) s
346 2916 m (various) s
495 2916 m (consistency) s
723 2916 m (checks.) s
875 2916 m (We) s
959 2916 m (refrain) s
1098 2916 m (from) s
1207 2916 m (describing) s
1413 2916 m (the) s
1491 2916 m (compiler) s
1673 2916 m (in) s
1727 2916 m (any) s
1809 2916 m (details) s
1946 2916 m (here,) s
2055 2916 m (and) s
177 2856 m (instead) s
332 2856 m (concentrate) s
572 2856 m (on) s
643 2856 m (explaining) s
855 2856 m (its) s
919 2856 m (output.) s
1078 2856 m (This) s
1174 2856 m (is) s
1223 2856 m (again) s
1343 2856 m (a) s
1385 2856 m (data) s
1486 2856 m (structure) s
1672 2856 m (representing) s
1923 2856 m (the) s
2004 2856 m (source) s
177 2796 m (program) s
351 2796 m (in) s
402 2796 m (a) s
438 2796 m (form) s
544 2796 m (suitable) s
703 2796 m (for) s
770 2796 m (processing,) s
989 2796 m (namely) s
1139 2796 m (for) s
1206 2796 m (expanding) s
1413 2796 m (it,) s
1463 2796 m (according) s
1657 2796 m (to) s
1709 2796 m (given) s
1819 2796 m (parameters,) s
2051 2796 m (into) s
177 2736 m (the data structure mentioned above.) s
177 2653 m (The) s
258 2653 m (description) s
476 2653 m (of) s
526 2653 m (the) s
599 2653 m (basic) s
704 2653 m (data) s
797 2653 m (structure) s
975 2653 m (is) s
1016 2653 m (followed) s
1190 2653 m (by) s
1245 2653 m (two) s
1329 2653 m (examples) s
1516 2653 m (of) s
1566 2653 m (applications) s
1801 2653 m (that) s
1888 2653 m (are) s
1957 2653 m (based) s
2076 2653 m (on) s
177 2593 m (that) s
267 2593 m (data) s
363 2593 m (structure.) s
555 2593 m (The) s
639 2593 m (first) s
725 2593 m (application) s
946 2593 m (tool) s
1035 2593 m (is) s
1078 2593 m (a) s
1114 2593 m (program) s
1288 2593 m (to) s
1341 2593 m (simulate) s
1515 2593 m (synchronous,) s
1774 2593 m (digital) s
1902 2593 m (circuits.) s
2059 2593 m (We) s
177 2533 m (note that this ) s
(Syntax12i.Scn.Fnt) f (Simulator) s
(Syntax12.Scn.Fnt) f ( imports ) s
(Syntax12i.Scn.Fnt) f (LSB) s
(Syntax12.Scn.Fnt) f ( only, as do also the subsequently described tools.) s
177 2450 m (Circuit) s
321 2450 m (implementation) s
642 2450 m (for) s
715 2450 m (a) s
757 2450 m (field-programmable) s
1158 2450 m (gate) s
1255 2450 m (array) s
1365 2450 m (\(FPGA\)) s
1516 2450 m (is) s
1564 2450 m (performed) s
1780 2450 m ("by) s
1856 2450 m (hand") s
1985 2450 m (using) s
2104 2450 m (a) s
177 2390 m (layout) s
303 2390 m (editor) s
425 2390 m (described) s
614 2390 m (in) s
662 2390 m ([3,) s
724 2390 m (4].) s
787 2390 m (The) s
867 2390 m (connection) s
1086 2390 m (between) s
1257 2390 m (the) s
1329 2390 m (circuit's) s
1480 2390 m (specification) s
1722 2390 m (in) s
1770 2390 m (Lola) s
1858 2390 m (and) s
1940 2390 m (the) s
2012 2390 m (layout) s
177 2330 m (is) s
221 2330 m (established) s
443 2330 m (by) s
501 2330 m (a) s
538 2330 m (tool) s
627 2330 m (called) s
750 2330 m (Syntax12i.Scn.Fnt) f (Checker) s
902 2330 m (Syntax12.Scn.Fnt) f ([5].) s
985 2330 m (This) s
1076 2330 m (program) s
1250 2330 m (checks) s
1388 2330 m (the) s
1463 2330 m (consistency) s
1688 2330 m (of) s
1740 2330 m (the) s
1815 2330 m (presented) s
2012 2330 m (layout) s
177 2270 m (and) s
259 2270 m (the) s
331 2270 m (Lola) s
419 2270 m (specification) s
661 2270 m (by) s
715 2270 m (comparing) s
926 2270 m (the) s
998 2270 m (data) s
1090 2270 m (structure) s
1266 2270 m (compiled) s
1450 2270 m (from) s
1552 2270 m (the) s
1623 2270 m (Lola) s
1710 2270 m (program) s
1880 2270 m (with) s
1974 2270 m (the) s
2045 2270 m (data) s
177 2210 m (structure extracted from the layout.) s
177 2127 m (An) s
241 2127 m (example) s
411 2127 m (of) s
461 2127 m (a) s
495 2127 m (tool) s
581 2127 m (for) s
646 2127 m (the) s
719 2127 m (fully) s
810 2127 m (automatic) s
1010 2127 m (generation) s
1220 2127 m (of) s
1269 2127 m (an) s
1327 2127 m (implementation) s
1639 2127 m (is) s
1679 2127 m (module) s
1835 2127 m (Syntax12i.Scn.Fnt) f (GAL.) s
1924 2127 m (Syntax12.Scn.Fnt) f (Its) s
1979 2127 m (target) s
2097 2127 m (is) s
177 2067 m (the) s
251 2067 m (PLD) s
339 2067 m (GAL22V10B,) s
586 2067 m (i.e.) s
654 2067 m (its) s
710 2067 m (output) s
850 2067 m (is) s
892 2067 m (the) s
966 2067 m (fuse) s
1056 2067 m (map) s
1154 2067 m (for) s
1220 2067 m (that) s
1308 2067 m (PLD.) s
1407 2067 m (The) s
1488 2067 m (module) s
1645 2067 m (also) s
1731 2067 m (contains) s
1900 2067 m (a) s
1934 2067 m (command) s
177 2007 m (for) s
242 2007 m (downloading) s
498 2007 m (the) s
571 2007 m (generated) s
767 2007 m (data.) s
871 2007 m (The) s
952 2007 m (circuit,) s
1089 2007 m (in) s
1138 2007 m (order) s
1250 2007 m (to) s
1301 2007 m (be) s
1359 2007 m (implementable) s
1654 2007 m (on) s
1716 2007 m (this) s
1795 2007 m (device,) s
1931 2007 m (must) s
2038 2007 m (obey) s
177 1947 m (certain) s
315 1947 m (restrictions.) s
541 1947 m (In) s
590 1947 m (particular,) s
788 1947 m (the) s
860 1947 m (combinational) s
1141 1947 m (parts) s
1243 1947 m (of) s
1291 1947 m (the) s
1362 1947 m (circuit) s
1487 1947 m (must) s
1593 1947 m (be) s
1649 1947 m (denoted) s
1813 1947 m (by) s
1866 1947 m (expressions) s
2089 1947 m (in) s
177 1887 m (disjunctive) s
390 1887 m (normal) s
542 1887 m (form.) s
661 1887 m (Another) s
828 1887 m (tool) s
918 1887 m (called) s
1042 1887 m (Syntax12i.Scn.Fnt) f (DNF) s
1138 1887 m (Syntax12.Scn.Fnt) f (serves) s
1264 1887 m (to) s
1319 1887 m (convert) s
1472 1887 m (an) s
1534 1887 m (arbitray) s
1689 1887 m (expression) s
1900 1887 m (into) s
1990 1887 m (normal) s
177 1827 m (form.) s
177 1707 m (Syntax12m.Scn.Fnt) f (1. The Basic Data Structure) s
177 1607 m (Syntax12.Scn.Fnt) f (Systems) s
342 1607 m (are) s
415 1607 m (said) s
504 1607 m (to) s
558 1607 m (be) s
619 1607 m (Syntax12i.Scn.Fnt) f (integrated,) s
823 1607 m (Syntax12.Scn.Fnt) f (if) s
863 1607 m (various) s
1010 1607 m (programs) s
1202 1607 m (operate) s
1358 1607 m (on) s
1423 1607 m (a) s
1460 1607 m (common) s
1645 1607 m (data) s
1740 1607 m (structure.) s
1931 1607 m (In) s
1983 1607 m (Oberon) s
177 1547 m ([6],) s
261 1547 m (the) s
338 1547 m (role) s
426 1547 m (of) s
480 1547 m (programs) s
673 1547 m (is) s
718 1547 m (taken) s
838 1547 m (over) s
933 1547 m (by) s
992 1547 m (commands,) s
1227 1547 m (i.e.) s
1298 1547 m (by) s
1357 1547 m (procedures) s
1579 1547 m (declared) s
1752 1547 m (in) s
1805 1547 m (various) s
1953 1547 m (modules.) s
177 1487 m (Hence,) s
322 1487 m (these) s
438 1487 m (modules) s
617 1487 m (import) s
762 1487 m (data) s
860 1487 m (types) s
971 1487 m (and) s
1058 1487 m (the) s
1135 1487 m (data) s
1232 1487 m (structure) s
1414 1487 m (from) s
1522 1487 m (a) s
1560 1487 m (common) s
1747 1487 m (base) s
1847 1487 m (module.) s
2019 1487 m (These) s
177 1427 m (types) s
286 1427 m (define) s
416 1427 m (the) s
491 1427 m (elements) s
674 1427 m (of) s
725 1427 m (the) s
799 1427 m (shared) s
936 1427 m (data) s
1030 1427 m (structure.) s
1220 1427 m (Here) s
1322 1427 m (the) s
1396 1427 m (base) s
1493 1427 m (module) s
1651 1427 m (is) s
1693 1427 m (called) s
1814 1427 m (Syntax12i.Scn.Fnt) f (LSB) s
1887 1427 m (Syntax12.Scn.Fnt) f (\(Lola) s
1993 1427 m (System) s
177 1367 m (Base\).) s
302 1367 m (Apart) s
416 1367 m (from) s
521 1367 m (the) s
595 1367 m (types,) s
713 1367 m (the) s
787 1367 m (module) s
945 1367 m (also) s
1032 1367 m (exports) s
1181 1367 m (a) s
1216 1367 m (few) s
1297 1367 m (basic) s
1403 1367 m (procedures) s
1622 1367 m (generating) s
1831 1367 m (elements) s
2014 1367 m (of) s
2065 1367 m (the) s
177 1307 m (structure or operating on it.) s
177 1224 m (A) s
215 1224 m (digital) s
340 1224 m (circuit) s
466 1224 m (consists) s
622 1224 m (of) s
671 1224 m (gates) s
777 1224 m (and) s
859 1224 m (connecting) s
1075 1224 m (wires.) s
1195 1224 m (Abstractly) s
1386 1224 m (it) s
1423 1224 m (is) s
1462 1224 m (represented) s
1691 1224 m (by) s
1744 1224 m (a) s
1776 1224 m (graph) s
1893 1224 m (consisting) s
2088 1224 m (of) s
177 1164 m (nodes \(gates\) and edges \(wires, signals\). The pertinent data types are defined as) s
330 1081 m (Signal =) s
601 1081 m (POINTER TO SignalDesc;) s
330 1021 m (SignalDesc =) s
601 1021 m (RECORD x, y: Signal;) s
672 961 m (fct, val, u, v: SHORTINT) s
601 901 m (END) s
177 818 m (Attribute) s
353 818 m (Syntax12i.Scn.Fnt) f (fct) s
409 818 m (Syntax12.Scn.Fnt) f (denotes) s
566 818 m (the) s
637 818 m (kind) s
730 818 m (of) s
778 818 m (gate) s
866 818 m (\(operator\)) s
1067 818 m (represented) s
1296 818 m (by) s
1349 818 m (a) s
1381 818 m (node,) s
1496 818 m (such) s
1593 818 m (as) s
1642 818 m (Syntax12i.Scn.Fnt) f (not,) s
1724 818 m (and,) s
1810 818 m (or.) s
1870 818 m (Syntax12.Scn.Fnt) f (The) s
1949 818 m (attributes) s
177 758 m (Syntax12i.Scn.Fnt) f (val,) s
249 758 m (u,) s
296 758 m (Syntax12.Scn.Fnt) f (and) s
379 758 m (Syntax12i.Scn.Fnt) f (v) s
411 758 m (Syntax12.Scn.Fnt) f (are) s
481 758 m (used) s
581 758 m (for) s
646 758 m (various) s
790 758 m (purposes) s
970 758 m (by) s
1025 758 m (various) s
1169 758 m (commands,) s
1400 758 m (and) s
1483 758 m (no) s
1545 758 m (common) s
1727 758 m (meaning) s
1902 758 m (is) s
1942 758 m (attributed) s
177 698 m (to) s
229 698 m (them) s
342 698 m (by) s
398 698 m (the) s
472 698 m (base) s
569 698 m (module.) s
738 698 m (The) s
820 698 m (following) s
1007 698 m (constants) s
1197 698 m (are) s
1268 698 m (defined) s
1421 698 m (in) s
1471 698 m (module) s
1628 698 m (LSB) s
1709 698 m (as) s
1760 698 m (values) s
1886 698 m (for) s
1951 698 m (Syntax12i.Scn.Fnt) f (fct.) s
2019 698 m (Syntax12.Scn.Fnt) f (These) s
177 638 m (values) s
311 638 m (mirror) s
451 638 m (the) s
532 638 m (operators) s
728 638 m (available) s
908 638 m (in) s
965 638 m (the) s
1046 638 m (language) s
1233 638 m (Lola.) s
1341 638 m (Syntax12i.Scn.Fnt) f (sr) s
1392 638 m (Syntax12.Scn.Fnt) f (stands) s
1531 638 m (for) s
1604 638 m (set-reset) s
1791 638 m (latch,) s
1912 638 m (and) s
2003 638 m (Syntax12i.Scn.Fnt) f (tsg) s
2073 638 m (Syntax12.Scn.Fnt) f (for) s
177 578 m (tri-state gate. The significance of ) s
(Syntax12i.Scn.Fnt) f (mux1, reg1,) s
(Syntax12.Scn.Fnt) f ( and ) s
(Syntax12i.Scn.Fnt) f (link) s
(Syntax12.Scn.Fnt) f ( is explained further below.) s
342 495 m (Syntax10.Scn.Fnt) f (buf = 7) s
601 495 m (not = 8) s
838 495 m (and = 9) s
1074 495 m (or = 10) s
1334 495 m (xor = 11) s
342 435 m (mux = 12) s
601 435 m (mux1 = 13) s
838 435 m (reg = 14) s
1074 435 m (reg1 = 15) s
342 375 m (latch = 16) s
601 375 m (sr = 17) s
838 375 m (tsg = 18) s
1074 375 m (link = 19) s
1 p
%%Page: 0 3
2105 3224 m (Syntax10.Scn.Fnt) f (2) s
177 3119 m (Syntax12.Scn.Fnt) f (The) s
264 3119 m (leaves) s
392 3119 m (of) s
448 3119 m (a) s
488 3119 m (circuit) s
620 3119 m (graph) s
744 3119 m (are) s
819 3119 m (special) s
961 3119 m (nodes) s
1090 3119 m (carrying) s
1253 3119 m (a) s
1292 3119 m (name) s
1416 3119 m (representing) s
1664 3119 m (an) s
1728 3119 m (input) s
1845 3119 m (signal) s
1969 3119 m (or) s
2026 3119 m (input) s
177 3059 m (variable:) s
330 2976 m (Variable =) s
601 2976 m (POINTER TO VarDesc;) s
330 2916 m (Name =) s
601 2916 m (ARRAY 7 OF CHAR;) s
330 2856 m (VarDesc =) s
601 2856 m (RECORD \(SignalDesc\)) s
672 2796 m (name: Name;) s
672 2736 m (class: SHORTINT;) s
672 2676 m (next, dsc: Variable) s
601 2616 m (END) s
177 2533 m (An) s
241 2533 m (example) s
410 2533 m (of) s
459 2533 m (a) s
492 2533 m (simple) s
627 2533 m (circuit) s
753 2533 m (is) s
793 2533 m (shown) s
929 2533 m (in) s
977 2533 m (Fig) s
1042 2533 m (2.) s
1089 2533 m (In) s
1138 2533 m (addition) s
1304 2533 m (to) s
1354 2533 m (its) s
1408 2533 m (representation) s
1688 2533 m (by) s
1742 2533 m (a) s
1775 2533 m (schematic) s
1973 2533 m (diagram) s
177 2473 m (and) s
261 2473 m (by) s
316 2473 m (a) s
350 2473 m (LSB-data) s
537 2473 m (structure) s
715 2473 m (its) s
770 2473 m (formulation) s
1005 2473 m (as) s
1056 2473 m (an) s
1115 2473 m (expression) s
1323 2473 m (is) s
1364 2473 m (also) s
1450 2473 m (shown.) s
1598 2473 m (For) s
1671 2473 m (variables,) s
1853 2473 m (the) s
1926 2473 m (\(inherited\)) s
177 2413 m (field) s
273 2413 m (Syntax12i.Scn.Fnt) f (fct) s
333 2413 m (Syntax12.Scn.Fnt) f (indicates) s
512 2413 m (the) s
588 2413 m (variable's) s
771 2413 m (data) s
867 2413 m (type.) s
971 2413 m (Syntax12i.Scn.Fnt) f (BIT,) s
1051 2413 m (TS,) s
1117 2413 m (Syntax12.Scn.Fnt) f (and) s
1203 2413 m (Syntax12i.Scn.Fnt) f (OC) s
1273 2413 m (Syntax12.Scn.Fnt) f (stand) s
1389 2413 m (for) s
1456 2413 m (binary,) s
1595 2413 m (tri-state,) s
1773 2413 m (and) s
1858 2413 m (open) s
1967 2413 m (collector) s
177 2353 m (respectively. The following constants are defined in module LSB:) s
342 2270 m (Syntax10.Scn.Fnt) f (bit = 0) s
601 2270 m (ts = 1) s
838 2270 m (oc = 2) s
1074 2270 m (array = 4) s
1334 2270 m (record = 5) s
843 1936 m (Elektra.Scn.Fnt) f (.) s
751 1884 m (0) s
743 1904 m (,) s
743 1968 m (,) s
671 1904 m (.) s
551 1904 m (,) s
559 1864 m (3) s
655 1904 m (!) s
1051 1840 m (.) s
943 1788 m (1) s
951 1872 m (,) s
951 1808 m (,) s
843 1744 m (.) s
751 1692 m (0) s
743 1712 m (,) s
743 1776 m (,) s
496 1912 63 1 l
672 1912 79 1 l
400 1784 351 1 l
400 1976 351 1 l
848 1944 47 1 l
896 1880 1 63 l
896 1880 63 1 l
848 1752 47 1 l
896 1752 1 63 l
896 1816 63 1 l
1056 1848 47 1 l
367 1704 m (Syntax10.Scn.Fnt) f (x) s
367 1768 m (s) s
367 1960 m (y) s
495 2072 m (~s*x + s*y) s
1520 1976 127 1 l
1646 1976 1 127 l
1520 2102 127 1 l
1520 1976 1 127 l
1520 2040 127 1 l
1584 2104 1 63 l
1328 1816 127 1 l
1454 1816 1 127 l
1328 1942 127 1 l
1328 1816 1 127 l
1328 1880 127 1 l
1567 2056 m (or) s
1392 1816 1 63 l
1232 1592 127 1 l
1358 1592 1 191 l
1232 1782 127 1 l
1232 1592 1 191 l
1232 1720 127 1 l
1296 1656 1 63 l
1776 1816 1 63 l
1712 1880 127 1 l
1712 1816 127 1 l
1838 1816 1 127 l
1712 1942 127 1 l
1712 1816 1 127 l
1584 1976 1 63 l
1359 1896 m (and) s
1743 1896 m (and) s
1232 1656 127 1 l
1424 1656 127 1 l
1550 1656 1 127 l
1424 1782 127 1 l
1424 1656 1 127 l
1424 1720 127 1 l
1488 1656 1 63 l
1616 1656 127 1 l
1680 1656 1 63 l
1616 1720 127 1 l
1616 1592 127 1 l
1742 1592 1 191 l
1616 1782 127 1 l
1616 1592 1 191 l
1808 1592 127 1 l
1934 1592 1 191 l
1808 1782 127 1 l
1808 1592 1 191 l
1808 1720 127 1 l
1872 1656 1 63 l
1808 1656 127 1 l
1263 1736 m (bit) s
1647 1736 m (bit) s
1839 1736 m (bit) s
1455 1736 m (not) s
1263 1608 m ("x") s
1647 1608 m ("s") s
1839 1608 m ("y") s
1392 2008 159 1 l
1392 1944 1 63 l
1616 2008 159 1 l
1776 1944 1 63 l
1296 1848 63 1 l
1296 1784 1 63 l
1424 1848 63 1 l
1488 1784 1 63 l
1520 1688 95 1 l
1680 1848 63 1 l
1680 1784 1 63 l
1808 1848 63 1 l
1872 1784 1 63 l
1567 2104 m (Elektra.Scn.Fnt) f (;) s
1375 1944 m (;) s
1759 1944 m (;) s
1855 1784 m (;) s
1663 1784 m (;) s
1471 1784 m (;) s
1279 1784 m (;) s
1583 1672 m (>) s
496 1784 1 127 l
400 1720 351 1 l
502 1524 m (Syntax12.Scn.Fnt) f (Fig. 2. Circuit represented by expression, schematic, and data structure) s
177 1424 m (Nodes) s
310 1424 m (contain) s
465 1424 m (fields) s
578 1424 m (x) s
614 1424 m (and) s
700 1424 m (y) s
734 1424 m (for) s
802 1424 m (operands,) s
998 1424 m (hence) s
1124 1424 m (represent) s
1312 1424 m (binary) s
1441 1424 m (operators.) s
1642 1424 m (Multiplexers) s
1888 1424 m (and) s
1973 1424 m (registers) s
177 1364 m (are operators with 3 operands. They are represented by double nodes as shown in Fig. 3.) s
563 1118 m (Syntax10.Scn.Fnt) f (MUX\(s: x, y\)) s
1092 1038 1 159 l
1156 1070 1 95 l
1091 1038 64 32 x
1091 1198 64 -32 x
1028 1166 63 1 l
1028 1070 63 1 l
1156 1118 63 1 l
979 1150 m (x) s
979 1054 m (y) s
1107 1142 m (0) s
1107 1062 m (1) s
1124 990 1 63 l
1139 990 m (s) s
1412 1070 127 1 l
1538 1070 1 127 l
1412 1196 127 1 l
1412 1070 1 127 l
1412 1134 127 1 l
1476 1070 1 63 l
1668 1070 1 63 l
1604 1134 127 1 l
1604 1070 127 1 l
1730 1070 1 127 l
1604 1196 127 1 l
1604 1070 1 127 l
1476 1198 1 63 l
1508 1102 95 1 l
1444 1006 1 95 l
1636 1006 1 95 l
1700 1006 1 95 l
1459 990 m (s) s
1651 990 m (x) s
1715 990 m (y) s
1571 1086 m (Elektra.Scn.Fnt) f (>) s
1427 1150 m (Syntax10.Scn.Fnt) f (mux) s
1619 1150 m (mux1) s
563 798 m (REG\(ck: en, d\)) s
1092 734 95 1 l
1186 734 1 143 l
1092 876 95 1 l
1092 734 1 143 l
1028 846 63 1 l
1028 766 63 1 l
1188 846 63 1 l
1107 830 m (Syntax8.Scn.Fnt) f (D) s
1155 830 m (Q) s
979 830 m (Syntax10.Scn.Fnt) f (d) s
971 750 m (en) s
1140 686 1 47 l
1155 686 m (ck) s
1123 726 m (Elektra.Scn.Fnt) f (:) s
1571 766 m (>) s
1700 686 1 95 l
1636 686 1 95 l
1444 686 1 95 l
1508 782 95 1 l
1476 878 1 63 l
1604 750 127 1 l
1730 750 1 127 l
1604 876 127 1 l
1604 750 1 127 l
1604 814 127 1 l
1668 750 1 63 l
1476 750 1 63 l
1412 814 127 1 l
1412 750 127 1 l
1538 750 1 127 l
1412 876 127 1 l
1412 750 1 127 l
1459 1198 m (;) s
1459 878 m (;) s
1443 830 m (Syntax10.Scn.Fnt) f (reg) s
1619 830 m (reg1) s
1459 686 m (ck) s
1579 686 m (en) s
1715 686 m (d) s
704 606 m (Syntax12.Scn.Fnt) f (Fig. 3. Double nodes for multiplexer and register) s
177 506 m (The) s
258 506 m (fields) s
368 506 m (Syntax12i.Scn.Fnt) f (next) s
456 506 m (Syntax12.Scn.Fnt) f (and) s
539 506 m (Syntax12i.Scn.Fnt) f (dsc) s
606 506 m (Syntax12.Scn.Fnt) f (of) s
656 506 m (the) s
729 506 m (type) s
818 506 m (Syntax12i.Scn.Fnt) f (VarDesc) s
966 506 m (Syntax12.Scn.Fnt) f (serve) s
1070 506 m (to) s
1120 506 m (represent) s
1305 506 m (the) s
1377 506 m (set) s
1441 506 m (of) s
1490 506 m (variables) s
1661 506 m (occuring) s
1832 506 m (in) s
1880 506 m (a) s
1913 506 m (circuit.) s
2050 506 m (Syntax12i.Scn.Fnt) f (next) s
177 446 m (Syntax12.Scn.Fnt) f (simply) s
310 446 m (is) s
351 446 m (the) s
424 446 m (link) s
506 446 m (in) s
555 446 m (the) s
628 446 m (linear) s
745 446 m (list) s
811 446 m (of) s
861 446 m (variables.) s
1044 446 m (If) s
1082 446 m (a) s
1115 446 m (variable) s
1269 446 m (is) s
1309 446 m (structured,) s
1520 446 m (the) s
1592 446 m (field) s
1684 446 m (Syntax12i.Scn.Fnt) f (dsc) s
1750 446 m (Syntax12.Scn.Fnt) f (is) s
1790 446 m (the) s
1862 446 m (root) s
1951 446 m (of) s
2000 446 m (the) s
2072 446 m (list) s
177 386 m (of) s
228 386 m (its) s
284 386 m (components.) s
541 386 m (The) s
623 386 m (field) s
717 386 m (Syntax12i.Scn.Fnt) f (name) s
828 386 m (Syntax12.Scn.Fnt) f (of) s
879 386 m (a) s
914 386 m (component) s
1143 386 m (specifies) s
1311 386 m (the) s
1385 386 m (element's) s
1576 386 m (index) s
1691 386 m (in) s
1741 386 m (case) s
1833 386 m (of) s
1883 386 m (an) s
1942 386 m (array,) s
2055 386 m (and) s
177 326 m (the) s
257 326 m (component's) s
517 326 m (name) s
643 326 m (in) s
698 326 m (case) s
795 326 m (of) s
851 326 m (a) s
891 326 m (user-declared) s
1170 326 m (type) s
1266 326 m (\(record\).) s
1446 326 m (The) s
1533 326 m (data) s
1632 326 m (structure) s
1816 326 m (representing) s
2065 326 m (the) s
177 266 m (following variables declared in Lola is shown in Fig. 4.) s
1 p
%%Page: 0 4
2105 3224 m (Syntax10.Scn.Fnt) f (3) s
342 3119 m (Syntax12.Scn.Fnt) f (TYPE T;) s
389 3059 m (IN x: BIT; OUT y: BIT;) s
342 2999 m (BEGIN ...) s
342 2939 m (END T;) s
342 2856 m (VAR u: BIT; v: TS;) s
389 2796 m (a: [4] BIT; t0, t1: T;) s
1667 2693 m (Syntax10.Scn.Fnt) f (record) s
1283 2693 m (record) s
911 2693 m (array) s
751 2693 m (ts) s
1887 2309 m (bit) s
1695 2309 m (bit) s
1503 2309 m (bit) s
1311 2309 m (bit) s
1119 2309 m (bit) s
927 2309 m (bit) s
735 2309 m (bit) s
543 2309 m (bit) s
543 2693 m (bit) s
576 2421 351 1 l
576 2357 1 63 l
1696 2357 1 159 l
1312 2357 1 159 l
1631 2501 m (Elektra.Scn.Fnt) f (>) s
1823 2117 m (>) s
1439 2117 m (>) s
1055 2117 m (>) s
863 2117 m (>) s
671 2117 m (>) s
1247 2501 m (>) s
863 2501 m (>) s
1679 2357 m (;) s
1295 2357 m (;) s
559 2357 m (;) s
671 2501 m (>) s
1887 2181 m (Syntax10.Scn.Fnt) f ("y") s
1503 2181 m ("y") s
1695 2181 m ("x") s
1311 2181 m ("x") s
1119 2181 m ("3") s
927 2181 m ("2") s
735 2181 m ("1") s
543 2181 m ("0") s
1695 2565 m ("t1") s
1311 2565 m ("t0") s
927 2565 m ("a") s
735 2565 m ("v") s
543 2565 m ("u") s
1728 2229 1 63 l
1664 2165 127 1 l
1664 2229 127 3 l
1664 2293 127 1 l
1664 2101 127 1 l
1790 2101 1 255 l
1664 2355 127 1 l
1664 2101 1 255 l
1472 2101 127 1 l
1598 2101 1 255 l
1472 2355 127 1 l
1472 2101 1 255 l
1472 2293 127 1 l
1472 2229 127 3 l
1472 2165 127 1 l
1536 2229 1 63 l
1344 2229 1 63 l
1280 2165 127 1 l
1280 2229 127 3 l
1280 2293 127 1 l
1280 2101 127 1 l
1406 2101 1 255 l
1280 2355 127 1 l
1280 2101 1 255 l
1856 2101 127 1 l
1982 2101 1 255 l
1856 2355 127 1 l
1856 2101 1 255 l
1856 2293 127 1 l
1856 2229 127 3 l
1856 2165 127 1 l
1920 2229 1 63 l
1152 2229 1 63 l
1088 2165 127 1 l
1088 2229 127 3 l
1088 2293 127 1 l
1088 2101 127 1 l
1214 2101 1 255 l
1088 2355 127 1 l
1088 2101 1 255 l
512 2101 127 1 l
638 2101 1 255 l
512 2355 127 1 l
512 2101 1 255 l
512 2293 127 1 l
512 2229 127 3 l
512 2165 127 1 l
576 2229 1 63 l
768 2229 1 63 l
704 2165 127 1 l
704 2229 127 3 l
704 2293 127 1 l
704 2101 127 1 l
830 2101 1 255 l
704 2355 127 1 l
704 2101 1 255 l
896 2101 127 1 l
1022 2101 1 255 l
896 2355 127 1 l
896 2101 1 255 l
896 2293 127 1 l
896 2229 127 3 l
896 2165 127 1 l
960 2229 1 63 l
1728 2613 1 63 l
1664 2549 127 1 l
1664 2613 127 3 l
1664 2677 127 1 l
1664 2485 127 1 l
1790 2485 1 255 l
1664 2739 127 1 l
1664 2485 1 255 l
1280 2485 127 1 l
1406 2485 1 255 l
1280 2739 127 1 l
1280 2485 1 255 l
1280 2677 127 1 l
1280 2613 127 3 l
1280 2549 127 1 l
1344 2613 1 63 l
960 2613 1 63 l
896 2549 127 1 l
896 2613 127 3 l
896 2677 127 1 l
896 2485 127 1 l
1022 2485 1 255 l
896 2739 127 1 l
896 2485 1 255 l
704 2485 127 1 l
830 2485 1 255 l
704 2739 127 1 l
704 2485 1 255 l
704 2677 127 1 l
704 2613 127 3 l
704 2549 127 1 l
768 2613 1 63 l
319 2565 m (name) s
319 2629 m (x, y) s
319 2693 m (fct) s
576 2613 1 63 l
512 2549 127 1 l
512 2613 127 3 l
512 2677 127 1 l
512 2485 127 1 l
638 2485 1 255 l
512 2739 127 1 l
512 2485 1 255 l
576 2485 1 63 l
608 2517 95 1 l
768 2485 1 63 l
800 2517 95 1 l
960 2485 1 63 l
992 2517 287 1 l
1344 2485 1 63 l
1376 2517 287 1 l
1728 2485 1 63 l
928 2421 1 95 l
319 2501 m (dsc, next) s
319 2117 m (dsc, next) s
319 2309 m (fct) s
319 2245 m (x, y) s
319 2181 m (name) s
576 2101 1 63 l
608 2133 95 1 l
768 2101 1 63 l
800 2133 95 1 l
960 2101 1 63 l
992 2133 95 1 l
1152 2101 1 63 l
1344 2101 1 63 l
1376 2133 95 1 l
1536 2101 1 63 l
1728 2101 1 63 l
1760 2133 95 1 l
1920 2101 1 63 l
846 2033 m (Syntax12.Scn.Fnt) f (Fig. 4. Example of set of variables) s
177 1950 m (The) s
257 1950 m (\(inherited\)) s
468 1950 m (field) s
560 1950 m (Syntax12i.Scn.Fnt) f (y) s
591 1950 m (Syntax12.Scn.Fnt) f (refers) s
705 1950 m (back) s
803 1950 m (to) s
853 1950 m (the) s
925 1950 m (ancestor) s
1093 1950 m (of) s
1142 1950 m (a) s
1175 1950 m (component) s
1401 1950 m (variable,) s
1564 1950 m (i.e.) s
1629 1950 m (Syntax12i.Scn.Fnt) f (v.dsc.y) s
1753 1950 m (=) s
1788 1950 m (v) s
(Syntax12.Scn.Fnt) f (.) s
1829 1950 m (The) s
1908 1950 m (field) s
1999 1950 m (is) s
2038 1950 m (used) s
177 1890 m (to) s
228 1890 m (reconstruct) s
449 1890 m (the) s
522 1890 m (variable's) s
702 1890 m (full) s
775 1890 m (name.) s
905 1890 m (The) s
986 1890 m (field) s
1079 1890 m (Syntax12i.Scn.Fnt) f (x) s
1111 1890 m (Syntax12.Scn.Fnt) f (is) s
1152 1890 m (the) s
1225 1890 m (root) s
1315 1890 m (of) s
1365 1890 m (the) s
1438 1890 m (structure) s
1616 1890 m (which) s
1742 1890 m (defines) s
1886 1890 m (the) s
1958 1890 m (variable's) s
177 1830 m ("value",) s
325 1830 m (and) s
409 1830 m (the) s
483 1830 m (field) s
577 1830 m (Syntax12i.Scn.Fnt) f (class) s
668 1830 m (Syntax12.Scn.Fnt) f (specifies) s
836 1830 m (the) s
910 1830 m (kind) s
1006 1830 m (of) s
1057 1830 m (variable:) s
1224 1830 m (input,) s
1347 1830 m (output,) s
1497 1830 m (inout,) s
1620 1830 m (or) s
1672 1830 m (local.) s
1782 1830 m (The) s
1863 1830 m (latter,) s
1982 1830 m (and) s
2065 1830 m (the) s
177 1770 m (values of ) s
(Syntax12i.Scn.Fnt) f (x) s
(Syntax12.Scn.Fnt) f ( and ) s
(Syntax12i.Scn.Fnt) f (y) s
(Syntax12.Scn.Fnt) f ( are not shown in Fig. 4.) s
342 1687 m (Syntax10.Scn.Fnt) f (var = 0) s
601 1687 m (in = 1) s
838 1687 m (out = 2) s
1074 1687 m (io = 3) s
177 1587 m (Syntax12.Scn.Fnt) f (The representation of the following assignments is shown in Fig. 5.) s
342 1504 m (VAR x, y, z: BIT;  t: TS;  u: OC;) s
342 1444 m (x := y + z;) s
342 1384 m (t := x | y; t := z | u;) s
342 1324 m (u := y; u := z) s
1119 1046 m (Syntax10.Scn.Fnt) f (next,dsc) s
1631 742 m (z) s
1439 742 m (y) s
1152 774 1 95 l
1632 774 1 95 l
1344 1190 63 1 l
1344 934 1 255 l
1472 838 1 63 l
1408 902 127 1 l
1408 838 127 1 l
1534 838 1 127 l
1408 964 127 1 l
1408 838 1 127 l
1600 838 127 1 l
1726 838 1 127 l
1600 964 127 1 l
1600 838 1 127 l
1600 902 127 1 l
1664 838 1 63 l
1344 934 63 1 l
1504 870 95 1 l
1440 774 1 95 l
1567 854 m (Elektra.Scn.Fnt) f (>) s
1439 918 m (Syntax10.Scn.Fnt) f (link) s
1631 918 m (link) s
1151 726 m (tsg) s
959 726 m (tsg) s
1151 918 m (link) s
959 918 m (link) s
1087 854 m (Elektra.Scn.Fnt) f (>) s
895 918 m (>) s
1183 582 m (Syntax10.Scn.Fnt) f (u) s
1119 582 m (z) s
671 742 m (y) s
991 582 m (y) s
927 582 m (x) s
1216 582 1 95 l
1152 582 1 95 l
960 582 1 95 l
1024 582 1 95 l
960 774 1 95 l
1120 646 127 1 l
1246 646 1 127 l
1120 772 127 1 l
1120 646 1 127 l
1120 710 127 1 l
1184 646 1 63 l
992 646 1 63 l
928 710 127 1 l
928 646 127 1 l
1054 646 1 127 l
928 772 127 1 l
928 646 1 127 l
1024 870 95 1 l
864 934 63 1 l
736 774 1 95 l
672 774 1 95 l
1184 838 1 63 l
1120 902 127 1 l
1120 838 127 1 l
1246 838 1 127 l
1120 964 127 1 l
1120 838 1 127 l
928 838 127 1 l
1054 838 1 127 l
928 964 127 1 l
928 838 1 127 l
928 902 127 1 l
992 838 1 63 l
864 934 1 255 l
864 1190 63 1 l
607 918 m (Elektra.Scn.Fnt) f (>) s
576 934 63 1 l
576 934 1 255 l
576 1190 63 1 l
943 774 m (;) s
1135 774 m (;) s
687 918 m (Syntax10.Scn.Fnt) f (or) s
704 838 1 63 l
640 902 127 1 l
640 838 127 1 l
766 838 1 127 l
640 964 127 1 l
640 838 1 127 l
1423 1238 m (oc) s
1407 1110 m ("u") s
927 1110 m ("t") s
960 1158 1 63 l
896 1094 127 1 l
896 1158 127 3 l
896 1222 127 1 l
896 1030 127 1 l
1022 1030 1 255 l
896 1284 127 1 l
896 1030 1 255 l
1376 1030 127 1 l
1502 1030 1 255 l
1376 1284 127 1 l
1376 1030 1 255 l
1376 1222 127 1 l
1376 1158 127 3 l
1376 1094 127 1 l
1440 1158 1 63 l
943 1238 m (ts) s
639 1110 m ("x") s
639 1238 m (bit) s
1119 1110 m (name) s
1119 1174 m (x, y) s
1119 1238 m (fct) s
672 1158 1 63 l
608 1094 127 1 l
608 1158 127 3 l
608 1222 127 1 l
608 1030 127 1 l
734 1030 1 255 l
608 1284 127 1 l
608 1030 1 255 l
1375 918 m (Elektra.Scn.Fnt) f (>) s
735 742 m (Syntax10.Scn.Fnt) f (z) s
672 1030 1 63 l
960 1030 1 63 l
1440 1030 1 63 l
638 485 m (Syntax12.Scn.Fnt) f (Fig. 5. Assignments to variables of types BIT, TS, and OC) s
177 385 m (The) s
259 385 m (data) s
353 385 m (structure) s
532 385 m (corresponding) s
811 385 m (to) s
863 385 m (the) s
937 385 m (following) s
1124 385 m (specification) s
1368 385 m (of) s
1419 385 m (the) s
1493 385 m (element) s
1659 385 m (of) s
1709 385 m (a) s
1743 385 m (binary) s
1870 385 m (adder) s
1988 385 m (is) s
2029 385 m (given) s
177 325 m (in Fig. 6.) s
1 p
%%Page: 0 5
2105 3224 m (Syntax10.Scn.Fnt) f (4) s
342 3119 m (Syntax12.Scn.Fnt) f (IN x, y, ci: BIT;) s
342 3059 m (VAR d, s, co: BIT;) s
342 2976 m (d := x - y; s := d - ci; co := x*y + d*ci) s
1536 1510 1 63 l
640 1510 1 63 l
1664 2150 1 63 l
1439 1686 m (Elektra.Scn.Fnt) f (>) s
959 1718 m (<) s
1551 1766 m (;) s
847 1766 m (;) s
591 1766 m (;) s
623 2022 m (;) s
1423 2214 m (;) s
1519 2022 m (;) s
1327 2022 m (;) s
831 2358 m (<) s
1055 1974 m (>) s
1759 2166 m (>) s
1567 2230 m (>) s
991 2166 m (>) s
671 2166 m (>) s
1631 1526 m (>) s
1439 1526 m (>) s
799 1526 m (>) s
543 1526 m (>) s
1568 1542 95 1 l
512 1542 63 1 l
896 1846 1 527 l
896 1846 607 1 l
1504 1846 1 79 l
1568 1766 1 159 l
960 1734 415 1 l
1184 1702 287 1 l
1184 1702 1 223 l
1376 1734 1 191 l
608 1814 703 1 l
1312 1814 1 111 l
1696 2182 95 1 l
1280 2246 319 1 l
1280 2182 1 63 l
512 2182 191 1 l
1615 2230 m (Syntax10.Scn.Fnt) f ("co") s
1440 2214 1 95 l
1440 2310 191 1 l
1631 2358 m (bit) s
1664 2278 1 63 l
1600 2214 127 1 l
1600 2278 127 3 l
1600 2342 127 1 l
1600 2150 127 1 l
1726 2150 1 255 l
1600 2404 127 1 l
1600 2150 1 255 l
1536 2022 1 95 l
1472 2118 63 1 l
1344 2022 1 95 l
1344 2118 63 1 l
1503 1974 m (and) s
1311 1974 m (and) s
1423 2166 m (or) s
1440 2086 1 63 l
1376 2150 127 1 l
1376 2086 127 1 l
1502 2086 1 127 l
1376 2212 127 1 l
1376 2086 1 127 l
1472 1894 127 1 l
1598 1894 1 127 l
1472 2020 127 1 l
1472 1894 1 127 l
1472 1958 127 1 l
1536 1894 1 63 l
1344 1894 1 63 l
1280 1958 127 1 l
1280 1894 127 1 l
1406 1894 1 127 l
1280 2020 127 1 l
1280 1894 1 127 l
832 2374 63 1 l
896 1926 223 1 l
1119 1974 m (xor) s
607 1974 m (xor) s
960 1990 127 1 l
960 1990 1 319 l
960 2310 95 1 l
1503 1590 m ("ci") s
863 1590 m ("y") s
607 1590 m ("x") s
1055 2230 m ("s") s
735 2230 m ("d") s
864 1766 1 159 l
672 1926 191 1 l
608 1766 1 159 l
640 2022 1 287 l
640 2310 95 1 l
1472 1510 127 1 l
1598 1510 1 255 l
1472 1764 127 1 l
1472 1510 1 255 l
1472 1702 127 1 l
1472 1638 127 3 l
1472 1574 127 1 l
1536 1638 1 63 l
1503 1718 m (bit) s
1088 1894 127 1 l
1214 1894 1 127 l
1088 2020 127 1 l
1088 1894 1 127 l
1088 1958 127 1 l
1152 1894 1 63 l
1024 2150 127 1 l
1150 2150 1 255 l
1024 2404 127 1 l
1024 2150 1 255 l
1024 2342 127 1 l
1024 2278 127 3 l
1024 2214 127 1 l
1088 2278 1 63 l
1055 2358 m (bit) s
863 1718 m (bit) s
896 1638 1 63 l
832 1574 127 1 l
832 1638 127 3 l
832 1702 127 1 l
832 1510 127 1 l
958 1510 1 255 l
832 1764 127 1 l
832 1510 1 255 l
576 1510 127 1 l
702 1510 1 255 l
576 1764 127 1 l
576 1510 1 255 l
576 1702 127 1 l
576 1638 127 3 l
576 1574 127 1 l
640 1638 1 63 l
607 1718 m (bit) s
735 2358 m (bit) s
640 1894 1 63 l
576 1958 127 1 l
576 1894 127 1 l
702 1894 1 127 l
576 2020 127 1 l
576 1894 1 127 l
768 2278 1 63 l
704 2214 127 1 l
704 2278 127 3 l
704 2342 127 1 l
704 2150 127 1 l
830 2150 1 255 l
704 2404 127 1 l
704 2150 1 255 l
1551 2614 m (co) s
1551 2806 m (s) s
1071 2902 m (ci) s
1007 2870 m (d) s
655 2806 m (y) s
655 2870 m (x) s
1256 2822 279 1 l
1456 2630 79 1 l
1280 2598 79 1 l
1280 2566 1 31 l
944 2566 335 1 l
1232 2662 127 1 l
1451 2622 m (Elektra.Scn.Fnt) f (.) s
1343 2570 m (1) s
1351 2654 m (,) s
1351 2590 m (,) s
1056 2790 95 1 l
1024 2630 111 1 l
1024 2630 1 223 l
1056 2694 79 1 l
1056 2694 1 223 l
960 2854 191 1 l
784 2598 63 1 l
784 2598 1 223 l
752 2534 95 1 l
752 2534 1 351 l
704 2822 159 1 l
704 2886 159 1 l
1227 2654 m (.) s
1135 2602 m (0) s
1127 2622 m (,) s
1127 2686 m (,) s
939 2558 m (.) s
847 2506 m (0) s
839 2526 m (,) s
839 2590 m (,) s
1143 2762 m (1) s
1127 2762 m (2) s
1135 2846 m (,) s
1135 2782 m (,) s
1251 2814 m (.) s
855 2794 m (1) s
839 2794 m (2) s
847 2878 m (,) s
847 2814 m (,) s
963 2846 m (.) s
768 2150 1 63 l
800 2182 223 1 l
1088 2150 1 63 l
1120 2182 159 1 l
672 1542 159 1 l
896 1510 1 63 l
928 1542 543 1 l
660 1442 m (Syntax12.Scn.Fnt) f (Fig. 6. Adder element - Schematic and data structure) s
177 1342 m (A second example is the element of a binary counter shown in Fig. 7.) s
342 1259 m (IN e: BIT;  VAR q, co: BIT;) s
342 1176 m (q := REG\(clk: '1, q - e\); co := q * e) s
767 562 m (Syntax10.Scn.Fnt) f (co) s
783 818 m (q) s
303 978 m (e) s
544 546 255 1 l
288 834 159 1 l
352 770 95 1 l
288 514 159 1 l
288 514 1 479 l
352 578 95 1 l
352 578 1 351 l
352 930 383 1 l
736 802 1 127 l
704 802 95 1 l
560 802 47 1 l
608 706 95 1 l
702 706 1 159 l
608 864 95 1 l
608 706 1 159 l
539 538 m (Elektra.Scn.Fnt) f (.) s
447 486 m (0) s
439 506 m (,) s
439 570 m (,) s
439 742 m (1) s
423 742 m (2) s
431 826 m (,) s
431 762 m (,) s
547 794 m (.) s
1599 370 m (>) s
1791 370 m (>) s
1568 386 63 1 l
1983 818 m (>) s
992 834 127 1 l
1696 818 1 143 l
1847 882 m (Syntax10.Scn.Fnt) f ("co") s
1663 434 m ("e") s
1199 434 m ('1) s
1679 802 m (Elektra.Scn.Fnt) f (;) s
1247 1010 m (<) s
1711 610 m (;) s
1599 562 m (>) s
1407 562 m (>) s
1151 562 m (>) s
1151 882 m (Syntax10.Scn.Fnt) f ("q") s
1376 706 287 1 l
1728 610 1 95 l
1696 962 159 1 l
1663 754 m (and) s
1824 802 127 1 l
1950 802 1 255 l
1824 1056 127 1 l
1824 802 1 255 l
1824 994 127 1 l
1824 930 127 3 l
1824 866 127 1 l
1888 930 1 63 l
1855 1010 m (bit) s
1791 818 m (Elektra.Scn.Fnt) f (>) s
1632 674 127 1 l
1758 674 1 127 l
1632 800 127 1 l
1632 674 1 127 l
1632 738 127 1 l
1696 674 1 63 l
1536 578 95 1 l
1632 354 127 1 l
1758 354 1 255 l
1632 608 127 1 l
1632 354 1 255 l
1632 546 127 1 l
1632 482 127 3 l
1632 418 127 1 l
1696 482 1 63 l
1663 562 m (Syntax10.Scn.Fnt) f (bit) s
1248 1026 127 1 l
1376 514 1 511 l
1376 514 95 1 l
1472 514 1 63 l
1216 482 1 95 l
1024 482 1 95 l
1280 578 159 1 l
1088 578 95 1 l
1056 674 1 287 l
1056 962 95 1 l
1207 626 m (reg1) s
1023 626 m (reg) s
1471 626 m (xor) s
1504 546 1 63 l
1440 610 127 1 l
1440 546 127 1 l
1566 546 1 127 l
1440 672 127 1 l
1440 546 1 127 l
1184 546 127 1 l
1310 546 1 127 l
1184 672 127 1 l
1184 546 1 127 l
1184 610 127 1 l
1248 546 1 63 l
1039 674 m (Elektra.Scn.Fnt) f (;) s
1056 546 1 63 l
992 610 127 1 l
992 546 127 1 l
1118 546 1 127 l
992 672 127 1 l
992 546 1 127 l
1087 818 m (>) s
1151 1010 m (Syntax10.Scn.Fnt) f (bit) s
1184 930 1 63 l
1120 866 127 1 l
1120 930 127 3 l
1120 994 127 1 l
1120 802 127 1 l
1246 802 1 255 l
1120 1056 127 1 l
1120 802 1 255 l
991 434 m (clk) s
1184 802 1 63 l
1216 834 607 1 l
1888 802 1 63 l
1920 834 79 1 l
1728 386 95 1 l
1696 354 1 63 l
1 p
%%Page: 0 6
2105 3224 m (Syntax10.Scn.Fnt) f (5) s
639 3119 m (Syntax12.Scn.Fnt) f (Fig. 7. Counter element - Schematic and data structure) s
177 3036 m (Module) s
335 3036 m (LSB) s
415 3036 m (exports) s
562 3036 m (four) s
650 3036 m (variables:) s
831 3036 m (Syntax12i.Scn.Fnt) f (org,) s
910 3036 m (zero,) s
1005 3036 m (one,) s
1090 3036 m (clk.) s
1161 3036 m (Syntax12.Scn.Fnt) f (The) s
1240 3036 m (first) s
1321 3036 m (serves) s
1441 3036 m (as) s
1490 3036 m (anchor) s
1630 3036 m (for) s
1693 3036 m (the) s
1764 3036 m (data) s
1855 3036 m (structure) s
2031 3036 m (to) s
2080 3036 m (be) s
177 2976 m (accessed) s
354 2976 m (by) s
414 2976 m (various) s
563 2976 m (application) s
786 2976 m (commands.) s
1023 2976 m (By) s
1083 2976 m (convention) s
1306 2976 m (Syntax12i.Scn.Fnt) f (org) s
1381 2976 m (Syntax12.Scn.Fnt) f (points) s
1513 2976 m (to) s
1568 2976 m (a) s
1606 2976 m (composite) s
1816 2976 m (\(record\)) s
1983 2976 m (variable) s
177 2916 m (representing) s
422 2916 m (the) s
496 2916 m (entire) s
617 2916 m (circuit.) s
756 2916 m (Syntax12i.Scn.Fnt) f (org.dsc) s
893 2916 m (Syntax12.Scn.Fnt) f (then) s
992 2916 m (is) s
1034 2916 m (the) s
1108 2916 m (root) s
1199 2916 m (of) s
1250 2916 m (the) s
1324 2916 m (list) s
1391 2916 m (of) s
1442 2916 m (variables) s
1615 2916 m (occuring) s
1788 2916 m (in) s
1838 2916 m (the) s
1912 2916 m (circuit.) s
2051 2916 m (Syntax12i.Scn.Fnt) f (zero) s
177 2856 m (Syntax12.Scn.Fnt) f (and) s
259 2856 m (Syntax12i.Scn.Fnt) f (one) s
335 2856 m (Syntax12.Scn.Fnt) f (are) s
404 2856 m ("variables") s
603 2856 m (denoting) s
780 2856 m (the) s
852 2856 m (constants) s
1040 2856 m (0) s
1076 2856 m (and) s
1158 2856 m (1.) s
1205 2856 m (Syntax12i.Scn.Fnt) f (clk) s
1266 2856 m (Syntax12.Scn.Fnt) f (denotes) s
1424 2856 m (the) s
1496 2856 m (global) s
1620 2856 m (clock) s
1726 2856 m (signal) s
1843 2856 m (of) s
1891 2856 m (synchronous) s
177 2796 m (circuits.) s
177 2713 m (And) s
266 2713 m (finally,) s
400 2713 m (there) s
510 2713 m (is) s
552 2713 m (a) s
587 2713 m (global) s
713 2713 m (variable) s
869 2713 m (Syntax12i.Scn.Fnt) f (Log,) s
954 2713 m (Syntax12.Scn.Fnt) f (a) s
989 2713 m (text) s
1072 2713 m (displayed) s
1256 2713 m (in) s
1305 2713 m (a) s
1339 2713 m (viewer) s
1471 2713 m (opened) s
1623 2713 m (when) s
1740 2713 m (LSB) s
1821 2713 m (is) s
1862 2713 m (initialized.) s
2065 2713 m (Syntax12i.Scn.Fnt) f (Log) s
177 2653 m (Syntax12.Scn.Fnt) f (serves) s
305 2653 m (as) s
362 2653 m (visible) s
494 2653 m (output) s
639 2653 m (for) s
710 2653 m (the) s
789 2653 m (various) s
939 2653 m (operators) s
1133 2653 m (in) s
1188 2653 m (the) s
1267 2653 m (Lola) s
1362 2653 m (system.) s
1517 2653 m (Two) s
1614 2653 m (commands) s
1840 2653 m (operate) s
1998 2653 m (on) s
2065 2653 m (the) s
177 2593 m (Log-text) s
352 2593 m (and) s
437 2593 m (its) s
494 2593 m (viewer) s
628 2593 m (respectively.) s
864 2593 m (Text) s
956 2593 m (and) s
1041 2593 m (viewer) s
1175 2593 m (are) s
1247 2593 m (opened) s
1400 2593 m (when) s
1518 2593 m (the) s
1592 2593 m (system) s
1732 2593 m (is) s
1774 2593 m (started.) s
1925 2593 m (Command) s
177 2533 m (Syntax12i.Scn.Fnt) f (OpenLog) s
(Syntax12.Scn.Fnt) f ( serves to open a viewer containing the text, and ) s
(Syntax12i.Scn.Fnt) f (ClearLog) s
(Syntax12.Scn.Fnt) f ( deletes the viewer's contents.) s
177 2413 m (Syntax12m.Scn.Fnt) f (2. Basic Operations) s
177 2313 m (Syntax12.Scn.Fnt) f (In) s
226 2313 m (addition) s
392 2313 m (to) s
442 2313 m (the) s
513 2313 m (data) s
604 2313 m (types) s
709 2313 m (and) s
790 2313 m (global) s
913 2313 m (variables,) s
1093 2313 m (module) s
1248 2313 m (LSB) s
1327 2313 m (exports) s
1473 2313 m (a) s
1505 2313 m (few) s
1583 2313 m (procedures.) s
1810 2313 m (Syntax12i.Scn.Fnt) f (New) s
1904 2313 m (Syntax12.Scn.Fnt) f (and) s
1985 2313 m (Syntax12i.Scn.Fnt) f (NewVar) s
177 2253 m (Syntax12.Scn.Fnt) f (serve) s
289 2253 m (to) s
347 2253 m (generate) s
525 2253 m (elements) s
713 2253 m (of) s
769 2253 m (the) s
848 2253 m (data) s
947 2253 m (structure.) s
1142 2253 m (Syntax12i.Scn.Fnt) f (Show) s
1261 2253 m (Syntax12.Scn.Fnt) f (generates) s
1456 2253 m (a) s
1496 2253 m (textual) s
1641 2253 m (expression) s
1855 2253 m (representing) s
2104 2253 m (a) s
177 2193 m (structure) s
356 2193 m (by) s
412 2193 m (recursively) s
617 2193 m (traversing) s
809 2193 m (the) s
883 2193 m (data) s
976 2193 m (structure.) s
1165 2193 m (Syntax12i.Scn.Fnt) f (WriteName) s
1382 2193 m (Syntax12.Scn.Fnt) f (yields) s
1497 2193 m (the) s
1570 2193 m (possibly) s
1729 2193 m (composite) s
1935 2193 m (name) s
2054 2193 m (of) s
2104 2193 m (a) s
177 2133 m (given) s
288 2133 m (variable.) s
456 2133 m (It) s
497 2133 m (is) s
540 2133 m (the) s
615 2133 m (inverse) s
758 2133 m (of) s
810 2133 m (Syntax12i.Scn.Fnt) f (This\(org,) s
977 2133 m (name\),) s
1115 2133 m (Syntax12.Scn.Fnt) f (whose) s
1249 2133 m (value) s
1359 2133 m (is) s
1401 2133 m (the) s
1475 2133 m (component) s
1704 2133 m (variable) s
1860 2133 m (of) s
1911 2133 m (variable) s
2067 2133 m (Syntax12i.Scn.Fnt) f (org) s
177 2073 m (Syntax12.Scn.Fnt) f (with component name \(or index\) ) s
(Syntax12i.Scn.Fnt) f (name. Assign) s
(Syntax12.Scn.Fnt) f ( assigns the given pointer to the root variable ) s
(Syntax12i.Scn.Fnt) f (org.) s
318 1998 m (Syntax10.Scn.Fnt) f (PROCEDURE New\(f: SHORTINT; x, y: Signal\): Signal;) s
365 1949 m (VAR z: Signal;) s
318 1900 m (BEGIN NEW\(z\); z.fct := f; z.x := x; z.y := y; RETURN z) s
318 1851 m (END New;) s
318 1779 m (PROCEDURE NewVar\(f, val: SHORTINT; x, y: Signal;) s
412 1730 m (next: Variable; VAR name: ARRAY OF CHAR\): Variable;) s
365 1681 m (VAR v: Variable;) s
318 1632 m (BEGIN NEW\(v\); v.fct := f; v.val := val; v.x := x; v.y := y;) s
365 1583 m (v.next := next; COPY\(name, v.name\); RETURN v) s
318 1534 m (END NewVar;) s
318 1462 m (PROCEDURE WriteName\(VAR W: Texts.Writer; v: Variable\);) s
318 1413 m (BEGIN) s
365 1364 m (IF v.y # NIL THEN WriteName\(W, v.y\(Variable\)\); Texts.Write\(W, "."\) END ;) s
365 1315 m (Texts.WriteString\(W, v.name\)) s
318 1266 m (END WriteName;) s
318 1194 m (PROCEDURE This\(org: Variable; VAR name: ARRAY OF CHAR\): Variable;) s
365 1145 m (VAR v: Variable; i, j: INTEGER;) s
412 1096 m (id: ARRAY 16 OF CHAR;) s
318 1047 m (BEGIN v := org.dsc; i := 0;) s
365 998 m (LOOP j := 0;) s
412 949 m (WHILE \(name[i] > " "\) & \(name[i] # "."\) DO id[j] := name[i]; INC\(j\); INC\(i\) END ;) s
412 900 m (id[j] := 0X;) s
412 851 m (WHILE \(v # NIL\) & \(v.name # id\) DO v := v.next END ;) s
412 802 m (IF name[i] = "." THEN) s
459 753 m (IF \(v # NIL\) & \(v.fct IN {array, record}\) THEN v := v.dsc; INC\(i\)) s
459 704 m (ELSE v := NIL; EXIT) s
459 655 m (END) s
412 606 m (ELSE EXIT) s
412 557 m (END) s
365 508 m (END ;) s
365 459 m (RETURN v) s
318 410 m (END This;) s
318 338 m (PROCEDURE Assign\(v: Variable\);) s
318 289 m (BEGIN org := v) s
318 240 m (END Assign;) s
1 p
%%Page: 0 7
2105 3224 m (Syntax10.Scn.Fnt) f (6) s
318 3127 m (PROCEDURE ShowTree\(x: Signal\);) s
318 3078 m (BEGIN) s
365 3029 m (IF x # NIL THEN) s
412 2980 m (IF x IS Variable THEN WriteName\(W, x\(Variable\)\)) s
412 2931 m (ELSE Texts.Write\(W, "\("\);) s
459 2882 m (ShowTree\(x.x\); Texts.Write\(W, code[x.fct]\); ShowTree\(x.y\); Texts.Write\(W, "\)"\)) s
412 2833 m (END) s
365 2784 m (END) s
318 2735 m (END ShowTree;) s
318 2663 m (PROCEDURE Show\(x: Variable; lev: INTEGER\);) s
365 2614 m (VAR typ: SHORTINT;) s
318 2565 m (BEGIN typ := x.fct;) s
365 2516 m (IF typ = record THEN) s
412 2467 m (x := x.dsc;) s
412 2418 m (WHILE x # NIL DO Show\(x, lev+1\); x := x.next END ;) s
412 2369 m (Texts.Append\(Log, W.buf\)) s
365 2320 m (ELSIF typ = array THEN) s
412 2271 m (x := x.dsc;) s
412 2222 m (WHILE x # NIL DO Show\(x, lev\); x := x.next END) s
365 2173 m (ELSIF typ # integer THEN) s
412 2124 m (WriteName\(W, x\);) s
412 2075 m (IF \(lev = 0\) & \(x.class # var\) THEN Texts.Write\(W, "*"\) END ;) s
412 2026 m (IF x.x # NIL THEN Texts.WriteString\(W, " := "\); ShowTree\(x.x\) END ;) s
412 1977 m (Texts.WriteLn\(W\); Texts.Append\(Log, W.buf\)) s
365 1928 m (END) s
318 1879 m (END Show;) s
177 1782 m (Syntax12.Scn.Fnt) f (Apart) s
293 1782 m (from) s
400 1782 m (these) s
514 1782 m (procedures) s
735 1782 m (of) s
788 1782 m (a) s
824 1782 m (rather) s
950 1782 m (auxiliary) s
1118 1782 m (nature,) s
1264 1782 m (LSB) s
1347 1782 m (provides) s
1516 1782 m (two) s
1602 1782 m (basic) s
1709 1782 m (operations) s
1920 1782 m (on) s
1984 1782 m (circuits,) s
177 1722 m (namely) s
336 1722 m (that) s
434 1722 m (of) s
495 1722 m (simplification) s
769 1722 m (and) s
862 1722 m (of) s
922 1722 m (checking) s
1108 1722 m (for) s
1183 1722 m (cycles) s
1311 1722 m (within) s
1453 1722 m (combinational) s
1745 1722 m (circuits.) s
1910 1722 m (Such) s
2025 1722 m (loops) s
177 1662 m (constitute unwanted race conditions. The procedures are listed in the Appendix.) s
177 1579 m (Procedure) s
380 1579 m (Syntax12i.Scn.Fnt) f (Simplify\(v\)) s
587 1579 m (Syntax12.Scn.Fnt) f (traverses) s
762 1579 m (the) s
838 1579 m (data) s
934 1579 m (structure) s
1115 1579 m (assigned) s
1288 1579 m (to) s
1342 1579 m (Syntax12i.Scn.Fnt) f (v) s
1377 1579 m (Syntax12.Scn.Fnt) f (trying) s
1497 1579 m (to) s
1551 1579 m (apply) s
1665 1579 m (any) s
1745 1579 m (of) s
1798 1579 m (the) s
1874 1579 m (simplification) s
177 1519 m (rules) s
279 1519 m (listed) s
390 1519 m (below.) s
527 1519 m (If) s
565 1519 m (Syntax12i.Scn.Fnt) f (v) s
596 1519 m (Syntax12.Scn.Fnt) f (is) s
636 1519 m (a) s
669 1519 m (structured) s
870 1519 m (variable,) s
1034 1519 m (then) s
1131 1519 m (all) s
1186 1519 m (components) s
1430 1519 m (are) s
1499 1519 m (traversed.) s
1688 1519 m (This) s
1775 1519 m (process) s
1924 1519 m (is) s
1964 1519 m (repeated) s
177 1459 m (until) s
277 1459 m (no) s
340 1459 m (more) s
453 1459 m (simplifications) s
735 1459 m (are) s
806 1459 m (applicable.) s
1017 1459 m (Repetition) s
1219 1459 m (is) s
1260 1459 m (necessary,) s
1457 1459 m (because) s
1618 1459 m (a) s
1652 1459 m (simplification) s
1916 1459 m (resulting) s
2089 1459 m (in) s
177 1399 m (some) s
294 1399 m (variable) s
452 1399 m (obtaining) s
644 1399 m (the) s
720 1399 m (constant) s
895 1399 m (value) s
1007 1399 m (0) s
1047 1399 m (or) s
1102 1399 m (1) s
1142 1399 m (may) s
1236 1399 m (propagate) s
1437 1399 m (to) s
1491 1399 m (other) s
1606 1399 m (variables.) s
1791 1399 m (The) s
1874 1399 m (simplification) s
177 1339 m (rules are:) s
306 1256 m (~~x) s
447 1256 m (= x) s
306 1196 m (~0) s
447 1196 m (= 1) s
707 1196 m (~1) s
837 1196 m (= 0) s
306 1136 m (x + 1) s
447 1136 m (= 1) s
707 1136 m (1 + x) s
837 1136 m (= 1) s
1120 1136 m (x * 0) s
1250 1136 m (= 0) s
1546 1136 m (0 * x) s
1699 1136 m (= 0) s
306 1076 m (x + 0) s
447 1076 m (= x) s
707 1076 m (0 + x) s
837 1076 m (= x) s
1120 1076 m (x * 1) s
1250 1076 m (= x) s
1546 1076 m (1 * x) s
1699 1076 m (= x) s
306 1016 m (x - 0) s
447 1016 m (= x) s
707 1016 m (0 - x) s
837 1016 m (= x) s
1120 1016 m (x - 1) s
1250 1016 m (= ~x) s
1546 1016 m (1 - x) s
1699 1016 m (= ~x) s
306 956 m (MUX\(0: x, y\) = x) s
707 956 m (MUX\(1: x, y\) = y) s
1120 956 m (~x -1) s
1250 956 m (= x) s
1546 956 m (1- ~x) s
1699 956 m (= x) s
177 856 m (Procedure) s
385 856 m (Syntax12i.Scn.Fnt) f (Loops\(v\)) s
558 856 m (Syntax12.Scn.Fnt) f (also) s
653 856 m (traverses) s
834 856 m (the) s
916 856 m (structure) s
1103 856 m (assigned) s
1282 856 m (to) s
1342 856 m (Syntax12i.Scn.Fnt) f (v,) s
1394 856 m (Syntax12.Scn.Fnt) f (and) s
1485 856 m (if) s
1530 856 m (Syntax12i.Scn.Fnt) f (v) s
1570 856 m (Syntax12.Scn.Fnt) f (is) s
1619 856 m (structured,) s
1839 856 m (it) s
1885 856 m (traverses) s
2065 856 m (the) s
177 796 m (structures) s
372 796 m (of) s
422 796 m (all) s
478 796 m (of) s
528 796 m (its) s
583 796 m (components.) s
839 796 m (We) s
918 796 m (assume) s
1071 796 m (that) s
1158 796 m (at) s
1206 796 m (the) s
1279 796 m (outset) s
1407 796 m (all) s
1462 796 m (nodes) s
1585 796 m (are) s
1654 796 m (colored) s
1804 796 m (black.) s
1924 796 m (During) s
2065 796 m (the) s
177 736 m (traversal,) s
356 736 m (we) s
426 736 m (may) s
520 736 m (think) s
633 736 m (of) s
686 736 m (all) s
745 736 m (visited) s
877 736 m (black) s
990 736 m (nodes) s
1117 736 m (being) s
1235 736 m (colored) s
1389 736 m (gray.) s
1491 736 m (If) s
1532 736 m (an) s
1593 736 m (encountered) s
1842 736 m (node) s
1951 736 m (is) s
1994 736 m (already) s
177 676 m (gray,) s
286 676 m (then) s
395 676 m (a) s
440 676 m (\(combinational\)) s
765 676 m (loop) s
872 676 m (is) s
923 676 m (present.) s
1094 676 m (When) s
1233 676 m (returning) s
1428 676 m (to) s
1489 676 m (a) s
1533 676 m (node) s
1650 676 m (from) s
1764 676 m (the) s
1847 676 m (traversal) s
2023 676 m (of) s
2083 676 m (its) s
177 616 m (descendants,) s
430 616 m (the) s
504 616 m (node) s
612 616 m (is) s
654 616 m (colored) s
806 616 m (white,) s
934 616 m (and) s
1018 616 m (if) s
1056 616 m (any) s
1134 616 m (white) s
1252 616 m (node) s
1360 616 m (is) s
1402 616 m (encountered) s
1650 616 m (during) s
1785 616 m (a) s
1820 616 m (further) s
1962 616 m (traversal,) s
177 556 m (then) s
274 556 m (the) s
346 556 m (node's) s
477 556 m (descendants) s
717 556 m (are) s
786 556 m (not) s
861 556 m (further) s
1001 556 m (followed) s
1174 556 m (because) s
1334 556 m (they) s
1424 556 m (evidently) s
1599 556 m (had) s
1681 556 m (already) s
1824 556 m (been) s
1927 556 m (visited.) s
2065 556 m (For) s
177 496 m (coloring the node field ) s
(Syntax12i.Scn.Fnt) f (val) s
(Syntax12.Scn.Fnt) f ( is being used.) s
177 376 m (Syntax12m.Scn.Fnt) f (3. Generating the Data Structure by Program) s
1 p
%%Page: 0 8
2105 3224 m (Syntax10.Scn.Fnt) f (7) s
177 3119 m (Syntax12.Scn.Fnt) f (The) s
260 3119 m (most) s
369 3119 m (obvious) s
527 3119 m (way) s
614 3119 m (to) s
667 3119 m (generate) s
840 3119 m (a) s
875 3119 m (data) s
969 3119 m (structure) s
1148 3119 m (is) s
1190 3119 m (by) s
1246 3119 m (writing) s
1390 3119 m (a) s
1425 3119 m (program) s
1598 3119 m (and) s
1682 3119 m (executing) s
1873 3119 m (it.) s
1923 3119 m (In) s
1974 3119 m (order) s
2087 3119 m (to) s
177 3059 m (simplify) s
338 3059 m (the) s
414 3059 m (task) s
504 3059 m (of) s
557 3059 m (deriving) s
719 3059 m (the) s
795 3059 m (program) s
970 3059 m (corresponding) s
1251 3059 m (to) s
1305 3059 m (a) s
1342 3059 m (circuit,) s
1482 3059 m (and) s
1568 3059 m (to) s
1622 3059 m (make) s
1741 3059 m (the) s
1817 3059 m (program) s
1992 3059 m (directly) s
177 2999 m (mirror) s
314 2999 m (the) s
392 2999 m (signal) s
516 2999 m (equations) s
716 2999 m (as) s
772 2999 m (closely) s
911 2999 m (as) s
967 2999 m (possible,) s
1144 2999 m (a) s
1183 2999 m (set) s
1253 2999 m (of) s
1308 2999 m (auxiliary) s
1479 2999 m (procedures) s
1702 2999 m (is) s
1748 2999 m (introduced,) s
1978 2999 m (typically) s
177 2939 m (contained in a library module. We propose the following set, perhaps to be augmented:) s
318 2864 m (Syntax10.Scn.Fnt) f (PROCEDURE Var\(type, class: INTEGER; next: LSB.Variable; name: ARRAY OF CHAR\); LSB.Variable;) s
365 2815 m (VAR v: LSB.Variable;) s
318 2766 m (BEGIN v := LSB.NewVar\(type, 0, NIL, NIL, ancestor, name\);) s
365 2717 m (v.class := class; RETURN v) s
318 2668 m (END Var;) s
318 2596 m (PROCEDURE And\(x, y: LSB.Signal\): LSB.Signal;) s
318 2547 m (BEGIN RETURN LSB.New\(LSB.and, x, y\)) s
318 2498 m (END And;) s
318 2426 m (PROCEDURE Or\(x, y: LSB.Signal\): LSB.Signal;) s
318 2377 m (BEGIN RETURN LSB.New\(LSB.or, x, y\)) s
318 2328 m (END Or;) s
318 2256 m (PROCEDURE Xor\(x, y: LSB.Signal\): LSB.Signal;) s
318 2207 m (BEGIN RETURN LSB.New\(LSB.xor, x, y\)) s
318 2158 m (END Xor;) s
318 2086 m (PROCEDURE Not\(x: LSB.Signal\): LSB.Signal;) s
318 2037 m (BEGIN RETURN LSB.New\(LSB.not, NIL, x\)) s
318 1988 m (END Not;) s
318 1916 m (PROCEDURE Reg\(en, d: LSB.Signal\): LSB.Signal;) s
318 1867 m (BEGIN RETURN LSB.New\(LSB.reg, LSB.clk, LSB.New\(LSB.reg1, en, d\)\)) s
318 1818 m (END Reg;) s
177 1721 m (Syntax12.Scn.Fnt) f (Consider now the previously presented example of an adder element with the definitions) s
318 1638 m (d := x - y; s := d - ci; co := x*y + d*ci) s
177 1555 m (For) s
251 1555 m (each) s
351 1555 m (signal) s
471 1555 m (variable,) s
637 1555 m (a) s
672 1555 m (program) s
845 1555 m (variable) s
1001 1555 m (with) s
1098 1555 m (the) s
1172 1555 m (same) s
1284 1555 m (name) s
1404 1555 m (is) s
1446 1555 m (declared.) s
1627 1555 m (Then) s
1734 1555 m (a) s
1769 1555 m (record) s
1901 1555 m (is) s
1942 1555 m (generated) s
177 1495 m (by) s
232 1495 m (calling) s
364 1495 m (Syntax12i.Scn.Fnt) f (LSB.NewVar,) s
598 1495 m (Syntax12.Scn.Fnt) f (appropriately) s
854 1495 m (linking) s
993 1495 m (the) s
1066 1495 m (generated) s
1261 1495 m (records) s
1408 1495 m (together.) s
1586 1495 m (At) s
1638 1495 m (last,) s
1723 1495 m (a) s
1756 1495 m (single) s
1874 1495 m (assignment) s
2097 1495 m (is) s
177 1435 m (made to each variable's x-field defining the circuit for which the variable stands:) s
318 1360 m (Syntax10.Scn.Fnt) f (VAR x, y, d, s, co: LSB.Variable;) s
318 1288 m (x := Var\(LSB.bit, LSB.in, NIL, "x "\);) s
318 1239 m (y := Var\(LSB.bit, LSB.in, x, "y "\);) s
318 1190 m (ci := Var\(LSB.bit, LSB.in, y, "ci"\);) s
318 1141 m (d := Var\(LSB.bit, LSB.var, ci, "d "\);) s
318 1092 m (s := Var\(LSB.bit, LSB.var, d, "s "\);) s
318 1043 m (co:= Var\(LSB.bit, LSB.var, s, "co"\);) s
318 994 m (d.x := Xor\(x, y\);) s
318 945 m (s.x := Xor\(d, ci\);) s
318 896 m (co.x := Or\(And\(x, y\), And\(d, ci\)\)) s
177 799 m (Syntax12.Scn.Fnt) f (The second example is that of the binary counter element, also encountered above:) s
318 724 m (Syntax10.Scn.Fnt) f (VAR q, e, co: LSB.Variable;) s
318 652 m (q := LSB.NewVar\(LSB.bit, LSB.var, NIL, NIL, NIL, "q "\);) s
318 603 m (e := LSB.NewVar\(LSB.bit, LSB.in, NIL, NIL, q, "e "\);) s
318 554 m (co := LSB.NewVar\(LSB.bit, LSB.var, NIL, NIL, e, "co"\);) s
318 505 m (q.x := Reg\(LSB.one, Xor\(q, e\)\);) s
318 456 m (co.x := And\(q, e\)) s
177 359 m (Syntax12.Scn.Fnt) f (Note) s
282 359 m (that) s
371 359 m (the) s
446 359 m (assignments) s
689 359 m (representing) s
934 359 m (the) s
1009 359 m (allocation) s
1205 359 m (of) s
1257 359 m (variables) s
1430 359 m (must) s
1539 359 m (precede) s
1698 359 m (the) s
1772 359 m (assignments) s
2014 359 m (of) s
2065 359 m (the) s
177 299 m (expressions,) s
422 299 m (which) s
558 299 m (directly) s
714 299 m (appear) s
863 299 m (in) s
922 299 m (prefix) s
1049 299 m (form,) s
1173 299 m (and) s
1265 299 m (thereby) s
1425 299 m (make) s
1550 299 m (the) s
1632 299 m (program) s
1813 299 m (intuitively) s
2014 299 m (rather) s
177 239 m (obvious.) s
346 239 m (Generating) s
565 239 m (data) s
660 239 m (structures) s
857 239 m (by) s
913 239 m (such) s
1013 239 m (programs) s
1203 239 m (more) s
1316 239 m (or) s
1369 239 m (less) s
1449 239 m (directly) s
1596 239 m (follows) s
1743 239 m (a) s
1778 239 m (fixed) s
1881 239 m (recipe,) s
2016 239 m (and) s
2100 239 m (it) s
1 p
%%Page: 0 9
2105 3224 m (Syntax10.Scn.Fnt) f (8) s
177 3119 m (Syntax12.Scn.Fnt) f (has) s
258 3119 m (the) s
336 3119 m (great) s
446 3119 m (advantage) s
650 3119 m (that) s
742 3119 m (all) s
803 3119 m (facilities) s
970 3119 m (offered) s
1119 3119 m (by) s
1179 3119 m (a) s
1218 3119 m (programming) s
1491 3119 m (language) s
1675 3119 m (are) s
1749 3119 m (at) s
1801 3119 m (our) s
1882 3119 m (disposal.) s
2059 3119 m (We) s
177 3059 m (particularly) s
394 3059 m (refer) s
490 3059 m (to) s
539 3059 m (repetitive) s
720 3059 m (and) s
801 3059 m (conditional) s
1021 3059 m (statements) s
1235 3059 m (to) s
1284 3059 m (be) s
1340 3059 m (used) s
1438 3059 m (for) s
1501 3059 m (generating) s
1707 3059 m (replications) s
1931 3059 m (of) s
1979 3059 m (a) s
2011 3059 m (circuit) s
177 2999 m (pattern. The similarities between circuit and program structures become quite evident.) s
177 2879 m (Syntax12m.Scn.Fnt) f (4. Generating the Data Structure through a Compiler) s
177 2796 m (Syntax12.Scn.Fnt) f (Apart) s
290 2796 m (from) s
394 2796 m (the) s
467 2796 m (mentioned) s
684 2796 m (advantages,) s
910 2796 m (the) s
983 2796 m (method) s
1143 2796 m (of) s
1193 2796 m (generating) s
1401 2796 m (the) s
1474 2796 m (data) s
1567 2796 m (structure) s
1745 2796 m (from) s
1848 2796 m (a) s
1881 2796 m (program) s
2052 2796 m (also) s
177 2736 m (has) s
262 2736 m (severe) s
397 2736 m (shortcomings.) s
681 2736 m (This) s
778 2736 m (is) s
828 2736 m (so) s
890 2736 m (even) s
996 2736 m (if) s
1041 2736 m (the) s
1122 2736 m (programming) s
1398 2736 m (language) s
1585 2736 m (allows) s
1723 2736 m (to) s
1782 2736 m (express) s
1938 2736 m (the) s
2019 2736 m (signal) s
177 2676 m (definitions) s
387 2676 m (in) s
436 2676 m (infix) s
529 2676 m (form) s
633 2676 m (through) s
795 2676 m (the) s
868 2676 m (use) s
944 2676 m (of) s
994 2676 m (operator) s
1165 2676 m (overloading.) s
1404 2676 m (The) s
1485 2676 m (primary) s
1641 2676 m (shortcoming) s
1888 2676 m (is) s
1929 2676 m (the) s
2002 2676 m (lack) s
2088 2676 m (of) s
177 2616 m (any sort of consistency checking.) s
318 2533 m (1. No check whether all variables \(except inputs\) have been assigned an expression.) s
318 2473 m (2. No check against redefinitions \(multiple assignments\).) s
318 2413 m (3. No check for signal types, such as bus types allowing multiple assignments.) s
318 2353 m (4. No check for correct structuring \(arrays, records\).) s
177 2270 m (The) s
265 2270 m (remedy) s
423 2270 m (lies) s
503 2270 m (in) s
559 2270 m (the) s
639 2270 m (use) s
722 2270 m (of) s
779 2270 m (a) s
820 2270 m (notation) s
998 2270 m (tailored) s
1159 2270 m (to) s
1217 2270 m (the) s
1297 2270 m (description) s
1522 2270 m (of) s
1579 2270 m (circuits,) s
1740 2270 m (containing) s
1956 2270 m (sufficient) s
177 2210 m (redundancy) s
412 2210 m (to) s
468 2210 m (allow) s
586 2210 m (these) s
702 2210 m (checks) s
843 2210 m (to) s
899 2210 m (be) s
962 2210 m (made) s
1085 2210 m (mechanically) s
1344 2210 m (by) s
1404 2210 m (a) s
1443 2210 m (compiler.) s
1636 2210 m (Typically,) s
1819 2210 m (such) s
1923 2210 m (a) s
1961 2210 m (compiler) s
177 2150 m (generates) s
370 2150 m (some) s
488 2150 m (code.) s
604 2150 m (The) s
689 2150 m (interpretation) s
961 2150 m (of) s
1014 2150 m (this) s
1097 2150 m (code,) s
1211 2150 m (called) s
1334 2150 m (the) s
1410 2150 m (execution) s
1606 2150 m (of) s
1659 2150 m (the) s
1735 2150 m (\(compiled\)) s
1956 2150 m (program,) s
177 2090 m (then) s
276 2090 m (generates) s
466 2090 m (the) s
540 2090 m (desired) s
687 2090 m (data) s
781 2090 m (structure.) s
971 2090 m (We) s
1051 2090 m (have) s
1150 2090 m (postulated) s
1359 2090 m (a) s
1393 2090 m (simple) s
1529 2090 m (notation) s
1700 2090 m (for) s
1765 2090 m (this) s
1845 2090 m (purpose,) s
2018 2090 m (called) s
177 2030 m (Syntax12i.Scn.Fnt) f (Lola) s
259 2030 m (Syntax12.Scn.Fnt) f (for) s
323 2030 m (Logic) s
430 2030 m (Language) s
617 2030 m ([1,) s
679 2030 m (2].) s
742 2030 m (Its) s
797 2030 m (most) s
903 2030 m (noteworthy) s
1128 2030 m (characteristic) s
1382 2030 m (is) s
1422 2030 m (that) s
1508 2030 m (it) s
1545 2030 m (allows) s
1674 2030 m (to) s
1724 2030 m (specify) s
1858 2030 m (circuit) s
1983 2030 m (types.) s
2099 2030 m (It) s
177 1970 m (is) s
221 1970 m (possible) s
386 1970 m (to) s
440 1970 m (generate) s
615 1970 m (\(declare\)) s
795 1970 m (instances) s
981 1970 m (\(variables\)) s
1187 1970 m (of) s
1239 1970 m (such) s
1340 1970 m (\(structured\)) s
1576 1970 m (types.) s
1696 1970 m (Furthermore,) s
1956 1970 m (the) s
2031 1970 m (types) s
177 1910 m (themselves can be parametrized.) s
177 1827 m (A) s
221 1827 m (detailed) s
386 1827 m (description) s
609 1827 m (of) s
664 1827 m (the) s
742 1827 m (Lola) s
836 1827 m (compiler) s
1018 1827 m (is) s
1064 1827 m (beyond) s
1218 1827 m (the) s
1296 1827 m (scope) s
1419 1827 m (of) s
1474 1827 m (this) s
1559 1827 m (text.) s
1657 1827 m (Suffice) s
1800 1827 m (it) s
1842 1827 m (to) s
1897 1827 m (say) s
1970 1827 m (that) s
2061 1827 m (our) s
177 1767 m (compiler) s
361 1767 m (follows) s
514 1767 m (the) s
594 1767 m (simple) s
736 1767 m (principle) s
916 1767 m (of) s
972 1767 m (recursive) s
1153 1767 m (descent.) s
1324 1767 m (We) s
1409 1767 m (rather) s
1539 1767 m (concentrate) s
1776 1767 m (our) s
1859 1767 m (attention) s
2047 1767 m (to) s
2104 1767 m (a) s
177 1707 m (specification) s
425 1707 m (of) s
480 1707 m (the) s
557 1707 m (generated) s
757 1707 m (code.) s
873 1707 m (The) s
958 1707 m (interface) s
1135 1707 m (definition) s
1331 1707 m (is) s
1376 1707 m (the) s
1453 1707 m (following,) s
1653 1707 m (where) s
1785 1707 m (procedure) s
1990 1707 m (Syntax12i.Scn.Fnt) f (Module) s
177 1647 m (Syntax12.Scn.Fnt) f (compiles a Lola text.) s
283 1572 m (Syntax10.Scn.Fnt) f (DEFINITION LSC;) s
377 1523 m (IMPORT Texts;) s
377 1474 m (\(*for constant and type declarations, see below*\)) s
377 1425 m (VAR guard, globalScope, localScope: Object; body: Item;) s
377 1376 m (PROCEDURE Module\(T: Texts.Text; pos: LONGINT\);) s
283 1327 m (END LSC.) s
177 1247 m (Syntax12.Scn.Fnt) f (An) s
243 1247 m (early) s
343 1247 m (version) s
488 1247 m (of) s
539 1247 m (our) s
617 1247 m (Lola) s
707 1247 m (compiler) s
885 1247 m (generated) s
1082 1247 m (directly) s
1229 1247 m (executable) s
1440 1247 m (code,) s
1552 1247 m (i.e.) s
1620 1247 m (an) s
1680 1247 m (binary) s
1808 1247 m (object) s
1935 1247 m (file) s
2005 1247 m (whose) s
177 1187 m (execution) s
369 1187 m (generated) s
564 1187 m (the) s
636 1187 m (data) s
728 1187 m (structure.) s
916 1187 m (A) s
954 1187 m (more) s
1064 1187 m (flexible,) s
1217 1187 m (portable,) s
1392 1187 m (and) s
1473 1187 m (simpler) s
1622 1187 m (solution) s
1784 1187 m (lies) s
1855 1187 m (in) s
1902 1187 m (choosing) s
2079 1187 m (an) s
177 1127 m (interpretable) s
432 1127 m (code) s
538 1127 m (in) s
592 1127 m (the) s
670 1127 m (form) s
779 1127 m (of) s
834 1127 m (a) s
873 1127 m (binary) s
1005 1127 m (tree.) s
1105 1127 m (This) s
1198 1127 m (tree) s
1286 1127 m (closely) s
1424 1127 m (mirrors) s
1577 1127 m (the) s
1654 1127 m (syntactic) s
1829 1127 m (structure) s
2011 1127 m (of) s
2065 1127 m (the) s
177 1067 m (source) s
315 1067 m (program.) s
502 1067 m (We) s
585 1067 m (emphasize) s
800 1067 m (that) s
891 1067 m (this) s
975 1067 m (tree) s
1063 1067 m (structure) s
1245 1067 m (is) s
1290 1067 m (different) s
1464 1067 m (from) s
1571 1067 m (the) s
1647 1067 m (previously) s
1847 1067 m (presented) s
2045 1067 m (data) s
177 1007 m (structure.) s
370 1007 m (To) s
433 1007 m (be) s
495 1007 m (specific:) s
657 1007 m (Interpretation) s
929 1007 m (of) s
982 1007 m (the) s
1058 1007 m (former) s
1201 1007 m (generates) s
1393 1007 m (the) s
1469 1007 m (latter.) s
1592 1007 m (We) s
1674 1007 m (will) s
1756 1007 m (explain) s
1905 1007 m (this) s
1988 1007 m (process) s
177 947 m (further below.) s
177 827 m (Syntax12m.Scn.Fnt) f (5. The Compiler's Object Code) s
177 744 m (Syntax12.Scn.Fnt) f (The) s
257 744 m (object) s
382 744 m (code) s
482 744 m (is) s
522 744 m (a) s
555 744 m (tree) s
638 744 m (with) s
733 744 m (two) s
816 744 m (types) s
922 744 m (of) s
971 744 m (nodes) s
1094 744 m (called) s
1213 744 m (Syntax12i.Scn.Fnt) f (Item) s
1305 744 m (Syntax12.Scn.Fnt) f (and) s
1387 744 m (Syntax12i.Scn.Fnt) f (Object.) s
1523 744 m (Syntax12.Scn.Fnt) f (The) s
1603 744 m (latter) s
1711 744 m (is) s
1751 744 m (an) s
1808 744 m (extension) s
1997 744 m (of) s
2045 744 m (Syntax12i.Scn.Fnt) f (Item) s
177 684 m (Syntax12.Scn.Fnt) f (and) s
265 684 m (carries) s
402 684 m (a) s
441 684 m (Syntax12i.Scn.Fnt) f (name) s
556 684 m (Syntax12.Scn.Fnt) f (\(identifier\).) s
783 684 m (Objects) s
940 684 m (represent) s
1131 684 m (entities) s
1283 684 m (declared) s
1457 684 m (in) s
1511 684 m (the) s
1589 684 m (Lola) s
1682 684 m (program,) s
1868 684 m (i.e.) s
1939 684 m (constants,) s
177 624 m (variables,) s
359 624 m (and) s
442 624 m (types.) s
560 624 m (The) s
641 624 m (filed) s
734 624 m (Syntax12i.Scn.Fnt) f (next) s
822 624 m (Syntax12.Scn.Fnt) f (serves) s
944 624 m (to) s
995 624 m (link) s
1077 624 m (objects) s
1220 624 m (together,) s
1398 624 m (i.e.) s
1465 624 m (to) s
1516 624 m (form) s
1620 624 m (a) s
1654 624 m (symbol) s
1799 624 m (table.) s
1913 624 m (These) s
2031 624 m (types) s
177 564 m (are declared as follows:) s
330 489 m (Syntax10.Scn.Fnt) f (Item = POINTER TO ItemDesc;) s
330 440 m (Object = POINTER TO ObjDesc;) s
330 368 m (ItemDesc = RECORD) s
412 319 m (tag, val: INTEGER;) s
412 270 m (a, b: Item) s
330 221 m (END ;) s
1 p
%%Page: 0 10
2105 3224 m (Syntax10.Scn.Fnt) f (9) s
330 3127 m (ObjDesc = RECORD \(ItemDesc\)) s
412 3078 m (next: Object;) s
412 3029 m (name: ARRAY 16 OF CHAR) s
330 2980 m (END ;) s
177 2900 m (Syntax12.Scn.Fnt) f (The) s
259 2900 m (structure) s
438 2900 m (generated) s
635 2900 m (by) s
691 2900 m (the) s
765 2900 m (compiler) s
943 2900 m (from) s
1048 2900 m (a) s
1083 2900 m (given) s
1193 2900 m (program) s
1365 2900 m (can) s
1443 2900 m (be) s
1501 2900 m (derived) s
1648 2900 m (from) s
1752 2900 m (the) s
1825 2900 m (translation) s
2036 2900 m (rules) s
177 2840 m (given) s
286 2840 m (below) s
412 2840 m (for) s
477 2840 m (the) s
550 2840 m (various) s
694 2840 m (constructs) s
896 2840 m (of) s
946 2840 m (the) s
1019 2840 m (language) s
1198 2840 m (Lola.) s
1298 2840 m (The) s
1379 2840 m (translation) s
1590 2840 m (rules) s
1692 2840 m (consist) s
1832 2840 m (of) s
1882 2840 m (pairs,) s
1993 2840 m (the) s
2066 2840 m (left) s
177 2780 m (side) s
269 2780 m (specifying) s
467 2780 m (the) s
545 2780 m (source) s
684 2780 m (construct,) s
884 2780 m (the) s
962 2780 m (right) s
1066 2780 m (side) s
1157 2780 m (the) s
1235 2780 m (corresponding) s
1518 2780 m (piece) s
1632 2780 m (of) s
1687 2780 m (the) s
1765 2780 m (data) s
1863 2780 m (structure.) s
2057 2780 m (The) s
177 2720 m (latter) s
288 2720 m (is) s
331 2720 m (specified) s
507 2720 m (by) s
563 2720 m (a) s
598 2720 m (text) s
681 2720 m (rather) s
806 2720 m (than) s
905 2720 m (a) s
940 2720 m (picture,) s
1093 2720 m (the) s
1167 2720 m (notation) s
1339 2720 m ([fct,) s
1425 2720 m (x,) s
1469 2720 m (y]) s
1517 2720 m (standing) s
1689 2720 m (for) s
1755 2720 m (an) s
1815 2720 m (element) s
1981 2720 m (\(of) s
2048 2720 m (type) s
177 2660 m (Syntax12i.Scn.Fnt) f (Item,) s
282 2660 m (Syntax12.Scn.Fnt) f (or) s
335 2660 m (Syntax12i.Scn.Fnt) f (Object) s
462 2660 m (Syntax12.Scn.Fnt) f (if) s
500 2660 m (named\).) s
671 2660 m (The) s
753 2660 m (form) s
872 2660 m ({op,) s
960 2660 m (x1,) s
1028 2660 m (x2,) s
1096 2660 m (...) s
1142 2660 m (,) s
1165 2660 m (xn}) s
1252 2660 m (stands) s
1383 2660 m (for) s
1448 2660 m (the) s
1521 2660 m (list) s
1600 2660 m ([op,) s
1687 2660 m (x1,) s
1754 2660 m ([op,) s
1841 2660 m (x2,) s
1908 2660 m ([) s
1937 2660 m (...) s
1983 2660 m ([op,) s
2070 2660 m (xn,) s
177 2600 m (NIL] ... ]]. The list of possible tag values is:) s
283 2525 m (Syntax10.Scn.Fnt) f (bit = 0) s
507 2525 m (ts = 1) s
720 2525 m (oc = 2) s
932 2525 m (integer = 3) s
1157 2525 m (array = 4) s
1381 2525 m (record = 5) s
1806 2525 m (buf = 7) s
283 2476 m (not = 8) s
507 2476 m (and = 9) s
720 2476 m (or = 10) s
932 2476 m (xor = 11) s
1157 2476 m (mux = 12) s
1381 2476 m (mux1 = 13) s
1594 2476 m (reg = 14) s
1806 2476 m (reg1 = 15) s
283 2427 m (latch = 16) s
507 2427 m (sr = 17) s
720 2427 m (tsg = 18) s
932 2427 m (link = 19) s
1157 2427 m (lit = 20) s
1381 2427 m (asel = 21) s
1594 2427 m (rsel = 22) s
1806 2427 m (add = 23) s
283 2378 m (sub = 24) s
507 2378 m (neg = 25) s
720 2378 m (mul = 26) s
932 2378 m (div = 27) s
1157 2378 m (mod = 28) s
1381 2378 m (pwr = 29) s
1594 2378 m (eql = 30) s
1806 2378 m (neq = 31) s
283 2329 m (lss = 32) s
507 2329 m (geq = 33) s
720 2329 m (leq = 34) s
932 2329 m (gtr = 35) s
283 2280 m (assign = 40) s
507 2280 m (tsass = 41) s
720 2280 m (ocass = 42) s
932 2280 m (clkass = 43) s
1157 2280 m (posass = 44) s
1381 2280 m (call = 45) s
1594 2280 m (if = 46) s
1806 2280 m (if1 = 47) s
283 2231 m (for = 48) s
507 2231 m (for1 = 49) s
720 2231 m (for2 = 50) s
932 2231 m (next = 51) s
1157 2231 m (par = 52) s
1381 2231 m (const = 53) s
1594 2231 m (var = 54) s
1806 2231 m (in = 55) s
283 2182 m (out = 56) s
507 2182 m (io = 57) s
720 2182 m (type = 58) s
283 2073 m (Syntax12.Scn.Fnt) f (Language construct) s
908 2073 m (Structure element) s
283 2001 m (Syntax10.Scn.Fnt) f (~ x) s
908 2001 m ([not, NIL, x]) s
283 1952 m (MUX\(s: x, y\)) s
908 1952 m ([mux, s, [mux1, x, y]]) s
283 1903 m (REG\(ck: en, d\)) s
908 1903 m ([reg, ck, [reg1, en, d]]) s
283 1854 m (LATCH\(g, d\)) s
908 1854 m ([latch, g, d]) s
283 1805 m (SR\(s', r'\)) s
908 1805 m ([sr, s', r']) s
283 1756 m (x * y) s
908 1756 m ([and, x, y]) s
1227 1756 m ([mul, x, y]) s
283 1707 m (x DIV y) s
1227 1707 m ([div, x, y]) s
283 1658 m (x MOD y) s
1227 1658 m ([mod, x, y]) s
283 1609 m (-x) s
1227 1609 m ([neg, NIL, x]) s
283 1560 m (x + y) s
908 1560 m ([or, x, y]) s
1227 1560 m ([add, x, y]) s
283 1511 m (x - y) s
908 1511 m ([xor, x, y]) s
1227 1511 m ([sub, x, y]) s
283 1462 m (x = y) s
1227 1462 m ([eql, x, y]) s
283 1413 m (x # y) s
1227 1413 m ([neq, x, y]) s
283 1364 m (x < y) s
1227 1364 m ([lss, x, y]) s
283 1315 m (x <= y) s
1227 1315 m ([leq, x, y]) s
283 1266 m (x > y) s
1227 1266 m ([gtr, x, y]) s
283 1217 m (x >= y) s
1227 1217 m ([geq, x, y]) s
283 1145 m (x := y) s
908 1145 m ([assign, x, y]) s
1227 1145 m ([ocass, x, y]) s
283 1096 m (x := y | z) s
908 1096 m ([tsass, x, [tsg, y, z]]) s
283 1047 m (x\(p1, p2, ... pn\)) s
908 1047 m ([call, x, {list, p1, p2, ... , pn}]) s
1511 1047 m (2\)) s
283 998 m (IF x THEN S0 ELSE S1 END) s
908 998 m ([if, x, [if1, S0, S1]]) s
283 949 m (FOR x := y .. z DO S END) s
908 949 m ([for, x, [for1, y, [for2, z, S]]]) s
283 900 m (S1; S2; ... ; Sn) s
908 900 m ({list, S1, S2, ... , Sn}) s
283 828 m ([n] T) s
908 828 m ([array, n, T]) s
283 779 m (IN x1, x2, ... , xn;) s
908 779 m ({op, x1, x2, ... , vn}) s
1227 779 m (1\)) s
283 730 m (OUT y1, y2, ... , yn;) s
283 681 m (INOUT z1, z2, ... , zn;) s
283 632 m (VAR v1, v2, ... , vn) s
283 535 m (\(1\) The tag field in each node indicates the kind of object represented \(in, out, io, var, par\).) s
283 475 m (\(2\) The b-field of the last parameter in the list points to the called variable's type, i.e. is not NIL.) s
177 375 m (Syntax12.Scn.Fnt) f (As) s
235 375 m (an) s
296 375 m (example,) s
478 375 m (the) s
553 375 m (structure) s
733 375 m (resulting) s
908 375 m (from) s
1014 375 m (the) s
1089 375 m (compilation) s
1327 375 m (of) s
1379 375 m (the) s
1454 375 m (following) s
1642 375 m (Lola) s
1733 375 m (program) s
1907 375 m (is) s
1950 375 m (shown) s
2089 375 m (in) s
177 315 m (Fig. 8. It includes a declared type T, of which two instances G and H are created.) s
1 p
%%Page: 0 11
2085 3224 m (Syntax10.Scn.Fnt) f (10) s
330 3127 m (MODULE M1;) s
377 3055 m (TYPE T\(N\);) s
424 3006 m (IN x: BIT;) s
424 2957 m (OUT y: BIT;) s
424 2908 m (VAR a: [N] BIT;) s
377 2859 m (BEGIN y := a.1 + x) s
377 2810 m (END T;) s
377 2738 m (VAR u, v, w: BIT;) s
424 2689 m (G: T\(2\);  H: T\(3\);) s
330 2640 m (BEGIN G\(w\); H\(v\); u := H.y) s
330 2591 m (END M1.) s
575 611 m (var) s
767 611 m (var) s
959 611 m (var) s
1727 547 m (list) s
1727 739 m (list) s
959 995 m (list) s
1279 995 m (list) s
1215 1379 m (list) s
895 1379 m (list) s
575 1379 m (list) s
1903 547 m (lit  3) s
1903 739 m (lit  2) s
1471 547 m (Elektra.Scn.Fnt) f (>) s
1471 739 m (>) s
1663 483 m (>) s
1855 483 m (>) s
1855 675 m (>) s
1663 675 m (>) s
1696 659 127 1 l
1822 659 1 127 l
1696 785 127 1 l
1696 659 1 127 l
1696 723 127 1 l
1760 659 1 63 l
1952 659 1 63 l
1888 723 127 1 l
1888 659 127 1 l
2014 659 1 127 l
1888 785 127 1 l
1888 659 1 127 l
1600 691 95 1 l
1728 691 159 1 l
1728 499 159 1 l
1600 499 95 1 l
1408 563 95 1 l
1535 547 m (Syntax10.Scn.Fnt) f (rec) s
1535 739 m (rec) s
1248 1299 1 63 l
1280 755 223 1 l
1280 563 1 191 l
1152 563 127 1 l
1216 659 1 479 l
960 787 1 159 l
1888 467 127 1 l
2014 467 1 127 l
1888 593 127 1 l
1888 467 1 127 l
1888 531 127 1 l
1952 467 1 63 l
1760 467 1 63 l
1696 531 127 1 l
1696 467 127 1 l
1822 467 1 127 l
1696 593 127 1 l
1696 467 1 127 l
1504 467 127 1 l
1630 467 1 127 l
1504 593 127 1 l
1504 467 1 127 l
1504 531 127 1 l
1568 467 1 63 l
1568 659 1 63 l
1504 723 127 1 l
1504 659 127 1 l
1630 659 1 127 l
1504 785 127 1 l
1504 659 1 127 l
960 1619 1 415 l
767 1667 m (bit) s
559 1667 m (integ) s
640 1779 1 95 l
623 1843 m (Elektra.Scn.Fnt) f (:) s
863 1603 m (<) s
671 2403 m (<) s
559 1715 m (;) s
751 1715 m (;) s
1135 1715 m (;) s
640 1779 639 1 l
1280 1619 1 159 l
1216 1619 63 1 l
864 1619 287 1 l
768 1715 1 319 l
576 1715 1 319 l
544 1587 127 3 l
668 1587 3 127 l
544 1711 127 3 l
544 1587 3 127 l
544 1651 127 1 l
608 1587 1 63 l
800 1587 1 63 l
736 1651 127 1 l
736 1587 127 3 l
860 1587 3 127 l
736 1711 127 3 l
736 1587 3 127 l
1135 1667 m (Syntax10.Scn.Fnt) f (array) s
1152 1715 1 319 l
1184 1587 1 63 l
1120 1651 127 1 l
1120 1587 127 1 l
1246 1587 1 127 l
1120 1713 127 1 l
1120 1587 1 127 l
599 2219 m (Elektra.Scn.Fnt) f (!) s
447 1347 m (Syntax10.Scn.Fnt) f (C) s
448 1331 95 1 l
447 467 m (B) s
431 2083 m (A) s
448 2131 1 63 l
511 2179 m (Elektra.Scn.Fnt) f (>) s
448 2195 95 1 l
448 435 95 1 l
511 419 m (>) s
703 419 m (>) s
895 419 m (>) s
1087 419 m (>) s
1279 419 m (>) s
1367 427 m (!) s
576 2131 1 223 l
1175 1899 m (!) s
831 1315 m (>) s
1151 1315 m (>) s
1199 1235 m (;) s
1263 1043 m (;) s
943 1043 m (;) s
879 1235 m (;) s
559 1235 m (;) s
623 1043 m (;) s
783 659 m (;) s
975 659 m (;) s
1199 659 m (;) s
672 2419 1279 1 l
1952 851 1 1567 l
1344 851 1 95 l
1024 851 927 1 l
1024 851 1 95 l
992 659 1 127 l
992 787 287 1 l
1280 787 1 159 l
800 659 1 127 l
800 787 159 1 l
896 819 1 319 l
559 659 m (;) s
1359 659 m (;) s
975 1843 m (:) s
992 1523 1 351 l
800 1523 191 1 l
800 947 1 575 l
704 947 95 1 l
1376 659 1 159 l
640 819 735 1 l
640 819 1 127 l
576 659 1 479 l
639 995 m (Syntax10.Scn.Fnt) f (rsel) s
1280 1043 1 95 l
960 1043 1 95 l
640 1043 1 95 l
1215 1187 m (call) s
895 1187 m (call) s
551 1187 m (assign) s
1216 1235 1 95 l
896 1235 1 95 l
960 1331 223 1 l
640 1331 223 1 l
576 1235 1 95 l
1312 915 1 63 l
1248 979 127 1 l
1248 915 127 1 l
1374 915 1 127 l
1248 1041 127 1 l
1248 915 1 127 l
1184 1107 127 1 l
1310 1107 1 127 l
1184 1233 127 1 l
1184 1107 1 127 l
1184 1171 127 1 l
1248 1107 1 63 l
1184 1363 127 1 l
1184 1299 127 1 l
1310 1299 1 127 l
1184 1425 127 1 l
1184 1299 1 127 l
864 1299 127 1 l
990 1299 1 127 l
864 1425 127 1 l
864 1299 1 127 l
864 1363 127 1 l
928 1299 1 63 l
928 1107 1 63 l
864 1171 127 1 l
864 1107 127 1 l
990 1107 1 127 l
864 1233 127 1 l
864 1107 1 127 l
928 915 127 1 l
1054 915 1 127 l
928 1041 127 1 l
928 915 1 127 l
928 979 127 1 l
992 915 1 63 l
672 915 1 63 l
608 979 127 1 l
608 915 127 1 l
734 915 1 127 l
608 1041 127 1 l
608 915 1 127 l
544 1107 127 1 l
670 1107 1 127 l
544 1233 127 1 l
544 1107 1 127 l
544 1171 127 1 l
608 1107 1 63 l
608 1299 1 63 l
544 1363 127 1 l
544 1299 127 1 l
670 1299 1 127 l
544 1425 127 1 l
544 1299 1 127 l
783 1843 m (Elektra.Scn.Fnt) f (:) s
800 1811 1 63 l
800 1811 735 1 l
1536 1811 1 95 l
1312 1715 287 1 l
1664 1715 95 1 l
1583 1811 m (;) s
1600 1811 1 95 l
1775 1699 m (Syntax10.Scn.Fnt) f (lit  1) s
1599 1763 m (asel) s
1551 1955 m (or) s
975 2131 m (Elektra.Scn.Fnt) f (;) s
992 2131 1 63 l
992 2195 383 1 l
1376 2099 1 95 l
1376 2099 95 1 l
1447 2147 m (Syntax10.Scn.Fnt) f (assign) s
1471 2339 m (link) s
1151 2083 m (var) s
959 2083 m (out) s
767 2083 m (in) s
575 2083 m (par) s
559 2403 m (type) s
559 2131 m (Elektra.Scn.Fnt) f (;) s
703 1891 m (>) s
895 1891 m (>) s
1087 1891 m (>) s
1455 2195 m (;) s
1519 2003 m (;) s
1727 1699 m (>) s
1247 2083 m (<) s
1248 2099 63 1 l
1312 1715 1 383 l
1536 2003 1 95 l
1472 2195 1 95 l
1824 1619 1 63 l
1760 1683 127 1 l
1760 1619 127 1 l
1886 1619 1 127 l
1760 1745 127 1 l
1760 1619 1 127 l
1568 1683 127 1 l
1694 1683 1 127 l
1568 1809 127 1 l
1568 1683 1 127 l
1568 1747 127 1 l
1632 1683 1 63 l
1568 1875 1 63 l
1504 1939 127 1 l
1504 1875 127 1 l
1630 1875 1 127 l
1504 2001 127 1 l
1504 1875 1 127 l
1440 2067 127 1 l
1566 2067 1 127 l
1440 2193 127 1 l
1440 2067 1 127 l
1440 2131 127 1 l
1504 2067 1 63 l
511 1315 m (>) s
640 2355 799 1 l
1504 2259 1 63 l
1440 2323 127 1 l
1440 2259 127 1 l
1566 2259 1 127 l
1440 2385 127 1 l
1440 2259 1 127 l
1407 2339 m (>) s
415 2227 m (Syntax10.Scn.Fnt) f (next) s
415 2291 m (name) s
415 2355 m (a, b) s
415 2419 m (tag) s
544 2195 127 1 l
670 2195 1 255 l
544 2449 127 1 l
544 2195 1 255 l
544 2323 127 3 l
544 2387 127 1 l
608 2323 1 63 l
544 2259 127 1 l
591 2275 m (T) s
544 1875 127 1 l
670 1875 1 255 l
544 2129 127 1 l
544 1875 1 255 l
544 2003 127 3 l
544 2067 127 1 l
608 2003 1 63 l
544 1939 127 1 l
736 1939 127 1 l
800 2003 1 63 l
736 2067 127 1 l
736 2003 127 3 l
736 1875 127 1 l
862 1875 1 255 l
736 2129 127 1 l
736 1875 1 255 l
928 1875 127 1 l
1054 1875 1 255 l
928 2129 127 1 l
928 1875 1 255 l
928 2003 127 3 l
928 2067 127 1 l
992 2003 1 63 l
928 1939 127 1 l
544 467 127 1 l
608 531 1 63 l
544 595 127 1 l
544 531 127 3 l
544 403 127 1 l
670 403 1 255 l
544 657 127 1 l
544 403 1 255 l
736 403 127 1 l
862 403 1 255 l
736 657 127 1 l
736 403 1 255 l
736 531 127 3 l
736 595 127 1 l
800 531 1 63 l
736 467 127 1 l
928 467 127 1 l
992 531 1 63 l
928 595 127 1 l
928 531 127 3 l
928 403 127 1 l
1054 403 1 255 l
928 657 127 1 l
928 403 1 255 l
1120 403 127 1 l
1246 403 1 255 l
1120 657 127 1 l
1120 403 1 255 l
1120 531 127 3 l
1120 595 127 1 l
1184 531 1 63 l
1120 467 127 1 l
1359 483 m (H) s
1167 483 m (G) s
783 483 m (v) s
591 483 m (u) s
640 435 95 1 l
832 435 95 1 l
1024 435 95 1 l
640 1907 95 1 l
832 1907 95 1 l
783 1955 m (x) s
1024 1907 95 1 l
1120 1939 127 1 l
1184 2003 1 63 l
1120 2067 127 1 l
1120 2003 127 3 l
1120 1875 127 1 l
1246 1875 1 255 l
1120 2129 127 1 l
1120 1875 1 255 l
591 1955 m (N) s
975 1955 m (y) s
1167 1955 m (a) s
975 483 m (w) s
1216 435 95 1 l
1312 467 127 1 l
1376 531 1 63 l
1312 595 127 1 l
1312 531 127 3 l
1312 403 127 1 l
1438 403 1 255 l
1312 657 127 1 l
1312 403 1 255 l
1151 611 m (var) s
1343 611 m (var) s
583 331 m (Syntax12.Scn.Fnt) f (Fig. 8. Compiled output structure resulting from program M1) s
1 p
%%Page: 0 12
2085 3224 m (Syntax10.Scn.Fnt) f (11) s
177 3119 m (Syntax12.Scn.Fnt) f (The) s
264 3119 m (list) s
336 3119 m (A) s
381 3119 m (of) s
437 3119 m (declared) s
612 3119 m (types) s
725 3119 m (\(see) s
819 3119 m (Fig.) s
902 3119 m (8\)) s
961 3119 m (is) s
1008 3119 m (rooted) s
1149 3119 m (in) s
1204 3119 m (the) s
1283 3119 m (global) s
1414 3119 m (variable) s
1575 3119 m (Syntax12i.Scn.Fnt) f (LSC.globalScope.next.) s
1965 3119 m (Syntax12.Scn.Fnt) f (List) s
2045 3119 m (B) s
2088 3119 m (of) s
177 3059 m (declared) s
358 3059 m (global) s
495 3059 m (objects) s
650 3059 m (\(except) s
810 3059 m (types\)) s
945 3059 m (is) s
998 3059 m (rooted) s
1144 3059 m (in) s
1204 3059 m (variable) s
1370 3059 m (Syntax12i.Scn.Fnt) f (LSC.localScope.next.) s
1740 3059 m (Syntax12.Scn.Fnt) f (List) s
1826 3059 m (C) s
1878 3059 m (of) s
1939 3059 m (statement) s
177 2999 m (structures) s
371 2999 m (of) s
420 2999 m (the) s
492 2999 m (module) s
648 2999 m (body) s
749 2999 m (is) s
788 2999 m (rooted) s
921 2999 m (in) s
968 2999 m (Syntax12i.Scn.Fnt) f (LSC.body.) s
1146 2999 m (Syntax12.Scn.Fnt) f (Lists) s
1236 2999 m (A) s
1273 2999 m (and) s
1354 2999 m (B) s
1390 2999 m (end) s
1471 2999 m (with) s
1565 2999 m (the) s
1636 2999 m (sentinel) s
1792 2999 m (element) s
1955 2999 m (Syntax12i.Scn.Fnt) f (LSC.guard) s
177 2939 m (Syntax12.Scn.Fnt) f (instead of with NIL. Items with ) s
(Syntax12i.Scn.Fnt) f (tag = lit) s
(Syntax12.Scn.Fnt) f ( carry a literal value in field ) s
(Syntax12i.Scn.Fnt) f (val.) s
177 2856 m (Syntax12.Scn.Fnt) f (The) s
261 2856 m (compiler) s
441 2856 m (consists) s
601 2856 m (of) s
654 2856 m (the) s
730 2856 m (two) s
817 2856 m (modules) s
994 2856 m (LSS) s
1076 2856 m (\(Lola) s
1184 2856 m (System) s
1332 2856 m (Scanner,) s
1506 2856 m (2400) s
1617 2856 m (bytes\)) s
1742 2856 m (and) s
1827 2856 m (LSC) s
1913 2856 m (\(Parser) s
2055 2856 m (and) s
177 2796 m (generator, 6900 bytes\), and it is activated by the command) s
295 2713 m (Lola.Compile @) s
732 2713 m (compiling the text beginning with the most recent selection) s
295 2653 m (Lola.Compile *) s
732 2653 m (compiling the text in the marked viewer) s
295 2593 m (Lola.Compile name) s
732 2593 m (compiling the named text file) s
177 2473 m (Syntax12m.Scn.Fnt) f (6. Interpretation of the compiled data structure) s
177 2390 m (Syntax12.Scn.Fnt) f (Suitable) s
340 2390 m (interpretation) s
608 2390 m (of) s
658 2390 m (the) s
731 2390 m (compiled) s
916 2390 m (data) s
1008 2390 m (leads) s
1114 2390 m (to) s
1164 2390 m (the) s
1236 2390 m (desired) s
1381 2390 m (data) s
1473 2390 m (structure) s
1650 2390 m (representing) s
1892 2390 m (the) s
1964 2390 m (specified) s
177 2330 m (circuit.) s
317 2330 m (We) s
398 2330 m (recall) s
511 2330 m (that) s
600 2330 m (in) s
651 2330 m (this) s
733 2330 m (structure,) s
923 2330 m (each) s
1024 2330 m (circuit) s
1153 2330 m (element) s
1320 2330 m (\(gate,) s
1438 2330 m (register\)) s
1604 2330 m (is) s
1646 2330 m (represented) s
1878 2330 m (by) s
1934 2330 m (a) s
1969 2330 m (node.) s
2088 2330 m (In) s
177 2270 m (contrast,) s
352 2270 m (in) s
404 2270 m (the) s
480 2270 m (compiler's) s
685 2270 m (output,) s
837 2270 m (which) s
966 2270 m (represents) s
1172 2270 m (the) s
1248 2270 m (source) s
1385 2270 m (text) s
1470 2270 m (mapped) s
1638 2270 m (into) s
1727 2270 m (a) s
1763 2270 m (tree,) s
1859 2270 m (a) s
1895 2270 m (variable) s
2052 2270 m (of) s
2104 2270 m (a) s
177 2210 m (composite) s
382 2210 m (type) s
471 2210 m (\(array,) s
599 2210 m (record\)) s
744 2210 m (is) s
783 2210 m (represented) s
1012 2210 m (by) s
1065 2210 m (a) s
1097 2210 m (single) s
1214 2210 m (node.) s
1330 2210 m (Therefore,) s
1528 2210 m (the) s
1599 2210 m (interpretation) s
1865 2210 m (\(execution\)) s
2088 2210 m (of) s
177 2150 m (the) s
254 2150 m (code) s
358 2150 m (structure) s
539 2150 m (essentially) s
742 2150 m (constitutes) s
959 2150 m (an) s
1021 2150 m (expansion) s
1225 2150 m (process,) s
1388 2150 m (to) s
1442 2150 m (a) s
1479 2150 m (flattening) s
1671 2150 m (of) s
1724 2150 m (the) s
1800 2150 m (data) s
1896 2150 m (structure.) s
2088 2150 m (In) s
177 2090 m (particular,) s
383 2090 m (every) s
496 2090 m (structured) s
705 2090 m (variable) s
867 2090 m (is) s
915 2090 m (expanded) s
1115 2090 m (into) s
1209 2090 m (nodes,) s
1350 2090 m (one) s
1440 2090 m (for) s
1512 2090 m (each) s
1618 2090 m (component) s
1853 2090 m (variable.) s
2026 2090 m (Since) s
177 2030 m (components) s
422 2030 m (of) s
471 2030 m (structured) s
672 2030 m (variables) s
843 2030 m (may) s
933 2030 m (themselves) s
1149 2030 m (be) s
1206 2030 m (structured,) s
1417 2030 m (the) s
1489 2030 m (expansion) s
1689 2030 m (procedure) s
1889 2030 m (is) s
1929 2030 m (necessarily) s
177 1970 m (recursive.) s
177 1887 m (As) s
233 1887 m (an) s
292 1887 m (example,) s
472 1887 m (we) s
539 1887 m (show) s
651 1887 m (the) s
724 1887 m (result) s
840 1887 m (of) s
890 1887 m (the) s
963 1887 m (expansion) s
1164 1887 m (of) s
1214 1887 m (the) s
1286 1887 m (code) s
1386 1887 m (of) s
1435 1887 m (Fig.) s
1511 1887 m (8.) s
1558 1887 m (Instead) s
1704 1887 m (of) s
1753 1887 m (a) s
1786 1887 m (data) s
1878 1887 m (structure,) s
2065 1887 m (the) s
177 1827 m (textual form produced by ) s
(Syntax12i.Scn.Fnt) f (Lola.Show) s
(Syntax12.Scn.Fnt) f ( is chosen:) s
318 1752 m (Syntax10.Scn.Fnt) f (H.x := v) s
825 1752 m (G.x := w) s
318 1703 m (H.y := \(H.a.1+H.x\)) s
825 1703 m (G.y := \(G.a.1+G.x\)) s
318 1654 m (H.a.0) s
825 1654 m (G.a.0) s
318 1605 m (H.a.1) s
825 1605 m (G.a.1) s
318 1556 m (H.a.2) s
318 1507 m (w) s
318 1458 m (v) s
318 1409 m (u := H.y) s
177 1329 m (Syntax12.Scn.Fnt) f (In) s
233 1329 m (our) s
316 1329 m (implementation,) s
645 1329 m (expansion) s
852 1329 m (follows) s
1004 1329 m (compilation) s
1246 1329 m (automatically,) s
1524 1329 m (i.e.) s
1597 1329 m (is) s
1643 1329 m (implied) s
1802 1329 m (in) s
1856 1329 m (the) s
1934 1329 m (command) s
177 1269 m (Syntax12i.Scn.Fnt) f (Lola.Compile.) s
429 1269 m (Syntax12.Scn.Fnt) f (In) s
483 1269 m (addition,) s
664 1269 m (two) s
751 1269 m (further) s
895 1269 m (steps) s
1004 1269 m (are) s
1077 1269 m (implied) s
1234 1269 m (following) s
1423 1269 m (expansion,) s
1637 1269 m (namely) s
1788 1269 m (simplification) s
2055 1269 m (and) s
177 1209 m (checking for combinational loops.) s
177 1126 m (The) s
261 1126 m (expansion) s
465 1126 m (process) s
618 1126 m (starts) s
731 1126 m (with) s
829 1126 m (the) s
904 1126 m (first) s
989 1126 m (element) s
1156 1126 m (of) s
1208 1126 m (the) s
1283 1126 m (list) s
1351 1126 m (of) s
1403 1126 m (global) s
1530 1126 m (variables) s
1704 1126 m (\(B) s
1760 1126 m (in) s
1811 1126 m (Fig.) s
1890 1126 m (8\),) s
1955 1126 m (and) s
2040 1126 m (then) s
177 1066 m (proceeds) s
357 1066 m (through) s
521 1066 m (the) s
596 1066 m (list.) s
675 1066 m (For) s
750 1066 m (constants) s
941 1066 m (at) s
990 1066 m (the) s
1064 1066 m (head) s
1169 1066 m (of) s
1220 1066 m (the) s
1294 1066 m (list) s
1361 1066 m (\(tag) s
1447 1066 m (=) s
1487 1066 m (par\),) s
1587 1066 m (interpretation) s
1856 1066 m (consists) s
2014 1066 m (of) s
2065 1066 m (the) s
177 1006 m (evaluation) s
386 1006 m (of) s
441 1006 m (the) s
519 1006 m (numeric) s
692 1006 m (expression) s
904 1006 m (for) s
973 1006 m (which) s
1103 1006 m (the) s
1180 1006 m (constant) s
1356 1006 m (stands.) s
1502 1006 m (This) s
1594 1006 m (is) s
1639 1006 m (the) s
1716 1006 m (purpose) s
1883 1006 m (of) s
1937 1006 m (procedure) s
177 946 m (V\(x\). For variables in the list, expansion is performed by the recursive procedure ) s
(Syntax12i.Scn.Fnt) f (NewVar.) s
177 863 m (Syntax12.Scn.Fnt) f (After) s
287 863 m (all) s
351 863 m (variables) s
531 863 m (have) s
637 863 m (been) s
749 863 m (generated,) s
963 863 m (they) s
1062 863 m (act) s
1137 863 m (as) s
1195 863 m (anchors) s
1361 863 m (for) s
1433 863 m (the) s
1513 863 m (data) s
1613 863 m (structures) s
1815 863 m (representing) s
2065 863 m (the) s
177 803 m (assigned) s
356 803 m (expressions.) s
601 803 m (The) s
691 803 m (data) s
793 803 m (representing) s
1045 803 m (Lola) s
1143 803 m (statements) s
1368 803 m (are) s
1447 803 m (interpreted) s
1674 803 m (by) s
1738 803 m (procedure) s
1948 803 m (S\(x\),) s
2055 803 m (first) s
177 743 m (applied) s
330 743 m (to) s
385 743 m (Syntax12i.Scn.Fnt) f (LSC.body.) s
569 743 m (Syntax12.Scn.Fnt) f (Procedure) s
771 743 m (S) s
810 743 m (distinguishes) s
1065 743 m (between) s
1240 743 m (the) s
1316 743 m (different) s
1489 743 m (kinds) s
1604 743 m (of) s
1657 743 m (statements:) s
1887 743 m (assignments,) s
177 683 m (calls,) s
284 683 m (if-,) s
362 683 m (and) s
450 683 m (for) s
520 683 m (statements.) s
752 683 m (S) s
793 683 m (calls) s
890 683 m (procedure) s
1096 683 m (E) s
1137 683 m (interpreting) s
1372 683 m (data) s
1470 683 m (corresponding) s
1753 683 m (to) s
1809 683 m (Lola) s
1902 683 m (expressions.) s
177 623 m (Whereas) s
359 623 m (the) s
436 623 m (interpretation) s
708 623 m (of) s
762 623 m (assignments) s
1007 623 m (is) s
1052 623 m (reasonably) s
1266 623 m (straight-forward,) s
1602 623 m (the) s
1678 623 m (interpretation) s
1949 623 m (of) s
2002 623 m (calls) s
2097 623 m (is) s
177 563 m (quite) s
299 563 m (complicated.) s
564 563 m (It) s
617 563 m (includes) s
797 563 m (the) s
884 563 m (evaluation) s
1102 563 m (of) s
1166 563 m (actual) s
1304 563 m (parameters) s
1539 563 m (and) s
1635 563 m (their) s
1747 563 m (assignments) s
2001 563 m (to) s
2065 563 m (the) s
177 503 m (corresponding input variables. This is done by procedure ) s
(Syntax12i.Scn.Fnt) f (Link.) s
177 420 m (Syntax12.Scn.Fnt) f (We) s
255 420 m (note) s
351 420 m (that) s
437 420 m (the) s
509 420 m (assignment) s
732 420 m (of) s
781 420 m (constants) s
969 420 m (0) s
1005 420 m (and) s
1087 420 m (1) s
1123 420 m (to) s
1173 420 m (inputs) s
1301 420 m (may) s
1391 420 m (give) s
1474 420 m (rise) s
1550 420 m (to) s
1599 420 m (expressions) s
1822 420 m (assigned) s
1990 420 m (to) s
2039 420 m (local) s
177 360 m (variables) s
359 360 m (becoming) s
566 360 m (amenable) s
772 360 m (to) s
832 360 m (simplification.) s
1116 360 m (This) s
1213 360 m (is) s
1263 360 m (the) s
1345 360 m (reason) s
1490 360 m (why) s
1588 360 m (simplification) s
1861 360 m (during) s
2004 360 m (source) s
177 300 m (compilation alone is insufficient.) s
1 p
%%Page: 0 13
2085 3224 m (Syntax10.Scn.Fnt) f (12) s
177 3119 m (Syntax12m.Scn.Fnt) f (7. Circuit Simulation) s
177 3019 m (Syntax12.Scn.Fnt) f (The) s
259 3019 m (described) s
449 3019 m (data) s
543 3019 m (structure) s
722 3019 m (is) s
764 3019 m (also) s
851 3019 m (a) s
886 3019 m (suitable) s
1044 3019 m (basis) s
1148 3019 m (for) s
1214 3019 m (simulating) s
1423 3019 m (circuits.) s
1579 3019 m (The) s
1661 3019 m (principle) s
1836 3019 m (of) s
1886 3019 m (simulation) s
2097 3019 m (is) s
177 2959 m (quite) s
288 2959 m (simple) s
427 2959 m (in) s
479 2959 m (the) s
555 2959 m (case) s
649 2959 m (of) s
702 2959 m (synchronous) s
952 2959 m (circuits,) s
1109 2959 m (to) s
1162 2959 m (which) s
1290 2959 m (we) s
1359 2959 m (restrict) s
1500 2959 m (our) s
1579 2959 m (attention.) s
1774 2959 m (Time) s
1882 2959 m (progresses) s
2089 2959 m (in) s
177 2899 m (discrete) s
334 2899 m (steps,) s
452 2899 m (and) s
537 2899 m (in) s
588 2899 m (each) s
689 2899 m (step) s
780 2899 m (all) s
838 2899 m (registers) s
1005 2899 m (are) s
1077 2899 m (clocked) s
1232 2899 m (simultaneously.) s
1537 2899 m (Therefore,) s
1739 2899 m (the) s
1814 2899 m (behaviour) s
2013 2899 m (of) s
2065 2899 m (the) s
177 2839 m (entire) s
297 2839 m (circuit) s
424 2839 m (can) s
502 2839 m (be) s
560 2839 m (represented) s
791 2839 m (by) s
846 2839 m (a) s
880 2839 m (sequence) s
1066 2839 m (of) s
1116 2839 m (binary) s
1243 2839 m (values) s
1369 2839 m (for) s
1434 2839 m (each) s
1532 2839 m (variable.) s
1697 2839 m (The) s
1777 2839 m (goal) s
1866 2839 m (of) s
1915 2839 m (a) s
1948 2839 m (simulator) s
177 2779 m (is to generate these sequences of binary values.) s
177 2696 m (In) s
227 2696 m (order) s
339 2696 m (to) s
390 2696 m (understand) s
614 2696 m (the) s
687 2696 m (principle) s
861 2696 m (of) s
911 2696 m (the) s
983 2696 m (simulator,) s
1182 2696 m (we) s
1248 2696 m (consider) s
1416 2696 m (the) s
1488 2696 m (scheme) s
1642 2696 m (of) s
1691 2696 m (a) s
1724 2696 m (general,) s
1881 2696 m (synchronous,) s
177 2636 m (sequential) s
387 2636 m (machine,) s
578 2636 m (called) s
705 2636 m (a) s
746 2636 m (Syntax12i.Scn.Fnt) f (state) s
848 2636 m (machine.) s
1026 2636 m (Syntax12.Scn.Fnt) f (F) s
1066 2636 m (and) s
1155 2636 m (G) s
1204 2636 m (are) s
1280 2636 m (arbitrary) s
1453 2636 m (combinational) s
1741 2636 m (circuits,) s
1901 2636 m (i.e.) s
1974 2636 m (Boolean) s
177 2576 m (functions. R denotes the set of simultaneously clocked registers.) s
1661 2394 m (Syntax10.Scn.Fnt) f (y) s
717 2394 m (x) s
1053 2314 m (ck) s
1102 2330 31 1 l
1125 2314 m (Elektra.Scn.Fnt) f (>) s
1181 2362 m (Syntax10.Scn.Fnt) f (R) s
1437 2362 m (G) s
925 2362 m (F) s
1613 2394 m (Elektra.Scn.Fnt) f (>) s
845 2330 m (>) s
1357 2394 m (>) s
1101 2394 m (>) s
845 2394 m (>) s
814 2346 63 1 l
814 2218 1 127 l
814 2218 767 1 l
1582 2218 1 127 l
1518 2346 63 1 l
1518 2410 127 1 l
1262 2410 127 1 l
1006 2410 127 1 l
750 2410 127 1 l
1390 2282 127 1 l
1516 2282 1 191 l
1390 2472 127 1 l
1390 2282 1 191 l
1134 2282 127 3 l
1258 2282 3 191 l
1134 2470 127 3 l
1134 2282 3 191 l
878 2282 127 1 l
1004 2282 1 191 l
878 2472 127 1 l
878 2282 1 191 l
958 2150 m (Syntax12.Scn.Fnt) f (Fig. 9. State machine) s
177 2067 m (The simulation program is derived from Fig. 9. The following algorithm represents a single step:) s
259 1984 m (For each variable compute its value according to the defining Boolean expression, from the values of) s
259 1924 m (other variables and from the states of the registers. Then do likewise for the register inputs. Finally, let) s
259 1864 m (the register values become equal to their inputs. This represents the clock tick.) s
177 1781 m (The) s
257 1781 m (assignment) s
480 1781 m (of) s
529 1781 m (its) s
583 1781 m (value) s
691 1781 m (to) s
741 1781 m (a) s
774 1781 m (variable) s
928 1781 m (Syntax12i.Scn.Fnt) f (v) s
959 1781 m (Syntax12.Scn.Fnt) f (is) s
999 1781 m (expressed) s
1191 1781 m (as) s
1241 1781 m (Syntax12i.Scn.Fnt) f (v.val) s
1331 1781 m (:=) s
1377 1781 m (value\(v.x\),) s
1570 1781 m (Syntax12.Scn.Fnt) f (where) s
1696 1781 m (the) s
1767 1781 m (function) s
1934 1781 m (recursively) s
177 1721 m (traverses the tree rooted in ) s
(Syntax12i.Scn.Fnt) f (v.x.) s
271 1646 m (Syntax10.Scn.Fnt) f (PROCEDURE value\(s: Signal\): SHORTINT;) s
318 1597 m (VAR w: SHORTINT;) s
271 1548 m (BEGIN) s
318 1499 m (IF s # NIL THEN) s
365 1450 m (IF s IS Variable THEN assign\(s\(Variable\)\); w := s.val) s
365 1401 m (ELSE) s
412 1352 m (CASE s.fct OF) s
412 1303 m (   or:  w := or[value\(s.x\), value\(s.y\)]) s
412 1254 m (| and: w := and[value\(s.x\), value\(s.y\)]) s
412 1205 m (| reg: w := s.val) s
412 1156 m (| ...) s
412 1107 m (END) s
365 1058 m (END) s
318 1009 m (ELSE w := undef) s
318 960 m (END ;) s
318 911 m (RETURN w) s
271 862 m (END value;) s
177 782 m (Syntax12.Scn.Fnt) f (An) s
245 782 m (advantage) s
448 782 m (of) s
502 782 m (simulation) s
717 782 m (is) s
762 782 m (that) s
853 782 m (a) s
891 782 m (variable) s
1049 782 m (may) s
1143 782 m (be) s
1204 782 m (marked) s
1362 782 m (as) s
1416 782 m (undefined,) s
1631 782 m (and) s
1717 782 m (that) s
1807 782 m (undefined) s
2012 782 m (values) s
177 722 m (may) s
278 722 m (be) s
346 722 m (propagated,) s
588 722 m (detected) s
769 722 m (and) s
862 722 m (diagnosed.) s
1084 722 m (This) s
1182 722 m (is) s
1232 722 m (typically) s
1401 722 m (done) s
1517 722 m (not) s
1602 722 m (by) s
1666 722 m (providing) s
1861 722 m (an) s
1929 722 m (additional,) s
177 662 m (Boolean attribute ) s
(Syntax12i.Scn.Fnt) f (defined,) s
(Syntax12.Scn.Fnt) f ( but by extending the range of values of ) s
(Syntax12i.Scn.Fnt) f (val.) s
(Syntax12.Scn.Fnt) f ( We use ) s
(Syntax12i.Scn.Fnt) f (undefined = 3.) s
177 579 m (Syntax12.Scn.Fnt) f (If) s
223 579 m (the) s
304 579 m (tree) s
396 579 m (traversal) s
570 579 m (reaches) s
730 579 m (a) s
771 579 m (variable) s
933 579 m (node,) s
1057 579 m (then) s
1162 579 m (the) s
1242 579 m (process) s
1399 579 m (continues) s
1600 579 m (with) s
1703 579 m (the) s
1783 579 m (evaluation) s
1994 579 m (of) s
2051 579 m (that) s
177 519 m (variable's) s
366 519 m (expression.) s
594 519 m (As) s
659 519 m (this) s
747 519 m (may) s
846 519 m (lead) s
944 519 m (to) s
1003 519 m (a) s
1045 519 m (never) s
1166 519 m (ending) s
1314 519 m (computation,) s
1585 519 m (nodes) s
1717 519 m (once) s
1827 519 m (visited) s
1964 519 m (must) s
2080 519 m (be) s
177 459 m (marked.) s
342 459 m (We) s
420 459 m (assume) s
572 459 m (that) s
658 459 m (all) s
713 459 m (nodes) s
835 459 m (representing) s
1076 459 m (variables) s
1246 459 m (in) s
1293 459 m (the) s
1364 459 m (data) s
1455 459 m (structure) s
1631 459 m (are) s
1699 459 m (initially) s
1843 459 m (marked) s
1996 459 m (by,) s
2059 459 m (say,) s
177 399 m ("color") s
313 399 m (Syntax12i.Scn.Fnt) f (black) s
419 399 m (Syntax12.Scn.Fnt) f (\(val) s
500 399 m (=) s
541 399 m (5\).) s
607 399 m (During) s
751 399 m (traversal,) s
929 399 m (all) s
987 399 m (visited) s
1118 399 m (variable) s
1275 399 m (nodes) s
1400 399 m (are) s
1471 399 m (brightened) s
1686 399 m (to) s
1738 399 m (Syntax12i.Scn.Fnt) f (grey) s
1824 399 m (Syntax12.Scn.Fnt) f (\(val) s
1904 399 m (=) s
1944 399 m (4\).) s
2009 399 m (When) s
177 339 m (the) s
252 339 m (expression) s
462 339 m (has) s
540 339 m (been) s
646 339 m (evaluated,) s
847 339 m (the) s
922 339 m (resulting) s
1097 339 m (value) s
1208 339 m (\(0,) s
1273 339 m (1,) s
1322 339 m (or) s
1376 339 m (3\)) s
1431 339 m (is) s
1474 339 m (assigned) s
1646 339 m (\(val) s
1726 339 m (<=) s
1792 339 m (3) s
1830 339 m (is) s
1872 339 m (considered) s
2087 339 m (as) s
177 279 m (Syntax12i.Scn.Fnt) f (white) s
(Syntax12.Scn.Fnt) f (\).) s
322 279 m (If) s
363 279 m (a) s
400 279 m (grey) s
491 279 m (node) s
601 279 m (is) s
645 279 m (reached,) s
817 279 m (the) s
893 279 m (evaluation) s
1100 279 m (process) s
1253 279 m (is) s
1297 279 m (evidently) s
1476 279 m (in) s
1528 279 m (a) s
1565 279 m (loop,) s
1674 279 m (which) s
1802 279 m (would) s
1934 279 m (have) s
2034 279 m (been) s
177 219 m (detected) s
348 219 m (by) s
403 219 m (a) s
437 219 m (prior) s
539 219 m (test) s
618 219 m (for) s
683 219 m (combinational) s
965 219 m (loops.) s
1089 219 m (We) s
1168 219 m (realize) s
1300 219 m (that) s
1387 219 m (indeed) s
1526 219 m (the) s
1599 219 m (coloring) s
1761 219 m (scheme) s
1915 219 m (is) s
1955 219 m (the) s
2027 219 m (same) s
1 p
%%Page: 0 14
2085 3224 m (Syntax10.Scn.Fnt) f (13) s
177 3119 m (Syntax12.Scn.Fnt) f (as the one used in procedure ) s
(Syntax12i.Scn.Fnt) f (LSB.Loops.) s
271 3044 m (Syntax10.Scn.Fnt) f (PROCEDURE assign\(v: Variable\);) s
318 2995 m (VAR lnk, tsg: Signal;) s
365 2946 m (w, h: SHORTINT;) s
271 2897 m (BEGIN ) s
318 2848 m (IF v.val = black THEN) s
365 2799 m (v.val := grey; v.val := value\(v.x\)) s
318 2750 m (ELSIF v.val = grey THEN) s
365 2701 m (WriteName\(W, v\); Texts.WriteString\(W, " in loop"\); Texts.WriteLn\(W\)) s
318 2652 m (END) s
271 2603 m (END assign;) s
177 2523 m (Syntax12.Scn.Fnt) f (Tree) s
273 2523 m (traversal) s
443 2523 m (stops) s
556 2523 m (when) s
677 2523 m (a) s
715 2523 m (Syntax12i.Scn.Fnt) f (white) s
834 2523 m (Syntax12.Scn.Fnt) f (variable,) s
1003 2523 m (an) s
1066 2523 m (input) s
1182 2523 m (variable,) s
1351 2523 m (or) s
1407 2523 m (a) s
1445 2523 m (register) s
1597 2523 m (is) s
1642 2523 m (reached.) s
1816 2523 m (At) s
1873 2523 m (this) s
1957 2523 m (point) s
2071 2523 m (we) s
177 2463 m (realize) s
311 2463 m (that) s
400 2463 m (register) s
550 2463 m (nodes) s
676 2463 m (must) s
785 2463 m (hold) s
883 2463 m (two) s
968 2463 m (values,) s
1105 2463 m (namely) s
1254 2463 m (the) s
1328 2463 m (current) s
1476 2463 m (one) s
1560 2463 m (and) s
1644 2463 m (the) s
1718 2463 m (newly) s
1840 2463 m (computed) s
2044 2463 m (one.) s
177 2403 m (Fortunately,) s
411 2403 m (in) s
462 2403 m (our) s
541 2403 m (data) s
636 2403 m (structure) s
816 2403 m (a) s
852 2403 m (register) s
1002 2403 m (is) s
1045 2403 m (represented) s
1277 2403 m (by) s
1333 2403 m (a) s
1368 2403 m (double) s
1511 2403 m (node.) s
1630 2403 m (By) s
1687 2403 m (convention,) s
1917 2403 m (the) s
1991 2403 m (current) s
177 2343 m (value) s
296 2343 m (of) s
356 2343 m (a) s
400 2343 m (register) s
558 2343 m (Syntax12i.Scn.Fnt) f (r) s
595 2343 m (Syntax12.Scn.Fnt) f (is) s
645 2343 m (stored) s
782 2343 m (as) s
842 2343 m (Syntax12i.Scn.Fnt) f (r.val) s
939 2343 m (Syntax12.Scn.Fnt) f (\(r.fct) s
1049 2343 m (=) s
1097 2343 m (reg\),) s
1202 2343 m (and) s
1294 2343 m (the) s
1376 2343 m (new) s
1477 2343 m (value) s
1595 2343 m (as) s
1655 2343 m (Syntax12i.Scn.Fnt) f (r.y.val) s
1782 2343 m (Syntax12.Scn.Fnt) f (\(r.y.fct) s
1921 2343 m (=) s
1969 2343 m (reg1\).) s
2099 2343 m (A) s
177 2283 m (consequence) s
433 2283 m (is) s
475 2283 m (that) s
563 2283 m (before) s
695 2283 m (each) s
795 2283 m (evaluation) s
1000 2283 m (step) s
1090 2283 m (\(clock) s
1215 2283 m (tick\)) s
1311 2283 m (all) s
1368 2283 m (register) s
1517 2283 m (input) s
1630 2283 m (values) s
1757 2283 m (must) s
1866 2283 m (be) s
1925 2283 m (computed,) s
177 2223 m (and) s
263 2223 m (thereafter) s
459 2223 m (the) s
535 2223 m (effect) s
651 2223 m (of) s
703 2223 m (the) s
778 2223 m (tick) s
859 2223 m (must) s
969 2223 m (be) s
1029 2223 m (simulated) s
1227 2223 m (by) s
1284 2223 m (replacing) s
1467 2223 m (the) s
1542 2223 m (old) s
1616 2223 m (register) s
1766 2223 m (values) s
1894 2223 m (by) s
1951 2223 m (the) s
2026 2223 m (input) s
177 2163 m (values. Simulating N steps then becomes:) s
259 2088 m (Syntax10.Scn.Fnt) f (Initialize all variables to black;) s
259 2039 m (FOR each variable v DO assign\(v\) END ;) s
259 1990 m (i := 0;) s
259 1941 m (REPEAT \(*step*\)) s
306 1892 m (FOR each register r DO) s
353 1843 m (IF value\(r.y.x\) = 1 THEN \(*enabled*\) r.y.val := value\(r.y.y\) END) s
306 1794 m (END ;) s
306 1745 m (FOR each register r DO r.val := r.y.val END ;  \(*the tick*\)) s
306 1696 m (Initialize all variables to black;) s
306 1647 m (FOR each variable v DO assign\(v\) END ;) s
306 1598 m (FOR each variable v DO output\(v.val\) END ;) s
306 1549 m (INC\(i\)) s
259 1500 m (UNTIL i = N) s
177 1420 m (Syntax12.Scn.Fnt) f (How) s
277 1420 m (is) s
317 1420 m (the) s
389 1420 m (set) s
453 1420 m (of) s
501 1420 m (registers) s
664 1420 m (recognized?) s
896 1420 m (The) s
975 1420 m (question) s
1147 1420 m (arises,) s
1270 1420 m (because) s
1429 1420 m (the) s
1500 1420 m (data) s
1591 1420 m (structure) s
1767 1420 m (contains) s
1934 1420 m (no) s
1994 1420 m (explicit) s
177 1360 m (list) s
245 1360 m (of) s
297 1360 m (register) s
447 1360 m (nodes.) s
584 1360 m (Fortunately,) s
817 1360 m (it) s
856 1360 m (is) s
898 1360 m (easy) s
989 1360 m (to) s
1041 1360 m (construct) s
1227 1360 m (such) s
1327 1360 m (a) s
1362 1360 m (list) s
1429 1360 m (during) s
1564 1360 m (each) s
1664 1360 m (traversal.) s
1842 1360 m (For) s
1916 1360 m (the) s
1990 1360 m (register) s
177 1300 m (list,) s
252 1300 m (link) s
333 1300 m (field) s
425 1300 m (Syntax12i.Scn.Fnt) f (x) s
456 1300 m (Syntax12.Scn.Fnt) f (is) s
496 1300 m (used,) s
605 1300 m (which) s
730 1300 m (in) s
778 1300 m (general) s
925 1300 m (represents) s
1127 1300 m (a) s
1160 1300 m (register's) s
1332 1300 m (clock) s
1438 1300 m (signal.) s
1566 1300 m (Since) s
1676 1300 m (we) s
1741 1300 m (restrict) s
1878 1300 m (simulation) s
2087 1300 m (to) s
177 1240 m (synchronous circuits, clock signals can be ignored, since there is only one, implicit clock for all registers.) s
177 1157 m (The) s
260 1157 m (presented) s
457 1157 m (scheme) s
614 1157 m (may) s
707 1157 m (indeed) s
848 1157 m (be) s
908 1157 m (regarded) s
1085 1157 m (as) s
1138 1157 m (the) s
1213 1157 m ("poor) s
1329 1157 m (man's) s
1454 1157 m (solution".) s
1645 1157 m (A) s
1686 1157 m (more) s
1800 1157 m (effective) s
1966 1157 m (program) s
177 1097 m (might) s
301 1097 m (first) s
385 1097 m (topologically) s
632 1097 m (sort) s
716 1097 m (the) s
790 1097 m (variables) s
963 1097 m (such) s
1063 1097 m (that) s
1151 1097 m (whenever) s
1344 1097 m (Syntax12i.Scn.Fnt) f (v) s
1376 1097 m (=) s
1414 1097 m (F\(v0,) s
1517 1097 m (...) s
1562 1097 m (,) s
1585 1097 m (vn\)) s
1656 1097 m (Syntax12.Scn.Fnt) f (is) s
1697 1097 m (computed,) s
1910 1097 m (all) s
1966 1097 m (variables) s
177 1037 m (Syntax12i.Scn.Fnt) f (v0) s
232 1037 m (...) s
277 1037 m (vn) s
332 1037 m (Syntax12.Scn.Fnt) f (have) s
430 1037 m (been) s
534 1037 m (assigned) s
704 1037 m (their) s
803 1037 m (values) s
928 1037 m (beforehand.) s
1164 1037 m (Although) s
1347 1037 m (this) s
1426 1037 m (measure) s
1597 1037 m (will) s
1675 1037 m (speed) s
1794 1037 m (up) s
1855 1037 m (the) s
1927 1037 m (simulation) s
177 977 m (program,) s
359 977 m (we) s
426 977 m (refrain) s
560 977 m (from) s
664 977 m (presenting) s
871 977 m (it) s
909 977 m (in) s
958 977 m (detail,) s
1083 977 m (because) s
1244 977 m (it) s
1282 977 m (complicates) s
1514 977 m (the) s
1586 977 m (program) s
1757 977 m (considerably.) s
2010 977 m (This) s
2097 977 m (is) s
177 917 m (particularly so in view of the fact that we do not deal with a list, but with a tree of variables.) s
177 834 m (Some further considerations and explanations follow. The reader is referred to the listings for details.) s
177 751 m (1. The value ) s
(Syntax12i.Scn.Fnt) f (w) s
(Syntax12.Scn.Fnt) f ( of a latch node ) s
(Syntax12i.Scn.Fnt) f (s) s
(Syntax12.Scn.Fnt) f ( is defined as) s
283 676 m (Syntax10.Scn.Fnt) f (IF value\(s.x\) = 0 THEN w := s.val ELSE w := value\(s.y\); s.val := w END) s
177 596 m (2. ) s
(Syntax12.Scn.Fnt) f (The value ) s
(Syntax12i.Scn.Fnt) f (w) s
(Syntax12.Scn.Fnt) f ( of a SR node ) s
(Syntax12i.Scn.Fnt) f (s) s
(Syntax12.Scn.Fnt) f ( is defined as) s
283 521 m (Syntax10.Scn.Fnt) f (IF value\(s.x\) = 0 THEN) s
330 472 m (IF value\(s.y\) = 0 THEN w := clash ELSE w := 1; s.val := 1 END) s
283 423 m (ELSIF value\(s.y\) = 0 THEN w := 0; s.val := 0) s
283 374 m (ELSE w := s.val) s
283 325 m (END) s
1 p
%%Page: 0 15
2085 3224 m (Syntax10.Scn.Fnt) f (14) s
177 3119 m (Syntax12.Scn.Fnt) f (We) s
256 3119 m (note) s
353 3119 m (that) s
440 3119 m (the) s
513 3119 m ("illegal") s
660 3119 m (case) s
750 3119 m (of) s
799 3119 m (both) s
898 3119 m (inputs) s
1026 3119 m (of) s
1075 3119 m (an) s
1133 3119 m (SR) s
1192 3119 m (latch) s
1294 3119 m (being) s
1408 3119 m (active) s
1524 3119 m (is) s
1564 3119 m (detected) s
1734 3119 m (and) s
1816 3119 m (results) s
1948 3119 m (in) s
1996 3119 m (a) s
2029 3119 m (value) s
177 3059 m (called ) s
(Syntax12i.Scn.Fnt) f (clash) s
(Syntax12.Scn.Fnt) f ( \(2\).) s
177 2976 m (3.) s
232 2976 m (Assignment) s
468 2976 m (is) s
516 2976 m (expressed) s
716 2976 m (by) s
778 2976 m (Syntax12i.Scn.Fnt) f (v.val) s
875 2976 m (:=) s
929 2976 m (value\(v.x\).) s
1130 2976 m (Syntax12.Scn.Fnt) f (This) s
1224 2976 m (becomes) s
1408 2976 m (more) s
1526 2976 m (complicated) s
1772 2976 m (in) s
1827 2976 m (the) s
1906 2976 m (case) s
2003 2976 m (of) s
2059 2976 m (bus) s
177 2916 m (variables,) s
366 2916 m (which) s
499 2916 m (allow) s
619 2916 m (that) s
713 2916 m (several) s
857 2916 m (signals) s
1000 2916 m (define) s
1135 2916 m (the) s
1215 2916 m (variable.) s
1388 2916 m (Hence,) s
1535 2916 m (Syntax12i.Scn.Fnt) f (v.x) s
1604 2916 m (Syntax12.Scn.Fnt) f (does) s
1710 2916 m (not) s
1792 2916 m (denote) s
1940 2916 m (the) s
2019 2916 m (single) s
177 2856 m (expression) s
384 2856 m (tree) s
467 2856 m (like) s
544 2856 m (in) s
592 2856 m (the) s
664 2856 m (case) s
754 2856 m (of) s
803 2856 m (regular) s
944 2856 m (variables,) s
1125 2856 m (but) s
1200 2856 m (rather) s
1323 2856 m (a) s
1356 2856 m (list) s
1421 2856 m (of) s
1470 2856 m (expression) s
1677 2856 m (trees.) s
1788 2856 m (The) s
1868 2856 m (list) s
1933 2856 m (consists) s
2088 2856 m (of) s
177 2796 m (nodes) s
304 2796 m (with) s
403 2796 m (fct-value) s
587 2796 m (Syntax12i.Scn.Fnt) f (list.) s
665 2796 m (Syntax12.Scn.Fnt) f (Evaluation) s
874 2796 m (of) s
927 2796 m (a) s
964 2796 m (list) s
1033 2796 m (of) s
1086 2796 m (tri-state) s
1254 2796 m (gates) s
1363 2796 m (generates) s
1554 2796 m (the) s
1629 2796 m (value) s
1740 2796 m (Syntax12i.Scn.Fnt) f (clash,) s
1851 2796 m (Syntax12.Scn.Fnt) f (if) s
1890 2796 m (more) s
2004 2796 m (than) s
2104 2796 m (a) s
177 2736 m (single gate is enabled, and the value ) s
(Syntax12i.Scn.Fnt) f (undef,) s
(Syntax12.Scn.Fnt) f ( if none is enabled.) s
177 2653 m (4.) s
234 2653 m (A) s
282 2653 m (facility) s
422 2653 m (to) s
482 2653 m (initialize) s
659 2653 m (input) s
779 2653 m (variables) s
959 2653 m (is) s
1008 2653 m (mandatory.) s
1241 2653 m (This) s
1337 2653 m (is) s
1386 2653 m (represented) s
1625 2653 m (by) s
1688 2653 m (the) s
1769 2653 m (command) s
1981 2653 m (Syntax12i.Scn.Fnt) f (Set.) s
2065 2653 m (Syntax12.Scn.Fnt) f (For) s
177 2593 m (example) s
330 2510 m (Simulator.Set  x = 0, y = 1, a.2 = 0~) s
177 2427 m (assigns the given values to the listed input variables.) s
177 2344 m (5.) s
226 2344 m (Typically,) s
405 2344 m (the) s
479 2344 m (designer) s
647 2344 m (is) s
688 2344 m (interested) s
884 2344 m (in) s
933 2344 m (tracing) s
1072 2344 m (the) s
1145 2344 m (values) s
1271 2344 m (of) s
1321 2344 m (a) s
1355 2344 m (few) s
1435 2344 m (Syntax12i.Scn.Fnt) f (selected) s
1581 2344 m (Syntax12.Scn.Fnt) f (variables) s
1753 2344 m (only.) s
1855 2344 m (This) s
1943 2344 m (possibility) s
177 2284 m (is) s
228 2284 m (offered) s
382 2284 m (through) s
554 2284 m (the) s
637 2284 m (command) s
851 2284 m (Syntax12i.Scn.Fnt) f (Select.) s
982 2284 m (Syntax12.Scn.Fnt) f (The) s
1073 2284 m (node) s
1190 2284 m (field) s
1293 2284 m (Syntax12i.Scn.Fnt) f (u) s
1339 2284 m (Syntax12.Scn.Fnt) f (is) s
1390 2284 m (used) s
1499 2284 m (to) s
1559 2284 m (mark) s
1678 2284 m (variables) s
1859 2284 m (for) s
1933 2284 m (tracing) s
2081 2284 m (\(s.) s
177 2224 m (procedure ) s
(Syntax12i.Scn.Fnt) f (list) s
(Syntax12.Scn.Fnt) f (\).) s
177 2141 m (Consider the following counter as an example:) s
330 2066 m (Syntax10.Scn.Fnt) f (MODULE  Counter;) s
377 2017 m (CONST N := 4;) s
377 1968 m (IN en: BIT;) s
377 1919 m (VAR Q, c: [N] BIT;) s
330 1870 m (BEGIN Q.0 := REG\(Q.0 - en\); c.0 := Q.0 * en;) s
377 1821 m (FOR i := 1 .. N-1 DO Q.i := REG\(Q.i - c[i-1]\); c.i := Q.i * c[i-1] END) s
330 1772 m (END Counter.) s
177 1692 m (Syntax12.Scn.Fnt) f (Executing the commands) s
330 1609 m (Syntax10.Scn.Fnt) f (Simulator.Set en = 1~) s
330 1549 m (Simulator.Select Q.0 Q.1 Q.2 Q.3~) s
330 1489 m (Simulator.Label) s
330 1429 m (Simulator.Step 8) s
177 1346 m (Syntax12.Scn.Fnt) f (yields the table of values) s
330 1271 m (Syntax10.Scn.Fnt) f (Q.0) s
459 1271 m (Q.1) s
578 1271 m (Q.2) s
696 1271 m (Q.3) s
354 1199 m (1) s
483 1199 m (0) s
602 1199 m (0) s
720 1199 m (0) s
354 1150 m (0) s
483 1150 m (1) s
602 1150 m (0) s
720 1150 m (0) s
354 1101 m (1) s
483 1101 m (1) s
602 1101 m (0) s
720 1101 m (0) s
354 1052 m (0) s
483 1052 m (0) s
602 1052 m (1) s
720 1052 m (0) s
354 1003 m (1) s
483 1003 m (0) s
602 1003 m (1) s
720 1003 m (0) s
354 954 m (0) s
483 954 m (1) s
602 954 m (1) s
720 954 m (0) s
354 905 m (1) s
483 905 m (1) s
602 905 m (1) s
720 905 m (0) s
354 856 m (0) s
483 856 m (0) s
602 856 m (0) s
720 856 m (1) s
177 719 m (Syntax12m.Scn.Fnt) f (8. Circuit Implementation) s
177 619 m (Syntax12.Scn.Fnt) f (The) s
264 619 m (ultimate) s
439 619 m (purpose) s
608 619 m (of) s
664 619 m (design) s
801 619 m (tools) s
909 619 m (is) s
955 619 m (to) s
1011 619 m (generate) s
1188 619 m (implementations) s
1523 619 m (from) s
1632 619 m (given) s
1746 619 m (circuit) s
1878 619 m (specifications) s
177 559 m (automatically.) s
449 559 m (Given) s
566 559 m (the) s
638 559 m (compiler) s
814 559 m (translating) s
1021 559 m (textual) s
1159 559 m (specifications) s
1418 559 m (into) s
1504 559 m (a) s
1537 559 m (suitable) s
1693 559 m (data) s
1785 559 m (structure,) s
1972 559 m (this) s
2051 559 m (task) s
177 499 m (is) s
229 499 m (slightly) s
380 499 m (reduced) s
552 499 m (into) s
649 499 m (constructing) s
901 499 m (a) s
945 499 m (program) s
1127 499 m (further) s
1278 499 m (translating) s
1496 499 m (the) s
1579 499 m (data) s
1682 499 m (structure) s
1870 499 m (into) s
1967 499 m (a) s
2011 499 m (circuit) s
177 439 m (implementation.) s
177 356 m (Circuit) s
318 356 m (implementations) s
653 356 m (generally) s
835 356 m (take) s
930 356 m (the) s
1007 356 m (form) s
1115 356 m (of) s
1169 356 m (layouts,) s
1326 356 m (i.e.) s
1397 356 m (exact) s
1509 356 m (specifications) s
1773 356 m (of) s
1827 356 m (the) s
1904 356 m (positions) s
2088 356 m (of) s
177 296 m (circuit) s
305 296 m (components) s
551 296 m (and) s
635 296 m (of) s
686 296 m (their) s
786 296 m (interconnections.) s
1120 296 m (Such) s
1225 296 m (layouts) s
1368 296 m (strongly) s
1526 296 m (depend) s
1678 296 m (on) s
1740 296 m (the) s
1813 296 m (technology) s
2028 296 m (used,) s
177 236 m (but) s
257 236 m (the) s
334 236 m (general) s
486 236 m (considerations) s
771 236 m (are) s
844 236 m (similar.) s
996 236 m (Among) s
1147 236 m (the) s
1223 236 m (available) s
1398 236 m (technologies) s
1647 236 m (are) s
1720 236 m (printed) s
1870 236 m (circuit) s
2000 236 m (boards) s
1 p
%%Page: 0 16
2085 3224 m (Syntax10.Scn.Fnt) f (15) s
177 3119 m (Syntax12.Scn.Fnt) f (and) s
263 3119 m (custom) s
417 3119 m (VLSI) s
514 3119 m (design) s
649 3119 m (using) s
763 3119 m (standard) s
939 3119 m (cells.) s
1044 3119 m (Of) s
1105 3119 m (particular) s
1296 3119 m (interest) s
1449 3119 m (and) s
1534 3119 m (promise,) s
1710 3119 m (however,) s
1892 3119 m (are) s
1964 3119 m (standard) s
177 3059 m (arrays) s
300 3059 m (of) s
353 3059 m (configurable) s
599 3059 m (cells,) s
704 3059 m (so-called) s
893 3059 m (programmable) s
1183 3059 m (gate) s
1275 3059 m (arrays.) s
1408 3059 m (If) s
1448 3059 m (the) s
1523 3059 m (cells) s
1617 3059 m (and) s
1702 3059 m (their) s
1803 3059 m (interconnects) s
2068 3059 m (are) s
177 2999 m (programmable) s
466 2999 m (by) s
522 2999 m (the) s
596 2999 m (user) s
687 2999 m ("in) s
750 2999 m (the) s
823 2999 m (field",) s
940 2999 m (they) s
1031 2999 m (are) s
1101 2999 m (called) s
1221 2999 m (Syntax12i.Scn.Fnt) f (field) s
1306 2999 m (programmable) s
1575 2999 m (gate) s
1660 2999 m (arrays) s
1777 2999 m (Syntax12.Scn.Fnt) f (\(FPGA\).) s
1932 2999 m (Automatic) s
177 2939 m (generation) s
389 2939 m (of) s
440 2939 m (an) s
500 2939 m (implementation) s
814 2939 m (using) s
927 2939 m (an) s
987 2939 m (FPGA) s
1100 2939 m (consists) s
1257 2939 m (of) s
1307 2939 m (finding) s
1450 2939 m (an) s
1509 2939 m (assignment) s
1733 2939 m (of) s
1783 2939 m (gates) s
1890 2939 m (and) s
1973 2939 m (registers) s
177 2879 m (to) s
227 2879 m (cells) s
318 2879 m (in) s
366 2879 m (such) s
464 2879 m (a) s
497 2879 m (way) s
581 2879 m (that) s
667 2879 m (\(1\)) s
735 2879 m (the) s
807 2879 m (cells) s
898 2879 m (are) s
967 2879 m (capable) s
1120 2879 m (of) s
1169 2879 m (representing) s
1411 2879 m (the) s
1483 2879 m (function) s
1651 2879 m (assigned) s
1819 2879 m (to) s
1868 2879 m (them,) s
1988 2879 m (and) s
2069 2879 m (\(2\)) s
177 2819 m (that the provided routing facilities allow to connect the cells according to the given circuit specifications.) s
177 2736 m (This) s
266 2736 m (is) s
308 2736 m (in) s
358 2736 m (general) s
507 2736 m (an) s
567 2736 m (extremely) s
761 2736 m (difficult) s
916 2736 m (task,) s
1014 2736 m (in) s
1064 2736 m (particular,) s
1264 2736 m (if) s
1302 2736 m (a) s
1337 2736 m (reasonably) s
1548 2736 m (high) s
1644 2736 m (utilization) s
1843 2736 m (of) s
1893 2736 m (the) s
1966 2736 m (available) s
177 2676 m (cells) s
270 2676 m (and) s
354 2676 m (routing) s
503 2676 m (facilitites) s
680 2676 m (is) s
722 2676 m (requested.) s
929 2676 m (An) s
994 2676 m (approach) s
1181 2676 m (more) s
1293 2676 m (amenable) s
1489 2676 m (to) s
1540 2676 m (the) s
1613 2676 m (current) s
1760 2676 m (state) s
1860 2676 m (of) s
1910 2676 m (the) s
1983 2676 m (art) s
2046 2676 m (is) s
2087 2676 m (to) s
177 2616 m (lay) s
244 2616 m (out) s
324 2616 m (a) s
362 2616 m (circuit) s
493 2616 m ("by) s
565 2616 m (hand") s
690 2616 m (with) s
789 2616 m (the) s
865 2616 m (aid) s
937 2616 m (of) s
990 2616 m (a) s
1027 2616 m (suitable) s
1187 2616 m (layout) s
1316 2616 m (editor,) s
1451 2616 m (and) s
1537 2616 m (then) s
1638 2616 m (to) s
1692 2616 m (verify) s
1804 2616 m (with) s
1903 2616 m (the) s
1979 2616 m (aid) s
2051 2616 m (of) s
2104 2616 m (a) s
177 2556 m (program) s
350 2556 m (that) s
438 2556 m (the) s
512 2556 m (implemantation) s
826 2556 m (represents) s
1030 2556 m (the) s
1104 2556 m (circuit) s
1232 2556 m (as) s
1284 2556 m (specified) s
1459 2556 m (by) s
1515 2556 m (the) s
1589 2556 m (Lola) s
1678 2556 m (text.) s
1771 2556 m (The) s
1852 2556 m (best) s
1941 2556 m (way) s
2026 2556 m (to) s
2077 2556 m (do) s
177 2496 m (this) s
256 2496 m (is) s
296 2496 m (to) s
346 2496 m (extract) s
482 2496 m (from) s
585 2496 m (the) s
657 2496 m (layout) s
782 2496 m (a) s
815 2496 m (data) s
907 2496 m (structure) s
1084 2496 m (of) s
1133 2496 m (the) s
1205 2496 m (known) s
1346 2496 m (format,) s
1494 2496 m (and) s
1576 2496 m (thereupon) s
1782 2496 m (to) s
1832 2496 m (compare) s
2006 2496 m (it) s
2042 2496 m (with) s
177 2436 m (the one derived from the Lola specification. We call such an extraction and comparison tool a ) s
(Syntax12i.Scn.Fnt) f (Checker.) s
177 2336 m (Syntax12m.Scn.Fnt) f (9. Fuse-Map Generation for a PLD) s
177 2253 m (Syntax12.Scn.Fnt) f (The) s
259 2253 m (task) s
347 2253 m (of) s
398 2253 m (automatically) s
661 2253 m (generating) s
870 2253 m (a) s
905 2253 m (layout,) s
1042 2253 m (i.e.) s
1110 2253 m (of) s
1161 2253 m (finding) s
1305 2253 m (a) s
1340 2253 m (mapping) s
1519 2253 m (of) s
1570 2253 m (functions) s
1757 2253 m (to) s
1808 2253 m (gates,) s
1925 2253 m (is) s
1966 2253 m (easiest) s
2101 2253 m (if) s
177 2193 m (all) s
234 2193 m (gates) s
342 2193 m (are) s
413 2193 m (the) s
486 2193 m (same) s
597 2193 m (and) s
680 2193 m (if) s
717 2193 m (the) s
790 2193 m (routing) s
938 2193 m (facilities) s
1100 2193 m (are) s
1170 2193 m (completely) s
1385 2193 m (regular) s
1527 2193 m (and) s
1610 2193 m (general.) s
1769 2193 m (An) s
1833 2193 m (extreme) s
1997 2193 m (case) s
2088 2193 m (of) s
177 2133 m (this) s
263 2133 m (kind) s
364 2133 m (is) s
411 2133 m (the) s
490 2133 m (well) s
585 2133 m (known) s
733 2133 m (Syntax12i.Scn.Fnt) f (programmable) s
1008 2133 m (logic) s
1107 2133 m (array) s
1215 2133 m (Syntax12.Scn.Fnt) f (\(PLA\)) s
1334 2133 m (consisting) s
1536 2133 m (of) s
1591 2133 m (a) s
1630 2133 m (And-) s
1749 2133 m (and) s
1837 2133 m (a) s
1876 2133 m (Or-matrix.) s
2099 2133 m (It) s
177 2073 m (directly) s
342 2073 m (reflects) s
505 2073 m (Boolean) s
688 2073 m (expressions) s
932 2073 m (in) s
1000 2073 m (disjunctive) s
1228 2073 m (normal) s
1395 2073 m (form.) s
1529 2073 m (Hence,) s
1688 2073 m (the) s
1780 2073 m (generation) s
2010 2073 m (of) s
2079 2073 m (an) s
177 2013 m (implementation) s
491 2013 m (is) s
533 2013 m (straight-forward,) s
866 2013 m (given) s
976 2013 m (the) s
1050 2013 m (restriction) s
1250 2013 m (that) s
1338 2013 m (the) s
1412 2013 m (\(Lola\)) s
1533 2013 m (program) s
1705 2013 m (consist) s
1845 2013 m (of) s
1895 2013 m (a) s
1929 2013 m (\(small\)) s
2073 2013 m (set) s
177 1953 m (of) s
236 1953 m (variables) s
417 1953 m (defined) s
578 1953 m (by) s
642 1953 m (expressions) s
875 1953 m (in) s
932 1953 m (normal) s
1088 1953 m (form.) s
1211 1953 m (If) s
1257 1953 m (the) s
1338 1953 m (array) s
1449 1953 m (is) s
1498 1953 m (field) s
1599 1953 m (programmable,) s
1905 1953 m (the) s
1986 1953 m (circuit's) s
177 1898 m (implementation) s
489 1898 m (occurs) s
620 1898 m (entirely) s
768 1898 m (by) s
822 1898 m (software.) s
1003 1898 m (The) s
1083 1898 m (device) s
1209 1898 m (having) s
1342 1898 m (a) s
1374 1898 m (fixed) s
1474 1898 m (set) s
1537 1898 m (of) s
1585 1898 m (inputs) s
1712 1898 m (x) s
1732 1878 m (Syntax10.Scn.Fnt) f (0) s
1763 1898 m (Syntax12.Scn.Fnt) f (...) s
1807 1898 m (x) s
1827 1878 m (Syntax10.Scn.Fnt) f (n-1) s
1901 1898 m (Syntax12.Scn.Fnt) f (and) s
1982 1898 m (outputs) s
177 1838 m (y) s
195 1818 m (Syntax10.Scn.Fnt) f (0) s
215 1838 m (Syntax12.Scn.Fnt) f ( ... y) s
288 1818 m (Syntax10.Scn.Fnt) f (m-1) s
363 1838 m (Syntax12.Scn.Fnt) f (, the latter are defined by) s
318 1755 m (y) s
336 1735 m (Syntax10.Scn.Fnt) f (i) s
346 1755 m (Syntax12.Scn.Fnt) f ( := F) s
426 1735 m (Syntax10.Scn.Fnt) f (i) s
436 1755 m (Syntax12.Scn.Fnt) f (\(x) s
472 1735 m (Syntax10.Scn.Fnt) f (0) s
492 1755 m (Syntax12.Scn.Fnt) f ( ... x) s
567 1735 m (Syntax10.Scn.Fnt) f (n-1) s
630 1755 m (Syntax12.Scn.Fnt) f (\)) s
837 1755 m (i = 0 ... m-1) s
177 1667 m (where F is a disjunctive normal form, i.e. a sum of products of the arguments and their inverses.) s
177 1584 m (The) s
265 1584 m (usefulness) s
477 1584 m (of) s
534 1584 m (this) s
621 1584 m (scheme) s
783 1584 m (is) s
831 1584 m (significantly) s
1068 1584 m (enlarged) s
1247 1584 m (by) s
1309 1584 m (applying) s
1484 1584 m (it) s
1529 1584 m (to) s
1586 1584 m (PLDs,) s
1706 1584 m (i.e.) s
1779 1584 m (devices) s
1929 1584 m (containing) s
177 1524 m (registers.) s
352 1524 m (These) s
470 1524 m (devices) s
613 1524 m (are) s
682 1524 m (primarily) s
859 1524 m (designed) s
1035 1524 m (to) s
1085 1524 m (implement) s
1302 1524 m (state) s
1401 1524 m (machines.) s
1602 1524 m (Typically,) s
1779 1524 m (the) s
1851 1524 m (y) s
1881 1524 m (are) s
1950 1524 m (fed) s
2019 1524 m (into) s
2104 1524 m (a) s
177 1464 m (so-called) s
373 1464 m (macro) s
513 1464 m (cell) s
597 1464 m (generating) s
814 1464 m (the) s
896 1464 m (output.) s
1055 1464 m (The) s
1144 1464 m (industry) s
1314 1464 m (standard) s
1496 1464 m (GAL22V10) s
1715 1464 m ([7]) s
1792 1464 m (provides) s
1967 1464 m (the) s
2048 1464 m (four) s
177 1404 m (options) s
329 1404 m (shown) s
466 1404 m (in) s
514 1404 m (Fig.) s
590 1404 m (10.) s
661 1404 m (Note) s
763 1404 m (that) s
849 1404 m (we) s
915 1404 m (ignore) s
1044 1404 m (the) s
1116 1404 m (macro) s
1246 1404 m (cell's) s
1345 1404 m (tri-state) s
1510 1404 m (gate,) s
1609 1404 m (i.e.) s
1675 1404 m (always) s
1808 1404 m (consider) s
1976 1404 m (them) s
2087 1404 m (as) s
177 1344 m (active.) s
309 1344 m (This) s
401 1344 m (is) s
446 1344 m (because) s
611 1344 m (in) s
664 1344 m (the) s
741 1344 m (intended) s
923 1344 m (laboratory) s
1126 1344 m (application) s
1347 1344 m (a) s
1384 1344 m (fixed) s
1489 1344 m (set) s
1557 1344 m (of) s
1610 1344 m (pins) s
1703 1344 m (is) s
1747 1344 m (connected) s
1955 1344 m (as) s
2009 1344 m (inputs) s
177 1284 m (from) s
282 1284 m (the) s
356 1284 m (processor) s
546 1284 m (bus,) s
635 1284 m (and) s
718 1284 m (another) s
876 1284 m (fixed) s
978 1284 m (set) s
1043 1284 m (is) s
1084 1284 m (connected) s
1289 1284 m (to) s
1340 1284 m (the) s
1413 1284 m (bus) s
1492 1284 m (as) s
1543 1284 m (outputs) s
1699 1284 m (\(see) s
1787 1284 m (Fig.) s
1864 1284 m (13\).) s
1952 1284 m (However,) s
177 1224 m (we retain the important facility of feedbacks which may be selected as arguments in F.) s
1111 994 m (Elektra.Scn.Fnt) f (1) s
1048 1106 79 1 l
1048 1090 79 1 l
1048 1074 79 1 l
1048 1058 79 1 l
1048 1042 79 1 l
1048 1026 79 1 l
1048 1010 79 1 l
1272 962 79 1 l
1350 962 1 143 l
1272 1104 79 1 l
1272 962 1 143 l
1224 1058 47 1 l
1431 1042 m (\() s
1400 930 1 79 l
1048 930 351 1 l
280 1010 79 1 l
280 1026 79 1 l
280 1042 79 1 l
280 1058 79 1 l
280 1074 79 1 l
280 1090 79 1 l
280 1106 79 1 l
343 994 m (1) s
503 1042 m (\() s
456 1058 47 1 l
856 1058 47 1 l
903 1042 m (\() s
727 994 m (1) s
664 1106 79 1 l
664 1090 79 1 l
664 1074 79 1 l
664 1058 79 1 l
664 1042 79 1 l
664 1026 79 1 l
664 1010 79 1 l
1351 1002 m (!) s
472 930 1 127 l
280 930 191 1 l
888 930 1 127 l
664 930 223 1 l
1352 1058 79 1 l
1295 954 m (:) s
1368 1010 31 1 l
1880 1010 31 1 l
1807 954 m (:) s
1863 1002 m (!) s
1560 930 351 1 l
1975 1042 m (\() s
1736 1058 47 1 l
1784 962 79 1 l
1862 962 1 143 l
1784 1104 79 1 l
1784 962 1 143 l
1560 1010 79 1 l
1560 1026 79 1 l
1560 1042 79 1 l
1560 1058 79 1 l
1560 1074 79 1 l
1560 1090 79 1 l
1560 1106 79 1 l
1623 994 m (1) s
1944 1058 31 1 l
279 914 m (<) s
663 914 m (<) s
1047 914 m (<) s
1559 914 m (<) s
839 1050 m (!) s
471 1074 m (Syntax10.Scn.Fnt) f (y) s
1912 930 1 79 l
1895 1026 m (Elektra.Scn.Fnt) f (H) s
1895 1058 m (I) s
1896 1026 1 63 l
1864 1058 31 1 l
1927 1050 m (!) s
503 962 m (Syntax8.Scn.Fnt) f (11) s
919 962 m (10) s
1431 962 m (01) s
1959 962 m (00) s
655 846 m (Syntax12.Scn.Fnt) f (Fig. 10. The 4 options of macro cells in the GAL22V10) s
177 763 m (Consequently, the options for the specification of the outputs grow too:) s
318 685 m (y) s
336 665 m (Syntax10.Scn.Fnt) f (i) s
346 685 m (Syntax12.Scn.Fnt) f ( := F\(x) s
462 665 m (Syntax10.Scn.Fnt) f (0) s
482 685 m (Syntax12.Scn.Fnt) f ( ... x) s
557 665 m (Syntax10.Scn.Fnt) f (n-1) s
620 685 m (Syntax12.Scn.Fnt) f (, y) s
659 665 m (Syntax10.Scn.Fnt) f (0) s
679 685 m (Syntax12.Scn.Fnt) f ( ... y) s
752 665 m (Syntax10.Scn.Fnt) f (m-1) s
827 685 m (Syntax12.Scn.Fnt) f (\)) s
318 625 m (y) s
336 605 m (Syntax10.Scn.Fnt) f (i) s
346 625 m (Syntax12.Scn.Fnt) f ( := ~F\(x) s
488 605 m (Syntax10.Scn.Fnt) f (0) s
508 625 m (Syntax12.Scn.Fnt) f ( ... x) s
583 605 m (Syntax10.Scn.Fnt) f (n-1) s
646 625 m (Syntax12.Scn.Fnt) f (, y) s
685 605 m (Syntax10.Scn.Fnt) f (0) s
705 625 m (Syntax12.Scn.Fnt) f ( ... y) s
778 605 m (Syntax10.Scn.Fnt) f (m-1) s
853 625 m (Syntax12.Scn.Fnt) f (\)) s
318 565 m (y) s
336 545 m (Syntax10.Scn.Fnt) f (i) s
346 565 m (Syntax12.Scn.Fnt) f ( := REG\(F\(x) s
555 545 m (Syntax10.Scn.Fnt) f (0) s
575 565 m (Syntax12.Scn.Fnt) f ( ... x) s
650 545 m (Syntax10.Scn.Fnt) f (n-1) s
713 565 m (Syntax12.Scn.Fnt) f (, y) s
752 545 m (Syntax10.Scn.Fnt) f (0) s
772 565 m (Syntax12.Scn.Fnt) f ( ... y) s
845 545 m (Syntax10.Scn.Fnt) f (m-1) s
920 565 m (Syntax12.Scn.Fnt) f (\)\)) s
318 505 m (y) s
336 485 m (Syntax10.Scn.Fnt) f (i) s
346 505 m (Syntax12.Scn.Fnt) f ( := ~REG\(F\(x) s
581 485 m (Syntax10.Scn.Fnt) f (0) s
601 505 m (Syntax12.Scn.Fnt) f ( ... x) s
676 485 m (Syntax10.Scn.Fnt) f (n-1) s
739 505 m (Syntax12.Scn.Fnt) f (, y) s
778 485 m (Syntax10.Scn.Fnt) f (0) s
798 505 m (Syntax12.Scn.Fnt) f ( ... y) s
871 485 m (Syntax10.Scn.Fnt) f (m-1) s
946 505 m (Syntax12.Scn.Fnt) f (\)\)) s
177 417 m (The syntax of these forms is a subset of Lola:) s
283 334 m (assignment =) s
566 334 m (variable ":=" definition.) s
283 274 m (definition =) s
566 274 m (expression | "~" expression | "REG" "\(" expression "\)" | "~" "REG" "\(" expression "\)".) s
283 214 m (expression =) s
566 214 m (term {"+" term}.) s
1 p
%%Page: 0 17
2085 3224 m (Syntax10.Scn.Fnt) f (16) s
283 3119 m (Syntax12.Scn.Fnt) f (term =) s
566 3119 m (factor {"*" factor}.) s
283 3059 m (factor =) s
566 3059 m (variable | "~" variable | "'0" | "'1" .) s
177 2959 m (The) s
262 2959 m (following) s
452 2959 m (are) s
526 2959 m (simple) s
666 2959 m (examples) s
857 2959 m (of) s
911 2959 m (Lola) s
1004 2959 m (specifications) s
1267 2959 m (that) s
1357 2959 m (can) s
1438 2959 m (quite) s
1549 2959 m (easily) s
1664 2959 m (be) s
1725 2959 m (translated) s
1924 2959 m (into) s
2014 2959 m (a) s
2051 2959 m (PLD) s
177 2899 m (implementation:) s
283 2824 m (Syntax10.Scn.Fnt) f (MODULE Adder;) s
353 2775 m (IN x0, x1, x2, x3, y0, y1, y2, y3, ci: BIT;) s
353 2726 m (OUT s0, s1, s2, s3, c0, c1, c2, c3: BIT;) s
353 2677 m (POS x0=3; x1=4; x2=5; x3=6; y0=7; y1=9; y2=10; y3=11; ci=12;) s
424 2628 m (s0=27; s1=26; s2=25; s3=24; c0=23; c1=21; c2=20; c3=19; ) s
283 2579 m (BEGIN) s
353 2530 m (s0 := ~ci*~x0*y0 + ~ci*x0*~y0 + ci*~x0*~y0 + ci+x0*y0; c0 := ~ci*x0*y0 + ci*x0 + ci*y0;) s
353 2481 m (s1 := ~c0*~x1*y1 + ~c0*x1*~y1 + c0*~x1*~y1 + c0*x1*y1; c1 := ~c0*x1*y1 + c0*x1 + c0*y1;) s
353 2432 m (s2 := ~c1*~x2*y2 + ~c1*x2*~y2 + c1*~x2*~y2 + c1*x2*y2; c2 := ~c1*x2*y2 + c1*x2 + c1*y2;) s
353 2383 m (s3 := ~c2*~x3*y3 + ~c2*x3*~y3 + c2*~x3*~y3 + c2*x3*y3; c3 := ~c2*x3*y3 + c2*x3 + c2*y3) s
283 2334 m (END Adder.) s
283 2262 m (MODULE Barrel;) s
353 2213 m (IN s0, s1, s2: BIT;) s
424 2164 m (d0, d1, d2, d3, d4, d5, d6, d7: BIT;) s
353 2115 m (OUT q0, q1, q2, q3, q4, q5, q6, q7: BIT;) s
353 2066 m (POS d0=3; d1=4; d2=5; d3=6; d4=7; d5=9; d6=10; d7=11; s0 = 12; s1=13; s2=16;) s
424 2017 m (q0=27; q1=26; q2=25; q3=24; q4=23; q5=21; q6=20; q7=19; ) s
283 1968 m (BEGIN) s
353 1919 m (q0 := ~s2*~s1*~s0*d0 + ~s2*~s1*s0*d1 + ~s2*s1*~s0*d2 + ~s2*s1*s0*d3) s
424 1870 m (+ s2*~s1*~s0*d4 + s2*~s1*s0*d5 + s2*s1*~s0*d6 + s2*s1*s0*d7;) s
353 1821 m (q1 := ~s2*~s1*~s0*d1 + ~s2*~s1*s0*d2 + ~s2*s1*~s0*d3 + ~s2*s1*s0*d4) s
424 1772 m (+ s2*~s1*~s0*d5 + s2*~s1*s0*d6 + s2*s1*~s0*d7 + s2*s1*s0*d0;) s
353 1723 m (q2 := ~s2*~s1*~s0*d2 + ~s2*~s1*s0*d3 + ~s2*s1*~s0*d4 + ~s2*s1*s0*d5) s
424 1674 m (+ s2*~s1*~s0*d6 + s2*~s1*s0*d7 + s2*s1*~s0*d0 + s2*s1*s0*d1;) s
353 1625 m (q3 := ~s2*~s1*~s0*d3 + ~s2*~s1*s0*d4 + ~s2*s1*~s0*d5 + ~s2*s1*s0*d6) s
424 1576 m (+ s2*~s1*~s0*d7 + s2*~s1*s0*d0 + s2*s1*~s0*d1 + s2*s1*s0*d2;) s
353 1527 m (q4 := ~s2*~s1*~s0*d4 + ~s2*~s1*s0*d5 + ~s2*s1*~s0*d6 + ~s2*s1*s0*d7) s
424 1478 m (+ s2*~s1*~s0*d0 + s2*~s1*s0*d1 + s2*s1*~s0*d2 + s2*s1*s0*d3;) s
353 1429 m (q5 := ~s2*~s1*~s0*d5 + ~s2*~s1*s0*d6 + ~s2*s1*~s0*d7 + ~s2*s1*s0*d0) s
424 1380 m (+ s2*~s1*~s0*d1 + s2*~s1*s0*d2 + s2*s1*~s0*d3 + s2*s1*s0*d4;) s
353 1331 m (q6 := ~s2*~s1*~s0*d6 + ~s2*~s1*s0*d7 + ~s2*s1*~s0*d0 + ~s2*s1*s0*d1) s
424 1282 m (+ s2*~s1*~s0*d2 + s2*~s1*s0*d3 + s2*s1*~s0*d4 + s2*s1*s0*d5;) s
353 1233 m (q7 := ~s2*~s1*~s0*d7 + ~s2*~s1*s0*d0 + ~s2*s1*~s0*d1 + ~s2*s1*s0*d2) s
424 1184 m (+ s2*~s1*~s0*d3 + s2*~s1*s0*d4 + s2*s1*~s0*d5 + s2*s1*s0*d6) s
283 1135 m (END Barrel.) s
283 1063 m (MODULE Counter;) s
353 1014 m (IN ci: BIT;) s
353 965 m (OUT q0, q1, q2, q3, q4, q5, q6, q7: BIT;) s
353 916 m (POS ci=3; q0=27; q1=26; q2=25; q3=24; q4=23; q5=21; q6=20; q7=19; ) s
283 867 m (BEGIN ) s
353 818 m (q0 := REG\(q0*~ci + ~q0*ci\);) s
353 769 m (q1 := REG\(q1*~q0 + q1*~ci + ~q1*q0*ci\);) s
353 720 m (q2 := REG\(q2*~q1 + q2*~q0 + q2*~ci + ~q2*q1*q0*ci\);) s
353 671 m (q3 := REG\(q3*~q2 + q3*~q1 + q3*~q0 + q3*~ci + ~q3*q2*q1*q0*ci\);) s
353 622 m (q4 := REG\(q4*~q3 + q4*~q2 + q4*~q1 + q4*~q0 + q4*~ci + ~q4*q3*q2*q1*q0*ci\);) s
353 573 m (q5 := REG\(q5*~q4 + q5*~q3 + q5*~q2 + q5*~q1 + q5*~q0 + q5*~ci + ~q5*q4*q3*q2*q1*q0*ci\);) s
353 524 m (q6 := REG\(q6*~q5 + q6*~q4 + q6*~q3 + q6*~q2 + q6*~q1 + q6*~q0 + q6*~ci) s
424 475 m (+ ~q6*q5*q4*q3*q2*q1*q0*ci\);) s
353 426 m (q7 := REG\(q7*~q6 + q7*~q5 + q7*~q4 + q7*~q3 + q7*~q2 + q7*~q1 + q7*~q0 + q7*~ci) s
424 377 m (+ ~q7*q6*q5*q4*q3*q2*q1*q0*ci\)) s
283 328 m (END Counter.) s
1 p
%%Page: 0 18
2085 3224 m (Syntax10.Scn.Fnt) f (17) s
177 3119 m (Syntax12.Scn.Fnt) f (We) s
257 3119 m (subsequently) s
513 3119 m (show) s
626 3119 m (the) s
699 3119 m (development) s
954 3119 m (of) s
1004 3119 m (a) s
1038 3119 m (program) s
1210 3119 m (which) s
1336 3119 m (configures) s
1540 3119 m (\(programs\)) s
1761 3119 m (the) s
1834 3119 m (PLD,) s
1931 3119 m (i.e.) s
1998 3119 m (derives) s
177 3059 m (a) s
210 3059 m (Syntax12i.Scn.Fnt) f (fuse) s
289 3059 m (map) s
379 3059 m (Syntax12.Scn.Fnt) f (from) s
482 3059 m (a) s
515 3059 m (given) s
623 3059 m (Lola) s
711 3059 m (specification.) s
963 3059 m (The) s
1042 3059 m (fuse) s
1129 3059 m (map) s
1224 3059 m (is) s
1263 3059 m (the) s
1334 3059 m (matrix) s
1465 3059 m (of) s
1513 3059 m (Boolean) s
1675 3059 m (values) s
1799 3059 m (standing) s
1968 3059 m (for) s
2031 3059 m (open) s
177 2999 m (or) s
229 2999 m (closed) s
358 2999 m (connections) s
595 2999 m (in) s
644 2999 m (the) s
717 2999 m (And-matrix.) s
961 2999 m (Since) s
1072 2999 m (these) s
1182 2999 m ("fuses") s
1315 2999 m (can) s
1392 2999 m (be) s
1449 2999 m (determined) s
1676 2999 m (dynamically) s
1906 2999 m (by) s
1960 2999 m ("loading") s
177 2939 m (the) s
261 2939 m (Boolean) s
436 2939 m (array) s
550 2939 m (into) s
648 2939 m (the) s
732 2939 m (device,) s
880 2939 m (we) s
958 2939 m (can) s
1047 2939 m (imagine) s
1220 2939 m (that) s
1318 2939 m (we) s
1396 2939 m (are) s
1477 2939 m (generating) s
1695 2939 m (a) s
1739 2939 m (circuit) s
1876 2939 m (automatically) s
177 2879 m (according) s
384 2879 m (to) s
450 2879 m (a) s
498 2879 m (specification) s
755 2879 m (given) s
878 2879 m (in) s
941 2879 m (Lola.) s
1055 2879 m (What) s
1187 2879 m (makes) s
1334 2879 m (this) s
1428 2879 m (scheme) s
1597 2879 m (attractive) s
1792 2879 m (for) s
1871 2879 m (teaching) s
2055 2879 m (and) s
177 2819 m (experimenting) s
459 2819 m (is) s
501 2819 m (the) s
575 2819 m (fact) s
656 2819 m (that) s
744 2819 m (the) s
818 2819 m (device) s
945 2819 m (can) s
1023 2819 m (be) s
1081 2819 m (reset) s
1182 2819 m (to) s
1233 2819 m (a) s
1267 2819 m (null) s
1352 2819 m (state) s
1452 2819 m (by) s
1507 2819 m (erasing) s
1651 2819 m (the) s
1724 2819 m (connections.) s
1972 2819 m (This) s
2060 2819 m (can) s
177 2759 m (be done electrically, i.e. without the need for removing the chip from the board.) s
177 2676 m (The) s
257 2676 m (generator) s
446 2676 m (program) s
617 2676 m (is) s
657 2676 m (used) s
756 2676 m (in) s
804 2676 m (conjunction) s
1038 2676 m (with) s
1133 2676 m (a) s
1165 2676 m (PLD) s
1250 2676 m (connected) s
1453 2676 m (to) s
1502 2676 m (a) s
1534 2676 m (workstation) s
1765 2676 m (serving) s
1904 2676 m (as) s
1953 2676 m (a) s
1985 2676 m (test) s
2062 2676 m (site) s
177 2616 m (for) s
246 2616 m (experimentation.) s
580 2616 m (The) s
665 2616 m (PLD) s
756 2616 m (appears) s
915 2616 m (to) s
969 2616 m (the) s
1045 2616 m (programmer) s
1295 2616 m (as) s
1349 2616 m (an) s
1411 2616 m (I/O) s
1492 2616 m (device,) s
1632 2616 m (and) s
1718 2616 m (it) s
1759 2616 m (is) s
1803 2616 m (connected) s
2011 2616 m (to) s
2065 2616 m (the) s
177 2556 m (computer's) s
399 2556 m (bus) s
481 2556 m (with) s
579 2556 m (fixed) s
683 2556 m (sets) s
767 2556 m (of) s
819 2556 m (12) s
882 2556 m (input) s
996 2556 m (and) s
1081 2556 m (8) s
1120 2556 m (output) s
1261 2556 m (pins.) s
1364 2556 m (The) s
1447 2556 m (PLD) s
1536 2556 m (chosen) s
1682 2556 m (is) s
1725 2556 m (the) s
1800 2556 m (industry) s
1964 2556 m (standard) s
177 2496 m (part) s
263 2496 m (GAL22V10B.) s
509 2496 m (This) s
596 2496 m (setup) s
709 2496 m (implies) s
855 2496 m (that) s
941 2496 m (the) s
1013 2496 m (flexibility) s
1190 2496 m (of) s
1239 2496 m (the) s
1310 2496 m (PLD) s
1395 2496 m (is) s
1434 2496 m (not) s
1508 2496 m (used) s
1606 2496 m (to) s
1655 2496 m (its) s
1708 2496 m (full) s
1779 2496 m (extent.) s
1916 2496 m (\(The) s
2011 2496 m (device) s
177 2436 m (actually) s
331 2436 m (allows) s
462 2436 m (to) s
514 2436 m (be) s
573 2436 m (configured) s
785 2436 m (with) s
882 2436 m (up) s
945 2436 m (to) s
997 2436 m (n) s
1036 2436 m (=) s
1076 2436 m (22) s
1138 2436 m (inputs) s
1268 2436 m (and) s
1352 2436 m (at) s
1401 2436 m (most) s
1508 2436 m (m) s
1560 2436 m (=) s
1599 2436 m (10) s
1660 2436 m (outputs,) s
1826 2436 m (whereby) s
1996 2436 m (m+n) s
2099 2436 m (=) s
177 2376 m (22\).) s
268 2376 m (This) s
358 2376 m (self-imposed) s
621 2376 m (restriction) s
822 2376 m (has) s
900 2376 m (the) s
975 2376 m (side-effect) s
1190 2376 m (that) s
1279 2376 m (we) s
1348 2376 m (may) s
1441 2376 m (ignore) s
1573 2376 m (the) s
1648 2376 m (tri-state) s
1816 2376 m (gates) s
1925 2376 m (controlling) s
177 2316 m (the) s
254 2316 m (pin) s
331 2316 m (functions.) s
532 2316 m (Furthermore,) s
794 2316 m (we) s
865 2316 m (decided) s
1026 2316 m (to) s
1081 2316 m (dedicate) s
1253 2316 m (one) s
1340 2316 m (of) s
1394 2316 m (the) s
1471 2316 m (inputs) s
1604 2316 m (to) s
1659 2316 m (serve) s
1768 2316 m (exclusively) s
1976 2316 m (as) s
2030 2316 m (clock) s
177 2256 m (signal.) s
177 2173 m (Signals) s
318 2173 m (in) s
366 2173 m (a) s
399 2173 m (circuit) s
525 2173 m (specification) s
767 2173 m (\(Lola) s
871 2173 m (program\)) s
1058 2173 m (must) s
1165 2173 m (by) s
1219 2173 m (some) s
1332 2173 m (means) s
1466 2173 m (become) s
1625 2173 m (related) s
1763 2173 m (to) s
1812 2173 m (the) s
1883 2173 m (signals) s
2017 2173 m (of) s
2065 2173 m (the) s
177 2113 m (device) s
307 2113 m (indentified) s
523 2113 m (by) s
580 2113 m (their) s
681 2113 m (pin) s
756 2113 m (numbers.) s
948 2113 m (The) s
1031 2113 m (simplest) s
1200 2113 m (solution) s
1366 2113 m (is) s
1409 2113 m (to) s
1462 2113 m (assign) s
1589 2113 m (fixed) s
1693 2113 m (names) s
1831 2113 m (to) s
1884 2113 m (pins,) s
1986 2113 m (such) s
2087 2113 m (as) s
177 2053 m (D0,) s
263 2053 m (D1,) s
349 2053 m (...) s
402 2053 m (.) s
432 2053 m (Not) s
520 2053 m (wishing) s
682 2053 m (to) s
739 2053 m (infringe) s
900 2053 m (on) s
968 2053 m (the) s
1047 2053 m (designer's) s
1246 2053 m (freedom) s
1422 2053 m (to) s
1479 2053 m (choose) s
1628 2053 m (meaningful) s
1859 2053 m (identifiers,) s
2071 2053 m (we) s
177 1993 m (instead) s
323 1993 m (extended) s
506 1993 m (the) s
579 1993 m (Lola) s
668 1993 m (language) s
846 1993 m (by) s
900 1993 m (a) s
933 1993 m (construct) s
1117 1993 m (allowing) s
1286 1993 m (to) s
1336 1993 m (associate) s
1513 1993 m (pin) s
1585 1993 m (numbers) s
1763 1993 m (with) s
1858 1993 m (declared) s
2026 1993 m (input) s
177 1933 m (and) s
268 1933 m (output) s
415 1933 m (variables.) s
606 1933 m (The) s
694 1933 m (program) s
873 1933 m (GAL) s
969 1933 m (then) s
1074 1933 m (checks) s
1217 1933 m (whether) s
1391 1933 m (inputs) s
1527 1933 m (are) s
1604 1933 m (assigned) s
1781 1933 m (to) s
1839 1933 m (input) s
1958 1933 m (pins) s
2055 1933 m (and) s
177 1873 m (outputs to output pins. \(The pin number of a variable ) s
(Syntax12i.Scn.Fnt) f (v) s
(Syntax12.Scn.Fnt) f ( is stored in the record field ) s
(Syntax12i.Scn.Fnt) f (v.u) s
(Syntax12.Scn.Fnt) f (\).) s
177 1790 m (Next,) s
290 1790 m (we) s
361 1790 m (need) s
469 1790 m (to) s
524 1790 m (explain) s
674 1790 m (the) s
751 1790 m (structure) s
933 1790 m (of) s
987 1790 m (the) s
1064 1790 m (fuse) s
1157 1790 m (map.) s
1269 1790 m (It) s
1312 1790 m (consists) s
1473 1790 m (of) s
1526 1790 m (two) s
1613 1790 m (parts,) s
1730 1790 m (namely) s
1881 1790 m (the) s
1957 1790 m (matrix) s
2093 1790 m (D) s
177 1730 m (representing) s
421 1730 m (the) s
495 1730 m (And-matrix,) s
740 1730 m (and) s
824 1730 m (two) s
909 1730 m (arrays) s
1030 1730 m (S0) s
1091 1730 m (and) s
1175 1730 m (S1) s
1236 1730 m (determining) s
1477 1730 m (the) s
1550 1730 m (macro) s
1681 1730 m (cell) s
1756 1730 m (options) s
1908 1730 m (of) s
1958 1730 m (inversion) s
177 1670 m (and) s
260 1670 m (register) s
408 1670 m (\(see) s
496 1670 m (Fig.) s
573 1670 m (10\).) s
661 1670 m (Matrix) s
796 1670 m (D) s
841 1670 m (consists) s
998 1670 m (of) s
1048 1670 m (M) s
1102 1670 m (=) s
1141 1670 m (44) s
1202 1670 m (rows) s
1304 1670 m (of) s
1354 1670 m (N) s
1397 1670 m (=) s
1435 1670 m (132) s
1519 1670 m (elements) s
1700 1670 m (with) s
1795 1670 m (value) s
1903 1670 m (0) s
1939 1670 m (or) s
1990 1670 m (1.) s
2037 1670 m (Each) s
177 1610 m (row) s
266 1610 m (represents) s
473 1610 m (an) s
536 1610 m (argument) s
734 1610 m (\(input) s
866 1610 m (or) s
922 1610 m (fed) s
997 1610 m (back) s
1099 1610 m (output\)) s
1257 1610 m (or) s
1312 1610 m (its) s
1370 1610 m (inverse.) s
1525 1610 m (There) s
1645 1610 m (are) s
1718 1610 m (potentially) s
1928 1610 m (22) s
1992 1610 m (signals,) s
177 1550 m (yielding) s
335 1550 m (44) s
399 1550 m (rows,) s
514 1550 m (each) s
616 1550 m (of) s
669 1550 m (which) s
797 1550 m (can) s
877 1550 m (be) s
937 1550 m (connected) s
1144 1550 m (to) s
1197 1550 m (any) s
1276 1550 m (of) s
1328 1550 m (the) s
1403 1550 m (132) s
1490 1550 m (product) s
1650 1550 m (terms,) s
1781 1550 m (yielding) s
1938 1550 m (rows) s
2042 1550 m (with) s
177 1490 m (132) s
263 1490 m (elements) s
446 1490 m (\(see) s
535 1490 m (Fig.) s
613 1490 m (11\).) s
702 1490 m (D[i,) s
785 1490 m (j]) s
826 1490 m (=) s
866 1490 m (0) s
904 1490 m (means) s
1041 1490 m (that) s
1129 1490 m (variable) s
1285 1490 m (i) s
1310 1490 m (\(if) s
1364 1490 m (even,) s
1473 1490 m (or) s
1526 1490 m (its) s
1582 1490 m (inverse,) s
1733 1490 m (if) s
1770 1490 m (i) s
1794 1490 m (odd\)) s
1895 1490 m (is) s
1936 1490 m (a) s
1970 1490 m (factor) s
2089 1490 m (in) s
177 1430 m (term) s
283 1430 m (j,) s
321 1430 m (i.e.) s
392 1430 m (is) s
437 1430 m (connected) s
646 1430 m (to) s
701 1430 m (product) s
863 1430 m (line) s
948 1430 m (j.) s
987 1430 m (D[i,) s
1073 1430 m (j]) s
1117 1430 m (=) s
1160 1430 m (1) s
1200 1430 m (means) s
1339 1430 m (that) s
1429 1430 m (the) s
1505 1430 m (connection) s
1728 1430 m (is) s
1772 1430 m (open.) s
1893 1430 m (Note) s
1999 1430 m (that) s
2089 1430 m (in) s
177 1370 m (typical) s
311 1370 m (pictures) s
473 1370 m (of) s
526 1370 m (PLD) s
616 1370 m (fuse) s
708 1370 m (maps,) s
834 1370 m (product) s
994 1370 m (lines) s
1094 1370 m (run) s
1174 1370 m (horizontally,) s
1417 1370 m (whereas) s
1585 1370 m (in) s
1636 1370 m (matrix) s
1771 1370 m (D) s
1818 1370 m (a) s
1854 1370 m (product) s
2014 1370 m (line) s
2097 1370 m (is) s
177 1310 m (represented) s
414 1310 m (by) s
475 1310 m (a) s
515 1310 m (column\).) s
704 1310 m (Initially,) s
867 1310 m (D) s
918 1310 m (contains) s
1093 1310 m (all) s
1155 1310 m (ones,) s
1271 1310 m (representing) s
1520 1310 m (the) s
1599 1310 m (device's) s
1757 1310 m (state) s
1863 1310 m (after) s
1966 1310 m (an) s
2030 1310 m (erase) s
177 1250 m (operation.) s
511 492 m (Syntax10.Scn.Fnt) f (j) s
1215 1100 m (i) s
527 428 m (Elektra.Scn.Fnt) f (;) s
544 428 1 127 l
1247 1068 m (>) s
1152 1084 127 1 l
1951 332 m (Syntax10.Scn.Fnt) f (9) s
1951 652 m (2) s
1951 812 m (1) s
1951 972 m (0) s
1215 300 m (Elektra.Scn.Fnt) f (H) s
1215 620 m (H) s
1215 780 m (H) s
1215 940 m (H) s
1215 332 m (Syntax8.Scn.Fnt) f (8) s
1199 652 m (12) s
1199 812 m (10) s
1215 972 m (8) s
447 300 m (122 - 129) s
463 620 m (21 - 32) s
463 780 m (10 - 19) s
479 940 m (1 - 8) s
1695 972 m (43) s
1607 972 m (42) s
1551 972 m (41) s
1455 972 m (40) s
991 972 m (5) s
911 972 m (4) s
863 972 m (3) s
783 972 m (2) s
735 972 m (1) s
655 972 m (0) s
1904 316 79 1 l
1904 636 79 1 l
1904 796 79 1 l
1904 956 79 1 l
616 312 1199 5 l
616 632 1199 5 l
616 792 1199 5 l
616 952 1199 5 l
1535 1020 m (Elektra.Scn.Fnt) f (!) s
719 1020 m (!) s
1791 252 m (1) s
1791 572 m (1) s
1791 732 m (1) s
959 1020 m (H) s
927 1020 m (I) s
975 1020 m (!) s
928 1052 63 1 l
960 1052 1 95 l
944 248 1 787 l
984 248 1 771 l
975 1020 m (!) s
1663 1020 m (H) s
1631 1020 m (I) s
1679 1020 m (!) s
1632 1052 63 1 l
1664 1052 1 95 l
1648 248 1 787 l
1688 248 1 771 l
1544 248 1 771 l
1504 248 1 787 l
1520 1052 1 95 l
1488 1052 63 1 l
1679 1020 m (!) s
1487 1020 m (I) s
1519 1020 m (H) s
847 1020 m (!) s
856 248 1 771 l
816 248 1 787 l
832 1052 1 95 l
800 1052 63 1 l
847 1020 m (!) s
799 1020 m (I) s
831 1020 m (H) s
728 248 1 771 l
688 248 1 787 l
704 1052 1 95 l
672 1052 63 1 l
671 1020 m (I) s
703 1020 m (H) s
1791 892 m (1) s
1 p
%%Page: 0 19
2085 3224 m (Syntax10.Scn.Fnt) f (18) s
826 3119 m (Syntax12.Scn.Fnt) f (Fig. 11. And-Matrix of GAL22V10B) s
177 3036 m (We) s
264 3036 m (are) s
342 3036 m (now) s
445 3036 m (ready) s
565 3036 m (to) s
624 3036 m (look) s
726 3036 m (at) s
782 3036 m (program) s
962 3036 m (GAL) s
1059 3036 m (which) s
1193 3036 m (proceeds) s
1379 3036 m (as) s
1438 3036 m (follows:) s
1603 3036 m (Procedure) s
1810 3036 m (Syntax12i.Scn.Fnt) f (evaluate) s
1974 3036 m (Syntax12.Scn.Fnt) f (visits) s
2082 3036 m (all) s
177 2976 m (variables) s
355 2976 m (in) s
410 2976 m (the) s
488 2976 m (Lola) s
582 2976 m (data) s
680 2976 m (structure.) s
874 2976 m (For) s
952 2976 m (each) s
1056 2976 m (ouput) s
1186 2976 m (variable) s
1346 2976 m (Syntax12i.Scn.Fnt) f (v,) s
1394 2976 m (Syntax12.Scn.Fnt) f (its) s
1454 2976 m (internal) s
1615 2976 m (signal) s
1739 2976 m (number) s
1906 2976 m (\(index\)) s
2057 2976 m (Syntax12i.Scn.Fnt) f (k) s
2097 2976 m (Syntax12.Scn.Fnt) f (is) s
177 2916 m (obtained) s
354 2916 m (from) s
458 2916 m (the) s
531 2916 m (specified) s
705 2916 m (pin) s
778 2916 m (number) s
940 2916 m (Syntax12i.Scn.Fnt) f (v.u) s
1006 2916 m (Syntax12.Scn.Fnt) f (through) s
1168 2916 m (the) s
1241 2916 m (constant) s
1413 2916 m (mapping) s
1591 2916 m (Syntax12i.Scn.Fnt) f (k) s
1625 2916 m (=) s
1662 2916 m (smap[v.u].) s
1864 2916 m (Syntax12.Scn.Fnt) f (If) s
1902 2916 m (node) s
2009 2916 m (s) s
2038 2916 m (=) s
2076 2916 m (v.x) s
177 2856 m (is) s
218 2856 m (a) s
252 2856 m (negation,) s
437 2856 m (the) s
510 2856 m (respective) s
704 2856 m (macro) s
835 2856 m (cell) s
910 2856 m (option) s
1045 2856 m (is) s
1086 2856 m (selected) s
1247 2856 m (by) s
1302 2856 m (setting) s
1437 2856 m (Syntax12i.Scn.Fnt) f (S0[k]) s
1546 2856 m (Syntax12.Scn.Fnt) f (to) s
1596 2856 m (0,) s
1642 2856 m (and) s
1724 2856 m (if) s
1760 2856 m (the) s
1832 2856 m (node) s
1938 2856 m (specifies) s
2104 2856 m (a) s
177 2796 m (register,) s
335 2796 m (the) s
407 2796 m (register) s
554 2796 m (option) s
688 2796 m (is) s
728 2796 m (selected) s
888 2796 m (by) s
942 2796 m (setting) s
1077 2796 m (Syntax12i.Scn.Fnt) f (S1[k]) s
1186 2796 m (Syntax12.Scn.Fnt) f (to) s
1236 2796 m (0.) s
1283 2796 m (Then) s
1388 2796 m (procedure) s
1588 2796 m (Syntax12i.Scn.Fnt) f (expression) s
1779 2796 m (Syntax12.Scn.Fnt) f (is) s
1819 2796 m (called) s
1938 2796 m (to) s
1988 2796 m (process) s
177 2736 m (the respective tree structure. Its parameters are the tree's root ) s
(Syntax12i.Scn.Fnt) f (s) s
(Syntax12.Scn.Fnt) f ( and the output variable's number ) s
(Syntax12i.Scn.Fnt) f (k.) s
271 2661 m (Syntax10.Scn.Fnt) f (PROCEDURE evaluate\(v: Variable\);) s
318 2612 m (VAR s: LSB.Signal;) s
271 2563 m (BEGIN \(*traverse list of variables*\)) s
318 2514 m (WHILE v # NIL DO) s
365 2465 m (IF v.class = out THEN) s
412 2416 m (IF v.fct = bit THEN s := v.x;) s
459 2367 m (IF s.fct = not THEN s := s.y END ;) s
459 2318 m (IF s.fct = reg THEN) s
506 2269 m (IF \(s.x = NIL\) OR \(s.x # clk\) OR \(s.y.x # one\) THEN) s
553 2220 m (\(*error: register with clock or enable specification*\)) s
506 2171 m (END ;) s
506 2122 m (s := s.y.y) s
459 2073 m (END ;) s
459 2024 m (expression\(s, smap[v.u]\)) s
412 1975 m (ELSIF v.fct = array THEN evaluate\(v.dsc\)) s
412 1926 m (ELSE \(*error: bus variable*\)) s
412 1877 m (END) s
365 1828 m (END ;) s
365 1779 m (v := v.next) s
318 1730 m (END) s
271 1681 m (END evaluate;) s
177 1601 m (Syntax12.Scn.Fnt) f (An) s
241 1601 m (expression) s
448 1601 m (consists) s
604 1601 m (of) s
653 1601 m (a) s
686 1601 m (sum) s
779 1601 m (of) s
828 1601 m (product) s
985 1601 m (terms,) s
1113 1601 m (each) s
1211 1601 m (of) s
1260 1601 m (which) s
1385 1601 m (is) s
1425 1601 m (processed) s
1619 1601 m (by) s
1673 1601 m (a) s
1706 1601 m (call) s
1780 1601 m (to) s
1830 1601 m (procedure) s
2030 1601 m (Syntax12i.Scn.Fnt) f (term.) s
177 1541 m (Syntax12.Scn.Fnt) f (Each) s
285 1541 m (term) s
394 1541 m (is) s
442 1541 m (represented) s
680 1541 m (by) s
741 1541 m (a) s
781 1541 m (column) s
943 1541 m (in) s
998 1541 m (matrix) s
1137 1541 m (D,) s
1198 1541 m (and) s
1287 1541 m (since) s
1399 1541 m (every) s
1511 1541 m (variable) s
1672 1541 m (is) s
1719 1541 m (the) s
1798 1541 m (sum) s
1898 1541 m (of) s
1954 1541 m (a) s
1994 1541 m (limited) s
177 1481 m (number) s
340 1481 m (of) s
391 1481 m (terms,) s
521 1481 m (the) s
595 1481 m (term's) s
723 1481 m (number) s
886 1481 m (must) s
995 1481 m (be) s
1054 1481 m (determined) s
1283 1481 m (and) s
1367 1481 m (then) s
1466 1481 m (checked) s
1631 1481 m (against) s
1774 1481 m (its) s
1829 1481 m (limit.) s
1939 1481 m (Procedure) s
177 1421 m (Syntax12i.Scn.Fnt) f (expression\(k\)) s
424 1421 m (Syntax12.Scn.Fnt) f (obtains) s
574 1421 m (the) s
648 1421 m (number) s
811 1421 m (Syntax12i.Scn.Fnt) f (j) s
834 1421 m (Syntax12.Scn.Fnt) f (of) s
885 1421 m (its) s
941 1421 m (first) s
1025 1421 m (term) s
1128 1421 m (from) s
1233 1421 m (the) s
1306 1421 m (mapping) s
1484 1421 m (Syntax12i.Scn.Fnt) f (jmap[k],) s
1650 1421 m (Syntax12.Scn.Fnt) f (and) s
1733 1421 m (then) s
1831 1421 m (increments) s
2051 1421 m (Syntax12i.Scn.Fnt) f (j) s
2073 1421 m (Syntax12.Scn.Fnt) f (for) s
177 1361 m (each) s
275 1361 m (new) s
366 1361 m (term) s
467 1361 m (up) s
528 1361 m (to) s
578 1361 m (the) s
650 1361 m (maximum) s
856 1361 m (specified) s
1029 1361 m (by) s
1083 1361 m (Syntax12i.Scn.Fnt) f (jmap[k+1]-1.) s
1346 1361 m (Syntax12.Scn.Fnt) f (\(Note) s
1464 1361 m (that) s
1550 1361 m (this) s
1629 1361 m (explicit) s
1772 1361 m (mapping) s
1949 1361 m (is) s
1989 1361 m (needed) s
177 1301 m (because) s
339 1301 m (the) s
413 1301 m (maximum) s
621 1301 m (number) s
784 1301 m (of) s
834 1301 m (terms) s
953 1301 m (differs) s
1080 1301 m (among) s
1223 1301 m (the) s
1296 1301 m (variables\).) s
1495 1301 m (After) s
1597 1301 m (processing) s
1804 1301 m (the) s
1877 1301 m (last) s
1953 1301 m (term,) s
2065 1301 m (the) s
177 1241 m (remaining product lines, if any, must be set to yield 0 by selecting any input and its inverse \(~x*x = 0\).) s
271 1166 m (Syntax10.Scn.Fnt) f (PROCEDURE expression\(s: Signal; k: INTEGER\);) s
318 1117 m (VAR j, lim: INTEGER;) s
271 1068 m (BEGIN j := jmap[k]+1; lim := jmap[k+1];) s
318 1019 m (WHILE s.fct = or DO) s
365 970 m (term\(s.y, j\); INC\(j\); s := s.x;) s
365 921 m (IF j = lim THEN \(*error: too many product terms*\) END) s
318 872 m (END ;) s
318 823 m (term\(s, j\); INC\(j\);) s
318 774 m (WHILE j < lim DO Zero\(j\); INC\(j\) END) s
271 725 m (END expression;) s
177 645 m (Syntax12.Scn.Fnt) f (Procedure) s
376 645 m (Syntax12i.Scn.Fnt) f (term) s
473 645 m (Syntax12.Scn.Fnt) f (further) s
614 645 m (traverses) s
786 645 m (the) s
859 645 m (tree) s
943 645 m (structure) s
1121 645 m (and) s
1204 645 m (calls) s
1295 645 m (upon) s
1405 645 m (Syntax12i.Scn.Fnt) f (factor.) s
1530 645 m (Syntax12.Scn.Fnt) f (Note) s
1632 645 m (that) s
1718 645 m (the) s
1790 645 m (same) s
1900 645 m (product) s
2057 645 m (line) s
177 585 m (index ) s
(Syntax12i.Scn.Fnt) f (j) s
(Syntax12.Scn.Fnt) f ( is is used for all factors.) s
271 510 m (Syntax10.Scn.Fnt) f (PROCEDURE term\(s: Signal; j: INTEGER\);) s
271 461 m (BEGIN) s
318 412 m (WHILE s.fct = and DO factor\(s.y, j\); s := s.x END ;) s
318 363 m (factor\(s, j\)) s
271 314 m (END term;) s
1 p
%%Page: 0 20
2085 3224 m (Syntax10.Scn.Fnt) f (19) s
177 3119 m (Syntax12.Scn.Fnt) f (Procedure) s
380 3119 m (factor) s
503 3119 m (finally) s
629 3119 m (assigns) s
774 3119 m (zeroes) s
907 3119 m (to) s
961 3119 m (elements) s
1146 3119 m (of) s
1199 3119 m (D,) s
1257 3119 m (i.e.) s
1327 3119 m (registers) s
1495 3119 m (connections.) s
1746 3119 m (Syntax12i.Scn.Fnt) f (D[i,) s
1828 3119 m (j]) s
1870 3119 m (Syntax12.Scn.Fnt) f (becomes) s
2051 3119 m (0,) s
2101 3119 m (if) s
177 3059 m (variable ) s
(Syntax12i.Scn.Fnt) f (i = imap[s.u]) s
(Syntax12.Scn.Fnt) f ( is a factor in term j, and ) s
(Syntax12i.Scn.Fnt) f (D[i+1, j]) s
(Syntax12.Scn.Fnt) f ( becomes 0, if the inverse of variable ) s
(Syntax12i.Scn.Fnt) f (i) s
(Syntax12.Scn.Fnt) f ( is a factor.) s
271 2967 m (Syntax10.Scn.Fnt) f (PROCEDURE factor\(s: Signal; j: INTEGER\);) s
318 2918 m (VAR inv: SHORTINT;) s
271 2869 m (BEGIN) s
318 2820 m (IF s.fct = LSB.not THEN inv := 1; s := s.y ELSE inv := 0 END ;) s
318 2771 m (IF s IS LSB.Variable THEN) s
365 2722 m (IF s.u IN inputs + outputs THEN D[imap[s.u]+inv, j] := 0) s
365 2673 m (ELSIF s = zero THEN Zero\(j\)) s
365 2624 m (ELSIF s = one THEN \(*do nothing; unconnected terms have value 1*\)) s
365 2575 m (ELSE \(*error: variable neither input nor output*\)) s
365 2526 m (END) s
318 2477 m (ELSE \(*error: illegal expression*\)) s
318 2428 m (END) s
271 2379 m (END factor;) s
177 2299 m (Syntax12.Scn.Fnt) f (For) s
252 2299 m (details) s
386 2299 m (and) s
471 2299 m (a) s
507 2299 m (complete) s
695 2299 m (presentation,) s
952 2299 m (the) s
1027 2299 m (reader) s
1159 2299 m (is) s
1201 2299 m (referred) s
1360 2299 m (to) s
1412 2299 m (the) s
1486 2299 m (program) s
1659 2299 m (listings) s
1800 2299 m (at) s
1849 2299 m (the) s
1923 2299 m (end) s
2007 2299 m (of) s
2058 2299 m (this) s
177 2239 m (text,) s
273 2239 m (where) s
405 2239 m (it) s
447 2239 m (becomes) s
629 2239 m (evident) s
780 2239 m (that) s
871 2239 m (a) s
908 2239 m (specific) s
1059 2239 m (detail) s
1177 2239 m (has) s
1256 2239 m (been) s
1363 2239 m (omitted) s
1526 2239 m (from) s
1633 2239 m (the) s
1709 2239 m (above) s
1833 2239 m (discussion.) s
2050 2239 m (This) s
177 2179 m (omission) s
357 2179 m (causes) s
489 2179 m (the) s
561 2179 m (device) s
686 2179 m (to) s
735 2179 m (be) s
791 2179 m (configured) s
1000 2179 m (wrongly) s
1158 2179 m (when) s
1273 2179 m (a) s
1305 2179 m (macro) s
1434 2179 m (cell) s
1507 2179 m (is) s
1546 2179 m (chosen) s
1688 2179 m (to) s
1737 2179 m (include) s
1884 2179 m (a) s
1916 2179 m (register) s
2062 2179 m (but) s
177 2119 m (no) s
241 2119 m (inverter.) s
407 2119 m (We) s
488 2119 m (note) s
587 2119 m (that) s
676 2119 m (then) s
776 2119 m (the) s
851 2119 m (feedback) s
1030 2119 m (term) s
1133 2119 m (is) s
1175 2119 m (not) s
1252 2119 m (identical) s
1423 2119 m (to) s
1475 2119 m (the) s
1549 2119 m (output,) s
1699 2119 m (but) s
1776 2119 m (unfortunately) s
2041 2119 m (is) s
2083 2119 m (its) s
177 2059 m (inverse,) s
327 2059 m (for) s
391 2059 m (no) s
452 2059 m (apparent) s
629 2059 m (reason.) s
775 2059 m (This) s
862 2059 m (forces) s
983 2059 m (a) s
1016 2059 m (prescan) s
1169 2059 m (of) s
1217 2059 m (the) s
1288 2059 m (macro) s
1417 2059 m (cell) s
1490 2059 m (configurations) s
1766 2059 m (before) s
1895 2059 m (the) s
1966 2059 m (matrix) s
2097 2059 m (is) s
177 1999 m (generated.) s
385 1999 m (Procedure) s
585 1999 m (Syntax12i.Scn.Fnt) f (PreScan) s
732 1999 m (Syntax12.Scn.Fnt) f (sets) s
815 1999 m (the) s
889 1999 m (values) s
1016 1999 m (of) s
1067 1999 m (arrays) s
1188 1999 m (Syntax12i.Scn.Fnt) f (S0) s
1245 1999 m (Syntax12.Scn.Fnt) f (and) s
1329 1999 m (Syntax12i.Scn.Fnt) f (S1.) s
1397 1999 m (Syntax12.Scn.Fnt) f (An) s
1462 1999 m (auxiliary) s
1629 1999 m (array) s
1733 1999 m (Syntax12i.Scn.Fnt) f (S2) s
1789 1999 m (Syntax12.Scn.Fnt) f (is) s
1830 1999 m (used,) s
1940 1999 m (and) s
2023 1999 m (Syntax12i.Scn.Fnt) f (factor) s
177 1939 m (Syntax12.Scn.Fnt) f (requires a corresponding adjustment.) s
177 1819 m (Syntax12m.Scn.Fnt) f (10. The GAL circuit board for Ceres, and loading the fuse map) s
177 1736 m (Syntax12.Scn.Fnt) f (The) s
263 1736 m (implementation) s
581 1736 m (of) s
636 1736 m (an) s
700 1736 m (interface) s
878 1736 m (between) s
1055 1736 m (the) s
1133 1736 m (Ceres) s
1253 1736 m (Bus) s
1338 1736 m (and) s
1426 1736 m (the) s
1504 1736 m (GAL22V10B) s
1745 1736 m (is) s
1791 1736 m (shown) s
1932 1736 m (in) s
1985 1736 m (Fig.) s
2066 1736 m (12.) s
177 1676 m (Input) s
291 1676 m (and) s
375 1676 m (output) s
515 1676 m (addresses) s
706 1676 m (\(relative) s
868 1676 m (to) s
920 1676 m (a) s
955 1676 m (base) s
1052 1676 m (address) s
1205 1676 m (for) s
1271 1676 m (the) s
1345 1676 m (GAL\)) s
1451 1676 m (are) s
1522 1676 m (assigned) s
1693 1676 m (as) s
1745 1676 m (follows.) s
1903 1676 m (Outputs) s
2068 1676 m (are) s
177 1616 m (latched in registers \(74LS574\).) s
283 1533 m (write) s
436 1533 m (0) s
554 1533 m (write 8 bits to GAL inputs at pins 3 - 11) s
436 1473 m (4) s
554 1473 m (neg. pulse to GAL input at pin 2, used as register clock) s
436 1413 m (12) s
554 1413 m (write 8 bits to GAL inputs at pins 12, 13, 16) s
554 1353 m (program step, latch SDI, MODE, and SCLK) s
283 1293 m (read) s
436 1293 m (0) s
554 1293 m (read 8 bits from GAL outputs at pins 27 - 19) s
436 1233 m (12) s
554 1233 m (read GAL shift register output SDO as bit 0 for configuration verification) s
1 p
%%Page: 0 21
2085 3224 m (Syntax10.Scn.Fnt) f (20) s
313 1244 m (Syntax8.Scn.Fnt) f (GALenb') s
410 1292 447 1 l
1114 2892 159 1 l
714 2732 1 63 l
721 3108 m (574) s
773 2852 m (Q7) s
773 2884 m (Q6) s
773 2916 m (Q5) s
773 2948 m (Q4) s
673 2852 m (D7) s
673 2884 m (D6) s
673 2916 m (D5) s
673 2948 m (D4) s
821 2884 m (Elektra.Scn.Fnt) f (.) s
821 2948 m (.) s
821 3012 m (.) s
821 3076 m (.) s
709 2784 m (-) s
673 2980 m (Syntax8.Scn.Fnt) f (D3) s
673 3012 m (D2) s
673 3044 m (D1) s
653 2852 m (Elektra.Scn.Fnt) f (,) s
653 2884 m (,) s
653 2916 m (,) s
653 2948 m (,) s
653 2980 m (,) s
653 3012 m (,) s
653 3044 m (,) s
653 3076 m (,) s
673 3076 m (Syntax8.Scn.Fnt) f (D0) s
821 3044 m (Elektra.Scn.Fnt) f (.) s
821 2980 m (.) s
821 2916 m (.) s
821 2852 m (.) s
773 3076 m (Syntax8.Scn.Fnt) f (Q0) s
773 3044 m (Q1) s
773 3012 m (Q2) s
773 2980 m (Q3) s
773 2784 m (Elektra.Scn.Fnt) f (-) s
689 2804 m (Syntax8.Scn.Fnt) f (CK) s
761 2804 m (OE') s
666 2796 159 3 l
822 2796 3 351 l
666 3144 159 3 l
666 2796 3 351 l
841 2956 m (15) s
841 3020 m (17) s
841 3052 m (18) s
841 3084 m (19) s
633 2956 m (6) s
633 3020 m (4) s
633 3052 m (3) s
633 3084 m (2) s
986 2732 127 1 l
986 2732 1 287 l
826 3020 159 1 l
826 2956 287 1 l
538 3052 127 1 l
570 3020 95 1 l
602 2956 63 1 l
602 2508 1 447 l
1146 2204 1 79 l
1226 2236 1 47 l
1545 2924 m (125) s
697 1340 m (VCC) s
697 1740 m (138) s
1145 2700 m (22V10) s
1161 2748 m (GAL) s
1129 2940 m (SCLK) s
1129 3036 m (MODE) s
1201 2972 m (SDO) s
1129 3068 m (SDI) s
953 1596 m (r3') s
953 1692 m (r0') s
857 2044 m (w3') s
857 2108 m (w1') s
825 2252 m (w0') s
761 2748 m (Elektra.Scn.Fnt) f (') s
714 2732 207 1 l
922 2044 1 687 l
794 2044 127 1 l
1018 2348 95 1 l
1018 2108 1 239 l
794 2108 223 1 l
761 2284 m (') s
778 2316 1 31 l
714 2252 1 95 l
714 2252 175 1 l
890 2140 1 111 l
794 2140 95 1 l
1546 3052 1 47 l
1402 3100 143 1 l
1402 1596 1 1503 l
794 1596 607 1 l
1593 2252 m (') s
1610 2284 1 63 l
1546 1692 1 655 l
794 1692 751 1 l
858 1292 1 527 l
762 1388 95 1 l
762 1388 1 31 l
313 1372 m (Syntax8.Scn.Fnt) f (IORD') s
410 1388 287 1 l
698 1388 1 31 l
730 1372 1 47 l
762 1820 95 1 l
762 1820 1 47 l
697 1788 m (VCC) s
730 1820 1 47 l
313 1804 m (IOWR') s
410 1820 287 1 l
698 1820 1 47 l
602 1644 1 447 l
602 1644 63 1 l
570 1580 1 447 l
570 1580 95 1 l
538 1516 1 447 l
538 1516 127 1 l
345 2076 m (A8) s
345 2012 m (A7) s
345 1948 m (A6) s
1945 2620 m (D0) s
1945 2588 m (D1) s
1945 2556 m (D2) s
1945 2524 m (D3) s
1945 2492 m (D4) s
1945 2460 m (D5) s
1945 2428 m (D6) s
1945 2396 m (D7) s
345 2396 m (D7) s
345 2428 m (D6) s
345 2460 m (D5) s
345 2492 m (D4) s
345 2524 m (D3) s
345 2556 m (D2) s
345 2588 m (D1) s
345 2620 m (D0) s
666 1420 127 3 l
790 1420 3 319 l
666 1736 127 3 l
666 1420 3 319 l
729 1428 m (E) s
725 1408 m (Elektra.Scn.Fnt) f (-) s
653 1508 m (,) s
653 1572 m (,) s
653 1636 m (,) s
693 1408 m (-) s
757 1408 m (-) s
789 1460 m (.) s
789 1492 m (.) s
789 1524 m (.) s
789 1556 m (.) s
789 1588 m (.) s
789 1620 m (.) s
789 1652 m (.) s
789 1684 m (.) s
757 1428 m (Syntax8.Scn.Fnt) f (E') s
693 1428 m (E') s
673 1504 m (S1) s
673 1568 m (S2) s
673 1632 m (S4) s
733 1684 m (Q0') s
733 1652 m (Q1') s
733 1620 m (Q2') s
733 1588 m (Q3') s
733 1556 m (Q4') s
733 1524 m (Q5') s
733 1492 m (Q6') s
733 1460 m (Q7') s
410 1964 255 1 l
410 2028 255 1 l
410 2092 255 1 l
570 2572 1 447 l
538 2604 1 447 l
506 2636 1 447 l
1786 2636 1 351 l
506 3084 159 1 l
1594 2988 191 1 l
1274 2988 223 1 l
826 3052 287 1 l
826 3084 287 1 l
1658 2636 255 1 l
1658 2572 255 1 l
1658 2540 255 1 l
1658 2508 255 1 l
1658 2476 255 1 l
1658 2444 255 1 l
1658 2412 255 1 l
1658 2604 255 1 l
410 2604 255 1 l
410 2412 255 1 l
410 2444 255 1 l
410 2476 255 1 l
410 2508 255 1 l
410 2540 255 1 l
410 2572 255 1 l
410 2636 255 1 l
1274 2636 207 1 l
1274 2604 207 1 l
1274 2572 207 1 l
1274 2540 207 1 l
1274 2508 207 1 l
1274 2476 207 1 l
1274 2444 207 1 l
1274 2412 207 1 l
826 2412 287 1 l
826 2444 287 1 l
826 2476 287 1 l
826 2508 287 1 l
826 2540 287 1 l
826 2572 287 1 l
826 2604 287 1 l
826 2636 287 1 l
1114 2284 159 3 l
1270 2284 3 863 l
1114 3144 159 3 l
1114 2284 3 863 l
1593 2980 m (Elektra.Scn.Fnt) f (.) s
1489 2980 m (,) s
1541 3040 m (+) s
1497 2940 m (3) s
1537 3020 m (!) s
666 1868 127 3 l
790 1868 3 319 l
666 2184 127 3 l
666 1868 3 319 l
729 1876 m (Syntax8.Scn.Fnt) f (E) s
725 1856 m (Elektra.Scn.Fnt) f (-) s
653 1956 m (,) s
653 2020 m (,) s
653 2084 m (,) s
693 1856 m (-) s
757 1856 m (-) s
789 1908 m (.) s
789 1940 m (.) s
789 1972 m (.) s
789 2004 m (.) s
789 2036 m (.) s
789 2068 m (.) s
789 2100 m (.) s
789 2132 m (.) s
757 1876 m (Syntax8.Scn.Fnt) f (E') s
693 1876 m (E') s
673 1952 m (S1) s
673 2016 m (S2) s
673 2080 m (S4) s
733 2132 m (Q0') s
733 2100 m (Q1') s
733 2068 m (Q2') s
733 2036 m (Q3') s
733 2004 m (Q4') s
733 1972 m (Q5') s
733 1940 m (Q6') s
733 1908 m (Q7') s
1545 2660 m (541) s
1485 2564 m (Elektra.Scn.Fnt) f (,) s
1485 2532 m (,) s
1485 2500 m (,) s
1505 2624 m (Syntax8.Scn.Fnt) f (D0) s
1653 2596 m (Elektra.Scn.Fnt) f (.) s
1653 2564 m (.) s
1485 2404 m (,) s
1653 2532 m (.) s
1653 2500 m (.) s
1597 2356 m (Syntax8.Scn.Fnt) f (G1) s
1605 2400 m (Y7) s
1653 2468 m (Elektra.Scn.Fnt) f (.) s
1653 2436 m (.) s
1485 2596 m (,) s
1653 2404 m (.) s
1605 2432 m (Syntax8.Scn.Fnt) f (Y6) s
1505 2592 m (D1) s
1505 2560 m (D2) s
1505 2528 m (D3) s
1505 2496 m (D4) s
1505 2464 m (D5) s
1505 2432 m (D6) s
1505 2400 m (D7) s
1605 2464 m (Y5) s
1605 2496 m (Y4) s
1605 2528 m (Y3) s
1605 2560 m (Y2) s
1605 2592 m (Y1) s
1605 2624 m (Y0) s
1605 2336 m (Elektra.Scn.Fnt) f (-) s
1529 2356 m (Syntax8.Scn.Fnt) f (G0) s
1541 2336 m (Elektra.Scn.Fnt) f (-) s
1498 2348 159 3 l
1654 2348 3 351 l
1498 2696 159 3 l
1498 2348 3 351 l
1485 2436 m (,) s
1485 2468 m (,) s
1485 2628 m (,) s
1653 2532 m (.) s
1653 2564 m (.) s
1653 2628 m (.) s
721 2660 m (Syntax8.Scn.Fnt) f (574) s
773 2404 m (Q7) s
773 2436 m (Q6) s
773 2468 m (Q5) s
773 2500 m (Q4) s
673 2404 m (D7) s
673 2436 m (D6) s
673 2468 m (D5) s
673 2500 m (D4) s
821 2436 m (Elektra.Scn.Fnt) f (.) s
821 2500 m (.) s
821 2564 m (.) s
821 2628 m (.) s
709 2336 m (-) s
673 2532 m (Syntax8.Scn.Fnt) f (D3) s
673 2564 m (D2) s
673 2596 m (D1) s
653 2404 m (Elektra.Scn.Fnt) f (,) s
653 2436 m (,) s
653 2468 m (,) s
653 2500 m (,) s
653 2532 m (,) s
653 2564 m (,) s
653 2596 m (,) s
653 2628 m (,) s
673 2628 m (Syntax8.Scn.Fnt) f (D0) s
821 2596 m (Elektra.Scn.Fnt) f (.) s
821 2532 m (.) s
821 2468 m (.) s
821 2404 m (.) s
773 2628 m (Syntax8.Scn.Fnt) f (Q0) s
773 2596 m (Q1) s
773 2564 m (Q2) s
773 2532 m (Q3) s
773 2336 m (Elektra.Scn.Fnt) f (-) s
689 2356 m (Syntax8.Scn.Fnt) f (CK) s
761 2356 m (OE') s
666 2348 159 3 l
822 2348 3 351 l
666 2696 159 3 l
666 2348 3 351 l
633 2636 m (2) s
633 2604 m (3) s
633 2572 m (4) s
633 2540 m (5) s
633 2508 m (6) s
633 2476 m (7) s
633 2444 m (8) s
633 2412 m (9) s
841 2636 m (19) s
841 2604 m (18) s
841 2572 m (17) s
841 2540 m (16) s
841 2508 m (15) s
841 2476 m (14) s
841 2444 m (13) s
841 2412 m (12) s
1081 2636 m (3) s
1081 2604 m (4) s
1081 2572 m (5) s
1081 2540 m (6) s
1081 2508 m (7) s
1081 2476 m (9) s
1065 2444 m (10) s
1065 2412 m (11) s
1289 2636 m (27) s
1289 2604 m (26) s
1289 2572 m (25) s
1289 2540 m (24) s
1289 2508 m (23) s
1289 2476 m (21) s
1289 2444 m (20) s
1289 2412 m (19) s
1274 2380 63 1 l
1274 2348 63 1 l
1289 2380 m (18) s
1289 2348 m (17) s
1081 2348 m (2) s
1065 2796 m (12) s
1065 2764 m (13) s
1065 2732 m (16) s
1289 2988 m (22) s
1065 3084 m (15) s
1081 3052 m (8) s
1081 2956 m (1) s
1209 2220 m (Elektra.Scn.Fnt) f (') s
1241 2252 m (Syntax8.Scn.Fnt) f (14) s
1161 2252 m (28) s
1129 2172 m (VCC) s
1465 2412 m (9) s
1465 2444 m (8) s
1465 2476 m (7) s
1465 2508 m (6) s
1465 2540 m (5) s
1465 2572 m (4) s
1465 2604 m (3) s
1465 2636 m (2) s
1673 2444 m (12) s
1673 2476 m (13) s
1673 2508 m (14) s
1673 2540 m (15) s
1673 2572 m (16) s
1673 2604 m (17) s
1673 2636 m (18) s
1673 2412 m (11) s
809 1692 m (15) s
809 1596 m (12) s
809 2140 m (15) s
809 2108 m (14) s
809 2076 m (13) s
809 2044 m (12) s
633 1516 m (1) s
633 1580 m (2) s
633 1644 m (3) s
673 2316 m (11) s
753 2316 m (1) s
673 2764 m (11) s
809 2764 m (1) s
1505 2316 m (19) s
1625 2316 m (1) s
1561 3052 m (13) s
1609 2988 m (11) s
1449 2988 m (12) s
809 1388 m (6) s
777 1836 m (6) s
665 1836 m (4) s
649 1388 m (4) s
1681 1508 m (Elektra.Scn.Fnt) f (!) s
1617 1508 m (!) s
1553 1508 m (!) s
1745 1508 m (!) s
1681 1444 m (!) s
1489 1444 m (!) s
1553 1444 m (!) s
1617 1444 m (!) s
1745 1444 m (!) s
1809 1444 m (!) s
1809 1380 m (!) s
1745 1380 m (!) s
1745 1316 m (!) s
1809 1316 m (!) s
1553 1316 m (!) s
1489 1316 m (!) s
1489 1380 m (!) s
1553 1380 m (!) s
1809 1252 m (!) s
1745 1252 m (!) s
1617 1252 m (!) s
1553 1252 m (!) s
1489 1252 m (!) s
1681 1252 m (!) s
1745 1188 m (!) s
1553 1188 m (!) s
1617 1188 m (!) s
1681 1188 m (!) s
1625 1468 m (Syntax8.Scn.Fnt) f (1) s
1689 1532 m (2) s
1689 1468 m (3) s
1753 1532 m (4) s
1817 1468 m (5) s
1753 1468 m (6) s
1817 1404 m (7) s
1753 1404 m (8) s
1817 1340 m (9) s
1737 1340 m (10) s
1801 1276 m (11) s
1737 1212 m (12) s
1737 1276 m (13) s
1673 1212 m (14) s
1673 1276 m (15) s
1609 1212 m (16) s
1609 1276 m (17) s
1545 1212 m (18) s
1481 1276 m (19) s
1545 1276 m (20) s
1481 1340 m (21) s
1545 1340 m (22) s
1481 1404 m (23) s
1545 1404 m (24) s
1481 1468 m (25) s
1545 1532 m (26) s
1545 1468 m (27) s
1609 1532 m (28) s
1450 1164 415 1 l
1866 1164 1 383 l
1450 1164 1 415 l
1833 1548 m (Elektra.Scn.Fnt) f (I) s
1450 1580 383 1 l
1209 1388 m (Syntax8.Scn.Fnt) f (bottom view) s
1529 1612 m (ispGAL 22V10) s
1050 2796 1 287 l
1050 2796 63 1 l
1018 2764 1 287 l
1018 2764 95 1 l
697 2188 m (138) s
763 1096 m (Syntax12.Scn.Fnt) f (Fig. 12. GAL-interface for Ceres computer) s
177 996 m (Loading) s
337 996 m (of) s
388 996 m (the) s
462 996 m (fuse) s
552 996 m (map) s
650 996 m (is) s
692 996 m (controlled) s
894 996 m (by) s
950 996 m (a) s
985 996 m (state) s
1086 996 m (machine) s
1261 996 m (in) s
1311 996 m (the) s
1385 996 m (ispGAL22V10B) s
1674 996 m (part.) s
1773 996 m (It) s
1813 996 m (is) s
1855 996 m (clocked) s
2009 996 m (by) s
2065 996 m (the) s
177 936 m (clock) s
287 936 m (signal) s
408 936 m (SCLK,) s
530 936 m (and) s
615 936 m (it) s
655 936 m (has) s
733 936 m (3) s
772 936 m (states:) s
902 936 m (Syntax12i.Scn.Fnt) f (idle,) s
988 936 m (read) s
1077 936 m (command,) s
1280 936 m (Syntax12.Scn.Fnt) f (and) s
1365 936 m (Syntax12i.Scn.Fnt) f (execute) s
1506 936 m (command.) s
1708 936 m (Syntax12.Scn.Fnt) f (State) s
1815 936 m (transitions) s
2023 936 m (occur) s
177 876 m (when) s
298 876 m (the) s
375 876 m (input) s
491 876 m (signal) s
614 876 m (MODE) s
760 876 m (is) s
805 876 m (1.) s
856 876 m (When) s
988 876 m (in) s
1040 876 m (read) s
1137 876 m (command) s
1344 876 m (mode,) s
1478 876 m (a) s
1515 876 m (command) s
1722 876 m (consisting) s
1922 876 m (of) s
1975 876 m (5) s
2015 876 m (bits) s
2097 876 m (is) s
177 816 m (shifted) s
316 816 m (\(LSB) s
414 816 m (first\)) s
514 816 m (into) s
602 816 m (the) s
676 816 m (command) s
881 816 m (register) s
1030 816 m (of) s
1081 816 m (the) s
1155 816 m (programming) s
1424 816 m (machinery.) s
1643 816 m (This) s
1732 816 m (is) s
1774 816 m (done) s
1882 816 m (by) s
1937 816 m (procedure) s
177 756 m (Syntax12i.Scn.Fnt) f (EnterCmd) s
(Syntax12.Scn.Fnt) f ( \(see Fig 13\). There are the following commands:) s
271 673 m (00010) s
438 673 m (shift data into \(and out of\) the 132 + 6 bit shift register \(row data and row number\)) s
271 613 m (00011) s
438 613 m (erase the fuse maps) s
271 553 m (00111) s
438 553 m (program the fuse map row specified by the last 6 bits of the shift register) s
271 493 m (01010) s
438 493 m (load the shift register from the specified fuse map row) s
271 433 m (10100) s
438 433 m (shift data into \(and out of\) the 20 bit architecture shift register) s
177 350 m (Program) s
347 350 m (GAL) s
436 350 m (uses) s
529 350 m (procedures) s
747 350 m (Syntax12i.Scn.Fnt) f (WriteRow\(d\)) s
996 350 m (Syntax12.Scn.Fnt) f (and) s
1079 350 m (Syntax12i.Scn.Fnt) f (Arch) s
1170 350 m (Syntax12.Scn.Fnt) f (to) s
1221 350 m (load) s
1314 350 m (row) s
1399 350 m (Syntax12i.Scn.Fnt) f (d) s
1434 350 m (Syntax12.Scn.Fnt) f (and) s
1517 350 m (the) s
1590 350 m (architecture) s
1823 350 m (\(cell) s
1914 350 m (options\)) s
2082 350 m (Syntax12i.Scn.Fnt) f (S0) s
177 290 m (Syntax12.Scn.Fnt) f (and) s
271 290 m (Syntax12i.Scn.Fnt) f (S1) s
338 290 m (Syntax12.Scn.Fnt) f (respectively.) s
583 290 m (They) s
693 290 m (in) s
753 290 m (turn) s
856 290 m (use) s
943 290 m (procedure) s
1154 290 m (Syntax12i.Scn.Fnt) f (P) s
1198 290 m (Syntax12.Scn.Fnt) f (\(for) s
1289 290 m (pulse\)) s
1426 290 m (which) s
1562 290 m (first) s
1655 290 m (outputs) s
1821 290 m (and) s
1914 290 m (latches) s
2065 290 m (the) s
177 230 m (programming) s
445 230 m (machinery's) s
677 230 m (data) s
770 230 m (signal) s
889 230 m (SDI) s
969 230 m (\(bit) s
1047 230 m (0\),) s
1110 230 m (then) s
1208 230 m (sets) s
1290 230 m (the) s
1363 230 m (SCLK) s
1473 230 m (signal) s
1592 230 m (to) s
1643 230 m (1) s
1680 230 m (\(rising) s
1808 230 m (edge\),) s
1933 230 m (and) s
2015 230 m (finally) s
1 p
%%Page: 0 22
2085 3224 m (Syntax10.Scn.Fnt) f (21) s
177 3119 m (Syntax12.Scn.Fnt) f (resets) s
296 3119 m (it) s
335 3119 m (to) s
387 3119 m (0.) s
436 3119 m (Further) s
586 3119 m (details) s
719 3119 m (are) s
790 3119 m (contained) s
988 3119 m (in) s
1038 3119 m (the) s
1112 3119 m (GAL) s
1202 3119 m (data) s
1296 3119 m (books) s
1421 3119 m (and) s
1505 3119 m (in) s
1555 3119 m (the) s
1629 3119 m (listing) s
1753 3119 m (of) s
1803 3119 m (the) s
1876 3119 m (program.) s
2059 3119 m (We) s
177 3059 m (merely) s
314 3059 m (note) s
410 3059 m (that) s
496 3059 m (every) s
601 3059 m (command,) s
814 3059 m (after) s
910 3059 m (being) s
1024 3059 m (loaded,) s
1171 3059 m (requires) s
1332 3059 m (at) s
1379 3059 m (least) s
1475 3059 m (one) s
1557 3059 m (clock) s
1664 3059 m (pulse) s
1773 3059 m (for) s
1836 3059 m (being) s
1949 3059 m (executed.) s
177 2999 m (Also, timing constraints must be observed, and the clock signal must return to 0 for taking effect.) s
384 2888 63 1 l
448 2888 1 31 l
448 2920 31 1 l
480 2888 1 31 l
480 2888 31 1 l
512 2888 1 31 l
512 2920 31 1 l
544 2888 1 31 l
544 2888 31 1 l
672 2888 31 1 l
672 2888 1 31 l
640 2920 31 1 l
640 2888 1 31 l
608 2888 31 1 l
608 2888 1 31 l
576 2920 31 1 l
576 2888 1 31 l
704 2888 1 31 l
704 2920 31 1 l
736 2888 1 31 l
736 2888 31 1 l
1248 2888 31 1 l
1248 2888 1 31 l
1216 2920 31 1 l
1216 2888 1 31 l
1088 2888 1 31 l
1088 2920 31 1 l
1120 2888 1 31 l
1120 2888 31 1 l
1152 2888 1 31 l
1152 2920 31 1 l
1184 2888 1 31 l
1184 2888 31 1 l
1056 2888 31 1 l
1056 2888 1 31 l
1024 2920 31 1 l
1024 2888 1 31 l
992 2888 31 1 l
992 2888 1 31 l
960 2920 31 1 l
960 2888 1 31 l
896 2888 63 1 l
1536 2888 63 1 l
1600 2888 1 31 l
1600 2920 31 1 l
1632 2888 1 31 l
1632 2888 31 1 l
1664 2888 1 31 l
1664 2920 31 1 l
1696 2888 1 31 l
1696 2888 31 1 l
1824 2888 31 1 l
1824 2888 1 31 l
1792 2920 31 1 l
1792 2888 1 31 l
1760 2888 31 1 l
1760 2888 1 31 l
1728 2920 31 1 l
1728 2888 1 31 l
1856 2888 1 31 l
1856 2920 31 1 l
1888 2888 1 31 l
1888 2888 63 1 l
864 2888 31 1 l
864 2888 1 31 l
832 2920 31 1 l
832 2888 1 31 l
768 2888 1 31 l
768 2920 31 1 l
800 2888 1 31 l
800 2888 31 1 l
384 2792 47 1 l
432 2792 1 31 l
432 2824 63 1 l
496 2792 1 31 l
496 2792 319 1 l
816 2792 1 31 l
816 2824 63 1 l
880 2792 1 31 l
880 2792 1055 1 l
384 2664 47 1 l
432 2664 1 47 l
496 2664 1 47 l
432 2712 447 1 l
880 2664 1 47 l
944 2664 1 47 l
944 2712 975 1 l
1920 2664 1 47 l
1952 2888 1 31 l
1952 2920 31 1 l
1984 2888 1 31 l
1984 2888 63 1 l
1936 2792 1 31 l
1936 2824 63 1 l
2000 2792 1 31 l
2000 2792 47 1 l
255 2888 m (Syntax10.Scn.Fnt) f (SCLK) s
255 2792 m (MODE) s
255 2664 m (SDI) s
816 2664 1 47 l
496 2664 319 1 l
880 2664 1167 1 l
464 2584 1 79 l
479 2600 m (enter read) s
479 2552 m (command mode) s
848 2584 1 79 l
863 2600 m (enter execute mode \(e.g. shift data\)) s
559 2680 m (Syntax8.Scn.Fnt) f (command) s
1279 2680 m (data) s
1968 2600 1 63 l
1823 2552 m (Syntax10.Scn.Fnt) f (idle mode) s
1951 2632 m (Elektra.Scn.Fnt) f (:) s
831 2632 m (:) s
447 2632 m (:) s
524 2472 m (Syntax12.Scn.Fnt) f (Fig. 13. Signals for loading and executing a programming command) s
177 2352 m (Syntax12m.Scn.Fnt) f (11. Converting expressions into normal form) s
177 2269 m (Syntax12.Scn.Fnt) f (Program) s
356 2269 m (GAL) s
454 2269 m (requires) s
625 2269 m (that) s
721 2269 m (expressions) s
955 2269 m (defining) s
1128 2269 m (the) s
1210 2269 m (output) s
1358 2269 m (variables) s
1538 2269 m (be) s
1604 2269 m (in) s
1661 2269 m (disjunctive) s
1878 2269 m (normal) s
2034 2269 m (form) s
177 2209 m (\(DNF\).) s
323 2209 m (In) s
379 2209 m (order) s
497 2209 m (to) s
554 2209 m (remove) s
711 2209 m (this) s
797 2209 m (restriction,) s
1012 2209 m (a) s
1052 2209 m (suitable) s
1215 2209 m (preprocessor) s
1469 2209 m (is) s
1515 2209 m (needed) s
1669 2209 m (which) s
1800 2209 m (converts) s
1971 2209 m (arbitrary) s
177 2149 m (expressions) s
407 2149 m (into) s
499 2149 m (their) s
603 2149 m (equivalent) s
812 2149 m (normal) s
965 2149 m (form.) s
1085 2149 m (This) s
1178 2149 m (is) s
1224 2149 m (the) s
1302 2149 m (purpose) s
1470 2149 m (of) s
1525 2149 m (module) s
1687 2149 m (DNF) s
1789 2149 m (and) s
1877 2149 m (its) s
1937 2149 m (procedure) s
177 2089 m (Syntax12i.Scn.Fnt) f (Convert.) s
177 2006 m (Syntax12.Scn.Fnt) f (This) s
272 2006 m (command) s
483 2006 m (calls) s
582 2006 m (procedure) s
790 2006 m (Syntax12i.Scn.Fnt) f (list,) s
872 2006 m (Syntax12.Scn.Fnt) f (which) s
1005 2006 m (in) s
1061 2006 m (turn) s
1160 2006 m (calls) s
1259 2006 m (procedure) s
1467 2006 m (Syntax12i.Scn.Fnt) f (R\(s\)) s
1558 2006 m (Syntax12.Scn.Fnt) f (-) s
1604 2006 m (via) s
1674 2006 m (Syntax12i.Scn.Fnt) f (elem) s
1776 2006 m (Syntax12.Scn.Fnt) f (-) s
1822 2006 m (for) s
1894 2006 m (each) s
1999 2006 m (output) s
177 1946 m (variable) s
333 1946 m (Syntax12i.Scn.Fnt) f (v.) s
376 1946 m (s) s
405 1946 m (Syntax12.Scn.Fnt) f (is) s
447 1946 m (the) s
521 1946 m (root) s
612 1946 m (of) s
663 1946 m (the) s
737 1946 m (expression) s
946 1946 m (tree) s
1031 1946 m (defining) s
1196 1946 m (v,) s
1238 1946 m (if) s
1276 1946 m (a) s
1311 1946 m (possible) s
1474 1946 m (initial) s
1591 1946 m (inverter) s
1744 1946 m (and/or) s
1886 1946 m (a) s
1920 1946 m (register) s
2068 1946 m (are) s
177 1886 m (ignored. R then calls upon procedures P and Q, which perform the actual conversions on the tree.) s
177 1803 m (The) s
260 1803 m (recursive) s
437 1803 m (procedure) s
640 1803 m (P) s
677 1803 m (serves) s
801 1803 m (to) s
854 1803 m (remove) s
1007 1803 m (multiplexers) s
1251 1803 m (and) s
1335 1803 m (Xor-gates) s
1533 1803 m (by) s
1589 1803 m (replacing) s
1771 1803 m (them) s
1884 1803 m (by) s
1940 1803 m (And-) s
2055 1803 m (and) s
177 1743 m (Or-gates,) s
372 1743 m (and) s
459 1743 m (to) s
514 1743 m (remove) s
669 1743 m (inversions) s
870 1743 m (as) s
925 1743 m (far) s
991 1743 m (as) s
1045 1743 m (possible.) s
1221 1743 m (P) s
1259 1743 m (has) s
1338 1743 m (as) s
1392 1743 m (parameters) s
1616 1743 m (the) s
1692 1743 m (structure) s
1873 1743 m (to) s
1927 1743 m (which) s
2056 1743 m (it) s
2097 1743 m (is) s
177 1683 m (applied,) s
340 1683 m (and) s
427 1683 m (the) s
504 1683 m (Boolean) s
672 1683 m (Syntax12i.Scn.Fnt) f (inv) s
742 1683 m (Syntax12.Scn.Fnt) f (indicating) s
941 1683 m (whether) s
1112 1683 m (the) s
1189 1683 m (true) s
1280 1683 m (value) s
1392 1683 m (or) s
1447 1683 m (its) s
1505 1683 m (inversion) s
1688 1683 m (is) s
1732 1683 m (to) s
1786 1683 m (be) s
1847 1683 m (generated.) s
2057 1683 m (The) s
177 1623 m (different) s
349 1623 m (cases) s
458 1623 m (handled) s
623 1623 m (by) s
679 1623 m (P) s
715 1623 m (are) s
786 1623 m (best) s
876 1623 m (represented) s
1108 1623 m (by) s
1164 1623 m (recursive) s
1340 1623 m (equivalences.) s
1599 1623 m (The) s
1681 1623 m (reader) s
1812 1623 m (is) s
1854 1623 m (referred) s
2013 1623 m (to) s
2065 1623 m (the) s
177 1563 m (program listing at the end of this text. We note that the data structure is modified in situ.) s
306 1480 m (P\(~x, F\)) s
672 1480 m (->) s
766 1480 m (P\(x, T\)) s
306 1420 m (P\(~x, T\)) s
672 1420 m (->) s
766 1420 m (P\(x, F\)) s
306 1360 m (P\(x*y, F\)) s
672 1360 m (->) s
766 1360 m (P\(x, F\) * P\(y, F\)) s
306 1300 m (P\(x*y, T\)) s
672 1300 m (->) s
766 1300 m (P\(x, T\) + P\(y, T\)) s
1333 1300 m (de Morgan) s
306 1240 m (P\(x+y, F\)) s
672 1240 m (->) s
766 1240 m (P\(x, F\) + P\(y, F\)) s
306 1180 m (P\(x+y, T\)) s
672 1180 m (->) s
766 1180 m (P\(x, T\) * P\(y, T\)) s
1333 1180 m (de Morgan) s
306 1120 m (P\(x-y, F\)) s
672 1120 m (->) s
766 1120 m (P\(x, F\) * P\(y, T\) + P\(x, T\) * P\(y, F\)) s
306 1060 m (P\(x-y, T\)) s
672 1060 m (->) s
766 1060 m (P\(x, F\) * P\(y, F\) + P\(x, T\) * P\(y, T\)) s
306 1000 m (P\(MUX\(s: x, y\), F\)) s
672 1000 m (->) s
766 1000 m (P\(s, T\) * P\(x, F\) + P\(s, F\) * P\(y, F\)) s
306 940 m (P\(MUX\(s: x, y\), T\)) s
672 940 m (->) s
766 940 m (P\(s, T\) * P\(x, T\) + P\(s, F\) * P\(y, T\)) s
306 880 m (P\(v, F\)) s
672 880 m (->) s
766 880 m (v) s
306 820 m (P\(v, T\)) s
672 820 m (->) s
766 820 m (~v) s
177 737 m (The) s
261 737 m (recursive) s
439 737 m (procedure) s
643 737 m (Q) s
692 737 m (performs) s
876 737 m (the) s
952 737 m (actual) s
1079 737 m (expansions) s
1300 737 m (necessary) s
1490 737 m (to) s
1544 737 m (obtain) s
1679 737 m (normal) s
1830 737 m (forms.) s
1964 737 m (For) s
2039 737 m (each) s
177 677 m (node) s
285 677 m (representing) s
528 677 m (an) s
587 677 m (And-) s
701 677 m (or) s
753 677 m (an) s
812 677 m (Or-gate,) s
986 677 m (it) s
1024 677 m (first) s
1107 677 m (applies) s
1249 677 m (itself) s
1349 677 m (to) s
1400 677 m (the) s
1473 677 m (two) s
1557 677 m (operands,) s
1751 677 m (and) s
1834 677 m (then) s
1932 677 m (recognizes) s
177 617 m (the following patterns and performs structural transformations:) s
306 534 m (x + \(y + z\)) s
565 534 m (->) s
695 534 m (\(x + y\) + z) s
306 474 m (x * \(y * z\)) s
565 474 m (->) s
695 474 m (\(x * y\) * z) s
306 414 m (\(x + y\) * z) s
565 414 m (->) s
695 414 m (x * z + y * z) s
306 354 m (x * \(y + z\)) s
565 354 m (->) s
695 354 m (x * y + x * z) s
1 p
%%Page: 0 23
2085 3224 m (Syntax10.Scn.Fnt) f (22) s
177 3119 m (Syntax12.Scn.Fnt) f (Concluding,) s
415 3119 m (we) s
484 3119 m (show) s
598 3119 m (the) s
673 3119 m (three) s
784 3119 m (examples) s
973 3119 m (of) s
1025 3119 m (circuit) s
1153 3119 m (specifications) s
1414 3119 m (from) s
1519 3119 m (the) s
1593 3119 m (preceding) s
1788 3119 m (section) s
1933 3119 m (again.) s
2057 3119 m (The) s
177 3059 m (possibility) s
373 3059 m (to) s
425 3059 m (express) s
574 3059 m (them) s
687 3059 m (in) s
737 3059 m (terms) s
857 3059 m (of) s
908 3059 m (expressions) s
1134 3059 m (not) s
1210 3059 m (in) s
1259 3059 m (normal) s
1407 3059 m (form) s
1511 3059 m (improves) s
1693 3059 m (readability) s
1897 3059 m (significantly.) s
177 2999 m (However,) s
363 2999 m (the) s
436 2999 m (user) s
526 2999 m (must) s
633 2999 m (keep) s
733 2999 m (in) s
781 2999 m (mind) s
892 2999 m (that) s
978 2999 m (the) s
1050 2999 m (expansion) s
1250 2999 m (process) s
1399 2999 m (brings) s
1524 2999 m (them) s
1635 2999 m ("back") s
1761 2999 m (into) s
1847 2999 m (their) s
1945 2999 m (expanded) s
177 2939 m (form.) s
296 2939 m (Using) s
418 2939 m (a) s
456 2939 m (PLD,) s
557 2939 m (one) s
644 2939 m (must) s
756 2939 m (be) s
818 2939 m (aware) s
946 2939 m (that) s
1037 2939 m (the) s
1114 2939 m (limits) s
1234 2939 m (in) s
1287 2939 m (the) s
1364 2939 m (number) s
1530 2939 m (of) s
1584 2939 m (product) s
1746 2939 m (terms) s
1869 2939 m (may) s
1964 2939 m (easily) s
2080 2939 m (be) s
177 2879 m (reached when the necessary conversions are hidden.) s
283 2804 m (Syntax10.Scn.Fnt) f (MODULE Adder;) s
353 2755 m (IN x, y: [4] BIT; ci: BIT;) s
353 2706 m (OUT s, c: [4] BIT;) s
353 2657 m (POS x.0=3; x.1=4; x.2=5; x.3=6; y.0=7; y.1=9; y.2=10; y.3=11; ci=12;) s
424 2608 m (s.0=27; s.1=26; s.2=25; s.3=24; c.0=23; c.1=21; c.2=20; c.3=19; ) s
283 2559 m (BEGIN s.0 := x.0 - y.0 - ci; c.0 := x.0*y.0 + \(x.0 - y.0\)*ci;) s
353 2510 m (FOR i := 1 .. 3 DO s.i := x.i - y.i - c[i-1]; c.i := x.i*y.i + \(x.i - y.i\) * c[i-1] END) s
283 2461 m (END Adder.) s
283 2389 m (MODULE Barrel;) s
353 2340 m (IN s: [3] BIT;) s
424 2291 m (d: [8] BIT;) s
353 2242 m (OUT q: [8] BIT;) s
353 2193 m (POS d.0=3; d.1=4; d.2=5; d.3=6; d.4=7; d.5=9; d.6=10; d.7=11;) s
424 2144 m (s.0 = 12; s.1=13; s.2=16;) s
424 2095 m (q.0=27; q.1=26; q.2=25; q.3=24; q.4=23; q.5=21; q.6=20; q.7=19; ) s
283 2046 m (BEGIN) s
353 1997 m (FOR i := 0 .. 7 DO) s
424 1948 m (q.i := MUX\(s.2:) s
518 1899 m (MUX\(s.1:) s
565 1850 m (MUX\(s.0: d[i], d[\(i+1\) MOD 8]\),) s
565 1801 m (MUX\(s.0: d[\(i+2\) MOD 8], d[\(i+3\) MOD 8]\)\),) s
518 1752 m (MUX\(s.1:) s
565 1703 m (MUX\(s.0: d[\(i+4\) MOD 8], d[\(i+5\) MOD 8]\),) s
565 1654 m (MUX\(s.0: d[\(i+6\) MOD 8], d[\(i+7\) MOD 8]\)\)\)) s
353 1605 m (END) s
283 1556 m (END Barrel.) s
283 1484 m (MODULE Counter;) s
353 1435 m (IN ci: BIT;) s
353 1386 m (OUT q: [8] BIT;) s
353 1337 m (VAR c: [8] BIT;) s
353 1288 m (POS ci=3; q.0=27; q.1=26; q.2=25; q.3=24; q.4=23; q.5=21; q.6=20; q.7=19; ) s
283 1239 m (BEGIN q.0 := REG\(q.0 - ci\); c.0 := q.0 * ci;) s
353 1190 m (FOR i := 1 .. 7 DO q.i := REG\(q.i - c[i-1]\); c.i := q.i * c[i-1] END) s
283 1141 m (END Counter.) s
177 1024 m (Syntax12m.Scn.Fnt) f (12. References) s
177 941 m (Syntax12.Scn.Fnt) f (1.) s
259 941 m (N. Wirth. ) s
(Syntax12i.Scn.Fnt) f (Digital Circuit Design.) s
(Syntax12.Scn.Fnt) f ( Springer-Verlag, 1995.) s
177 858 m (2.) s
259 858 m (Lola: An object-oriented logic description language,) s
259 798 m (Syntax12i.Scn.Fnt) f (Tech. Report 215,) s
(Syntax12.Scn.Fnt) f ( Dept. Informatik, ETH Z\205rich, May 1994.) s
177 715 m (3.) s
259 715 m (S. Ludwig. An Editor for the CLi6000 FPGA, and its implementation.) s
259 655 m (Syntax12i.Scn.Fnt) f (Tech. Report 198,) s
(Syntax12.Scn.Fnt) f ( Dept. Informatik, ETH Z\205rich, July 1993.) s
177 572 m (4.) s
259 572 m (S. Ludwig. CL-Editor user manual.) s
259 512 m (Syntax12i.Scn.Fnt) f (Tech. Report 215,) s
(Syntax12.Scn.Fnt) f ( Dept. Informatik, ETH Z\205rich, May 1994.) s
177 429 m (5.) s
259 429 m (S. Gehring. CLChecker user manual.) s
259 369 m (Syntax12i.Scn.Fnt) f (Tech. Report 215,) s
(Syntax12.Scn.Fnt) f ( Dept. Informatik, ETH Z\205rich, May 1994.) s
1 p
%%Page: 0 24
2085 3224 m (Syntax10.Scn.Fnt) f (23) s
177 3119 m (Syntax12.Scn.Fnt) f (6.) s
259 3119 m (M. Reiser and N. Wirth. ) s
(Syntax12i.Scn.Fnt) f (Programming in Oberon.) s
(Syntax12.Scn.Fnt) f ( Addison-Wesley, 1992.) s
177 3036 m (7.) s
259 3036 m (The GAL handbook. Lattice Corp. 1994.) s
1 p
%%Page: 0 25
2085 3224 m (Syntax10.Scn.Fnt) f (24) s
177 3079 m (Syntax12m.Scn.Fnt) f (13. Program Listings) s
177 2994 m (Syntax10.Scn.Fnt) f (MODULE LSB;   \(*Lola System Base   NW 25.2.95 / 15.4.95*\)) s
224 2954 m (IMPORT Texts, Oberon, MenuViewers, TextFrames;) s
224 2874 m (CONST NameLen* = 7;) s
271 2834 m (black* = 5; grey* = 4;  \(*node values used in loop search*\)) s
271 2794 m (\(*function codes*\)) s
271 2754 m (bit* = 0; ts* = 1; oc* = 2; integer* = 3; array* = 4; record* = 5; buf* = 7; not* = 8; and* = 9;) s
271 2714 m (or* = 10; xor* = 11; mux* = 12; mux1* = 13; reg* = 14; reg1* = 15; latch* = 16; sr* = 17; tsg* = 18; link* = 19;) s
271 2634 m (\(*class codes*\) var* = 0; in* = 1; out* = 2; io* = 3;) s
224 2554 m (TYPE Name* = ARRAY NameLen OF CHAR;) s
271 2514 m (Signal* = POINTER TO SignalDesc;) s
271 2474 m (Variable* = POINTER TO VarDesc;) s
271 2394 m (\(*fct field: bits 0-4: function code, bits 5-7: class code;) s
318 2354 m (val field: not used; u,v fields: position data*\)) s
271 2274 m (SignalDesc* = RECORD) s
318 2234 m (x*, y*: Signal;) s
318 2194 m (fct*, val*, u*, v*: SHORTINT) s
271 2154 m (END ;) s
271 2074 m (VarDesc* = RECORD \(SignalDesc\)) s
318 2034 m (name*: Name;) s
318 1994 m (class*: SHORTINT;) s
318 1954 m (next*, dsc*: Variable) s
271 1914 m (END ;) s
224 1834 m (VAR org*, zero*, one*, clk*: Variable;) s
271 1794 m (Log*: Texts.Text;) s
271 1754 m (change: BOOLEAN;) s
271 1714 m (code: ARRAY 24 OF CHAR;) s
271 1674 m (W: Texts.Writer;) s
224 1594 m (PROCEDURE Init*;) s
224 1554 m (BEGIN org := NIL; clk.x := NIL; Oberon.Collect\(0\)) s
224 1514 m (END Init;) s
224 1434 m (PROCEDURE WriteName*\(VAR W: Texts.Writer; v: Variable\);) s
224 1394 m (BEGIN) s
271 1354 m (IF v.y # NIL THEN WriteName\(W, v.y\(Variable\)\); Texts.Write\(W, "."\) END ;) s
271 1314 m (Texts.WriteString\(W, v.name\)) s
224 1274 m (END WriteName;) s
224 1194 m (PROCEDURE This*\(org: Variable; VAR name: ARRAY OF CHAR\): Variable;) s
271 1154 m (VAR v: Variable; i, j: INTEGER;) s
318 1114 m (id: ARRAY 16 OF CHAR;) s
224 1074 m (BEGIN v := org.dsc; i := 0;) s
271 1034 m (LOOP j := 0;) s
318 994 m (WHILE \(name[i] > " "\) & \(name[i] # "."\) DO id[j] := name[i]; INC\(j\); INC\(i\) END ;) s
318 954 m (id[j] := 0X;) s
318 914 m (WHILE \(v # NIL\) & \(v.name # id\) DO v := v.next END ;) s
318 874 m (IF name[i] = "." THEN) s
365 834 m (IF \(v # NIL\) & \(v.fct IN {array, record}\) THEN v := v.dsc; INC\(i\)) s
365 794 m (ELSE v := NIL; EXIT) s
365 754 m (END) s
318 714 m (ELSE EXIT) s
318 674 m (END) s
271 634 m (END ;) s
271 594 m (RETURN v) s
224 554 m (END This;) s
224 474 m (PROCEDURE New*\(f: SHORTINT; x, y: Signal\): Signal;) s
271 434 m (VAR z: Signal;) s
224 394 m (BEGIN NEW\(z\); z.fct := f; z.x := x; z.y := y; RETURN z) s
224 354 m (END New;) s
224 274 m (PROCEDURE NewVar*\(f, val: SHORTINT; x, y: Signal;) s
318 234 m (next: Variable; VAR name: ARRAY OF CHAR\): Variable;) s
271 194 m (VAR v: Variable;) s
1 p
%%Page: 0 26
2085 3224 m (Syntax10.Scn.Fnt) f (25) s
224 3134 m (BEGIN NEW\(v\); v.fct := f; v.val := val; v.x := x; v.y := y;) s
271 3094 m (v.next := next; COPY\(name, v.name\); RETURN v) s
224 3054 m (END NewVar;) s
224 2974 m (\(*----------------- Simplify --------------------*\)) s
224 2894 m (PROCEDURE traverse\(VAR s: Signal\);) s
224 2854 m (BEGIN) s
271 2814 m (IF s # NIL THEN) s
318 2774 m (IF s IS Variable THEN) s
365 2734 m (IF s.x = zero THEN s := zero) s
365 2694 m (ELSIF s.x = one THEN s := one) s
365 2654 m (END) s
318 2614 m (ELSE traverse\(s.x\); traverse\(s.y\);) s
365 2574 m (IF s.fct = not THEN) s
412 2534 m (IF s.y.fct = not THEN s := s.y.y) s
412 2494 m (ELSIF s.y = zero THEN s := one) s
412 2454 m (ELSIF s.y = one THEN s := zero) s
412 2414 m (END) s
365 2374 m (ELSIF s.fct = or THEN) s
412 2334 m (IF s.x = one THEN s := one) s
412 2294 m (ELSIF s.x = zero THEN s := s.y) s
412 2254 m (ELSIF s.y = one THEN s := one) s
412 2214 m (ELSIF s.y = zero THEN s := s.x) s
412 2174 m (END) s
365 2134 m (ELSIF s.fct = xor THEN) s
412 2094 m (IF s.x = zero THEN s := s.y) s
412 2054 m (ELSIF s.x = one THEN) s
459 2014 m (IF s.y.fct = not THEN s := s.y.y ELSE s.fct := not; s.x := NIL END) s
412 1974 m (ELSIF s.y = zero THEN s := s.x) s
412 1934 m (ELSIF s.y = one THEN) s
459 1894 m (IF s.x.fct = not THEN s := s.x.y ELSE s.fct := not; s.y := s.x; s.x := NIL END) s
412 1854 m (END) s
365 1814 m (ELSIF s.fct = and THEN) s
412 1774 m (IF s.x = zero THEN s := zero) s
412 1734 m (ELSIF s.x = one THEN s := s.y) s
412 1694 m (ELSIF s.y = zero THEN s := zero) s
412 1654 m (ELSIF s.y = one THEN s := s.x) s
412 1614 m (END) s
365 1574 m (ELSIF s.fct = mux THEN) s
412 1534 m (IF s.x = zero THEN s := s.y.x ELSIF s.x = one THEN s := s.y.y END) s
365 1494 m (ELSIF s.fct = reg THEN) s
412 1454 m (IF \(s.x = zero\) OR \(s.x = one\) OR \(s.y.x = zero\) THEN) s
459 1414 m (Texts.WriteString\(W, " dead reg"\); Texts.WriteLn\(W\)) s
412 1374 m (END) s
365 1334 m (ELSIF s.fct = latch THEN) s
412 1294 m (IF s.x = zero THEN Texts.WriteString\(W, " dead latch"\); Texts.WriteLn\(W\)) s
412 1254 m (ELSIF s.x = one THEN s := s.y) s
412 1214 m (END) s
365 1174 m (ELSIF s.fct = sr THEN) s
412 1134 m (IF \(s.x = zero\) OR \(s.y = zero\) THEN Texts.WriteString\(W, " dead SR"\); Texts.WriteLn\(W\)) s
412 1094 m (END) s
365 1054 m (ELSIF s.fct = tsg THEN) s
412 1014 m (IF \(s.x = zero\) OR \(s.x = one\) THEN) s
459 974 m (Texts.WriteString\(W, " dead tri-state"\); Texts.WriteLn\(W\)) s
412 934 m (END) s
365 894 m (END) s
318 854 m (END) s
271 814 m (END) s
224 774 m (END traverse;) s
224 694 m (PROCEDURE simp\(v: Variable\);) s
224 654 m (BEGIN) s
271 614 m (IF v.fct IN {array, record} THEN v := v.dsc;) s
318 574 m (WHILE v # NIL DO simp\(v\); v := v.next END) s
271 534 m (ELSIF \(v.x # zero\) & \(v.x # one\) THEN) s
318 494 m (IF v.fct = link THEN traverse\(v.x\); traverse\(v.y\)) s
318 454 m (ELSE traverse\(v.x\);) s
365 414 m (IF \(v.x = zero\) OR \(v.x = one\) THEN change := TRUE END) s
318 374 m (END) s
271 334 m (END) s
224 294 m (END simp;) s
224 214 m (PROCEDURE Simplify*\(org: Variable\);) s
1 p
%%Page: 0 27
2085 3224 m (Syntax10.Scn.Fnt) f (26) s
271 3134 m (VAR n: INTEGER;) s
224 3094 m (BEGIN n := 0;) s
271 3054 m (REPEAT INC\(n\); change := FALSE; simp\(org\) UNTIL ~change;) s
271 3014 m (Texts.Append\(Log, W.buf\)) s
224 2974 m (END Simplify;) s
224 2894 m (\(*----------------- Find Loops --------------------*\)) s
224 2814 m (PROCEDURE loop\(s: Signal\);) s
224 2774 m (BEGIN) s
271 2734 m (IF s # NIL THEN) s
318 2694 m (IF s IS Variable THEN) s
365 2654 m (IF s.val = black THEN s.val := grey; loop\(s.x\); s.val := 0) s
365 2614 m (ELSIF s.val = grey THEN) s
412 2574 m (WriteName\(W, s\(Variable\)\); Texts.WriteString\(W, " in loop"\); Texts.WriteLn\(W\);) s
412 2534 m (Texts.Append\(Log, W.buf\)) s
365 2494 m (END) s
318 2454 m (ELSIF s.fct # reg THEN) s
365 2414 m (loop\(s.x\);) s
365 2374 m (IF s.fct # tsg THEN loop\(s.y\) END) s
318 2334 m (END) s
271 2294 m (END) s
224 2254 m (END loop;) s
224 2174 m (PROCEDURE Loops*\(v: Variable\);) s
224 2134 m (BEGIN) s
271 2094 m (IF v.fct IN {array, record} THEN v := v.dsc;) s
318 2054 m (WHILE v # NIL DO Loops\(v\); v := v.next END) s
271 2014 m (ELSIF v.val = black THEN loop\(v\)) s
271 1974 m (END) s
224 1934 m (END Loops;) s
224 1854 m (\(*----------------- Show --------------------*\)) s
224 1774 m (PROCEDURE ShowTree\(x: Signal\);) s
224 1734 m (BEGIN) s
271 1694 m (IF x # NIL THEN) s
318 1654 m (IF x IS Variable THEN WriteName\(W, x\(Variable\)\)) s
318 1614 m (ELSE Texts.Write\(W, "\("\);) s
365 1574 m (ShowTree\(x.x\); Texts.Write\(W, code[x.fct]\); ShowTree\(x.y\); Texts.Write\(W, "\)"\)) s
318 1534 m (END) s
271 1494 m (END) s
224 1454 m (END ShowTree;) s
224 1374 m (PROCEDURE Show*\(x: Variable; lev: INTEGER\);) s
271 1334 m (VAR typ: SHORTINT;) s
224 1294 m (BEGIN typ := x.fct;) s
271 1254 m (IF typ = record THEN) s
318 1214 m (x := x.dsc;) s
318 1174 m (WHILE x # NIL DO Show\(x, lev+1\); x := x.next END ;) s
318 1134 m (Texts.Append\(Log, W.buf\)) s
271 1094 m (ELSIF typ = array THEN) s
318 1054 m (x := x.dsc;) s
318 1014 m (WHILE x # NIL DO Show\(x, lev\); x := x.next END) s
271 974 m (ELSIF typ # integer THEN) s
318 934 m (WriteName\(W, x\);) s
318 894 m (IF \(lev = 0\) & \(x.class # var\) THEN Texts.Write\(W, "*"\) END ;) s
318 854 m (IF x.x # NIL THEN Texts.WriteString\(W, " := "\); ShowTree\(x.x\) END ;) s
318 814 m (Texts.WriteLn\(W\); Texts.Append\(Log, W.buf\)) s
271 774 m (END) s
224 734 m (END Show;) s
224 654 m (\(*----------------- Open --------------------*\)) s
224 574 m (PROCEDURE OpenLog*;) s
271 534 m (VAR V: MenuViewers.Viewer; X, Y: INTEGER;) s
224 494 m (BEGIN Oberon.AllocateSystemViewer\(Oberon.Mouse.X, X, Y\);) s
271 454 m (V := MenuViewers.New \() s
365 414 m (TextFrames.NewMenu\("Lola.Log", ) s
412 374 m ("System.Close  System.Copy  System.Grow  Edit.Search  Edit.Parcs  Edit.Store "\),) s
365 334 m (TextFrames.NewText\(Log, 0\), TextFrames.menuH, X, Y\)) s
224 294 m (END OpenLog;) s
224 214 m (PROCEDURE ClearLog*;) s
1 p
%%Page: 0 28
2085 3224 m (Syntax10.Scn.Fnt) f (27) s
224 3134 m (BEGIN Texts.Delete\(Log, 0, Log.len\)) s
224 3094 m (END ClearLog;) s
224 3014 m (PROCEDURE Assign*\(v: Variable\);) s
224 2974 m (BEGIN org := v) s
224 2934 m (END Assign;) s
177 2854 m (BEGIN Texts.OpenWriter\(W\); Log := TextFrames.Text\(""\); OpenLog;) s
224 2814 m (NEW\(zero\); zero.name := "'0"; zero.fct := bit; zero.val := 0;) s
224 2774 m (NEW\(one\); one.name := "'1"; one.fct := bit; one.val := 1;) s
224 2734 m (NEW\(clk\); clk.name := "CK"; clk.fct := bit;) s
224 2694 m (code := "BTONAR !~*+-:,^:$%|,") s
177 2654 m (END LSB.) s
1 p
%%Page: 0 29
2085 3224 m (Syntax10.Scn.Fnt) f (28) s
177 3111 m (MODULE Lola;   \(*NW 2.2.95 / 13.4.95*\)) s
224 3071 m (IMPORT Texts, Oberon, Viewers, MenuViewers, TextFrames, LSB, LSC;) s
224 2991 m (VAR scope: LSB.Variable; clk: LSB.Signal;) s
271 2951 m (null: ARRAY 2 OF CHAR;) s
271 2911 m (W: Texts.Writer;) s
224 2831 m (PROCEDURE V\(x: LSC.Item\): INTEGER;) s
271 2791 m (VAR y: INTEGER; v: LSB.Variable; id: LSB.Name;) s
224 2751 m (BEGIN) s
271 2711 m (IF x IS LSC.Object THEN) s
318 2671 m (v := scope; COPY\(x\(LSC.Object\).name, id\);) s
318 2631 m (WHILE v.name # id DO v := v.next END ;) s
318 2591 m (y := v.val) s
271 2551 m (ELSE ;) s
318 2511 m (CASE x.tag OF) s
365 2471 m (  LSC.lit: y := x.val) s
365 2431 m (| LSC.add: y := V\(x.a\) + V\(x.b\)) s
365 2391 m (| LSC.sub: y := V\(x.a\) - V\(x.b\)) s
365 2351 m (| LSC.neg: y := -V\(x.b\)) s
365 2311 m (| LSC.mul: y := V\(x.a\) * V\(x.b\)) s
365 2271 m (| LSC.div: y := V\(x.a\) DIV V\(x.b\)) s
365 2231 m (| LSC.mod: y := V\(x.a\) MOD V\(x.b\)) s
365 2191 m (| LSC.pwr: y := SHORT\(ASH\(1, V\(x.b\)\)\)) s
318 2151 m (END) s
271 2111 m (END ;) s
271 2071 m (RETURN y) s
224 2031 m (END V;) s
224 1951 m (PROCEDURE Index\(n: INTEGER; VAR name: ARRAY OF CHAR\);) s
271 1911 m (VAR i, j: INTEGER;) s
318 1871 m (d: ARRAY 4 OF INTEGER;) s
224 1831 m (BEGIN i := 0; j := 0;) s
271 1791 m (REPEAT d[i] := n MOD 10; INC\(i\); n := n DIV 10 UNTIL n = 0;) s
271 1751 m (REPEAT DEC\(i\); name[j] := CHR\(d[i] + 30H\); INC\(j\) UNTIL i = 0;) s
271 1711 m (name[j] := 0X) s
224 1671 m (END Index;) s
224 1591 m (PROCEDURE NewVar\(typ: LSC.Item; mode: INTEGER; VAR id: ARRAY OF CHAR; link, anc: LSB.Variable\):) s
177 1551 m (LSB.Variable;) s
271 1511 m (VAR form, len: INTEGER;) s
318 1471 m (fp: LSC.Object; ap: LSC.Item;) s
318 1431 m (v, el, x, y, tempscope: LSB.Variable;) s
224 1391 m (BEGIN form := typ.tag;) s
271 1351 m (v := LSB.NewVar\(SHORT\(form\), LSB.black, NIL, anc, link, id\); v.class := SHORT\(mode-LSC.var\);) s
271 1311 m (IF form = LSB.array THEN) s
318 1271 m (len := V\(typ.b\); el := NIL;) s
318 1231 m (WHILE len > 0 DO DEC\(len\); el := NewVar\(typ.a, mode, null, el, v\); Index\(len, el.name\) END ;) s
318 1191 m (v.dsc := el) s
271 1151 m (ELSIF form = LSB.record THEN) s
318 1111 m (COPY\(id, v.name\); el := NIL;) s
318 1071 m (ap := typ.b; fp := typ.a.a\(LSC.Object\);) s
318 1031 m (WHILE ap # NIL DO ) s
365 991 m (el := LSB.NewVar\(LSB.integer, SHORT\(V\(ap.a\)\), NIL, v, el, fp.name\); fp := fp.next; ap := ap.b) s
318 951 m (END ;) s
318 911 m (tempscope := scope; scope := el;) s
318 871 m (WHILE fp.tag = LSC.const DO) s
365 831 m (el := LSB.NewVar\(LSB.integer, SHORT\(V\(fp.b\)\), NIL, v, el, fp.name\); scope := el; fp := fp.next) s
318 791 m (END ;) s
318 751 m (WHILE fp # LSC.guard DO el := NewVar\(fp.a, fp.tag, fp.name, el, v\); fp := fp.next END ;) s
318 711 m (y := NIL;  \(*invert list*\)) s
318 671 m (WHILE el # NIL DO x := el; el := x.next; x.next := y; y := x END ;) s
318 631 m (scope := tempscope; v.dsc := y) s
271 591 m (END ;) s
271 551 m (RETURN v) s
224 511 m (END NewVar;) s
224 431 m (PROCEDURE E\(x: LSC.Item\): LSB.Signal;) s
271 391 m (VAR y: LSB.Signal; v: LSB.Variable;) s
318 351 m (tag, k: INTEGER; id: LSB.Name;) s
224 311 m (BEGIN tag := x.tag;) s
271 271 m (IF x IS LSC.Object THEN) s
318 231 m (v := scope; COPY\(x\(LSC.Object\).name, id\);) s
318 191 m (WHILE v.name # id DO v := v.next END ;) s
1 p
%%Page: 0 30
2085 3224 m (Syntax10.Scn.Fnt) f (29) s
318 3134 m (y := v) s
271 3094 m (ELSE) s
318 3054 m (CASE x.tag OF) s
318 3014 m (  LSC.asel: y := E\(x.a\); v := y\(LSB.Variable\).dsc; k := V\(x.b\);) s
365 2974 m (WHILE \(k > 0\) & \(v # NIL\) DO v := v.next; DEC\(k\) END ;) s
365 2934 m (IF \(v = NIL\) OR \(k < 0\) THEN) s
412 2894 m (v := y\(LSB.Variable\); Texts.WriteString\(W, "index off range in "\);) s
412 2854 m (LSB.WriteName\(W, v\); Texts.WriteLn\(W\); Texts.Append\(LSB.Log, W.buf\); v := v.dsc) s
365 2814 m (END ;) s
365 2774 m (y := v) s
318 2734 m (| LSC.rsel: y := E\(x.a\); v := y\(LSB.Variable\).dsc; COPY\(x.b\(LSC.Object\).name, id\);) s
365 2694 m (WHILE v.name # id DO v := v.next END ;) s
365 2654 m (y := v) s
318 2614 m (| LSB.and, LSB.or, LSB.xor, LSB.mux, LSB.mux1, LSB.reg, LSB.reg1, LSB.latch, LSB.sr, LSB.tsg:) s
365 2574 m (y := LSB.New\(SHORT\(x.tag\), E\(x.a\), E\(x.b\)\)) s
318 2534 m (| LSB.not, LSB.buf: y := LSB.New\(SHORT\(x.tag\), NIL, E\(x.b\)\)) s
318 2494 m (| LSC.lit: IF x.val = 0 THEN y := LSB.zero ELSIF x.val = 1 THEN y := LSB.one ELSE y := clk END) s
318 2454 m (END) s
271 2414 m (END ;) s
271 2374 m (RETURN y) s
224 2334 m (END E;) s
224 2254 m (PROCEDURE Link\(fp: LSB.Variable; ap: LSB.Signal\);) s
271 2214 m (VAR fel, ael: LSB.Variable;) s
224 2174 m (BEGIN) s
271 2134 m (IF fp.fct = LSB.array THEN) s
318 2094 m (fel := fp.dsc; ael := ap\(LSB.Variable\).dsc;) s
318 2054 m (WHILE \(fel # NIL\) & \(ael # NIL\) DO Link\(fel, ael\); ael := ael.next; fel := fel.next END ;) s
318 2014 m (IF \(fel # NIL\) OR \(ael # NIL\) THEN) s
365 1974 m (Texts.WriteString\(W, "array mismatch "\); LSB.WriteName\(W, fp\);) s
365 1934 m (Texts.WriteLn\(W\); Texts.Append\(LSB.Log, W.buf\)) s
318 1894 m (END) s
271 1854 m (ELSE fp.x := ap) s
271 1814 m (END) s
224 1774 m (END Link;) s
224 1694 m (PROCEDURE S\(s: LSC.Item\);) s
271 1654 m (VAR tag, lim, u, v: INTEGER;) s
318 1614 m (x, cond, cv, ap: LSC.Item;) s
318 1574 m (y: LSB.Signal;) s
318 1534 m (tempscope, fp: LSB.Variable;) s
224 1494 m (BEGIN) s
271 1454 m (WHILE s # NIL DO) s
318 1414 m (x := s.a; s := s.b; tag := x.tag;) s
318 1374 m (CASE tag OF) s
318 1334 m (  LSC.assign: y := E\(x.a\);) s
365 1294 m (IF y.x # NIL THEN) s
412 1254 m (Texts.WriteString\(W, "mult ass "\); LSB.WriteName\(W, y\(LSB.Variable\)\);) s
412 1214 m (Texts.WriteLn\(W\); Texts.Append\(LSB.Log, W.buf\)) s
365 1174 m (END ;) s
365 1134 m (y.x := E\(x.b\)) s
318 1094 m (| LSC.tsass, LSC.ocass: y := E\(x.a\); y.x := LSB.New\(LSB.link, E\(x.b\), y.x\)) s
318 1054 m (| LSC.clkass: clk := E\(x.a\)) s
318 1014 m (| LSC.posass: y := E\(x.a\); y\(LSB.Variable\).u := SHORT\(x.val MOD 100H\);) s
412 974 m (y\(LSB.Variable\).v := SHORT\(x.val DIV 100H\)) s
318 934 m (| LSC.if: cond := x.a; x := x.b;) s
365 894 m (u := V\(cond.a\); v := V\(cond.b\);) s
365 854 m (CASE cond.tag OF) s
365 814 m (| LSC.eql: IF u = v THEN S\(x.a\) ELSE S\(x.b\) END) s
365 774 m (| LSC.neq: IF u # v THEN S\(x.a\) ELSE S\(x.b\) END) s
365 734 m (| LSC.lss: IF u < v THEN S\(x.a\) ELSE S\(x.b\) END) s
365 694 m (| LSC.geq: IF u >= v THEN S\(x.a\) ELSE S\(x.b\) END) s
365 654 m (| LSC.leq: IF u <= v THEN S\(x.a\) ELSE S\(x.b\) END) s
365 614 m (| LSC.gtr: IF u > v THEN S\(x.a\) ELSE S\(x.b\) END) s
365 574 m (END) s
318 534 m (| LSC.for: cv := x.a; x := x.b;) s
365 494 m (scope := LSB.NewVar\(LSB.integer, SHORT\(V\(x.a\)\), NIL, NIL, scope, cv\(LSC.Object\).name\);) s
365 454 m (x := x.b; lim := V\(x.a\);) s
365 414 m (WHILE scope.val <= lim DO S\(x.b\); INC\(scope.val\) END ;) s
365 374 m (scope := scope.next) s
318 334 m (| LSC.call: y := E\(x.a\); fp := y\(LSB.Variable\).dsc; ap := x.b;) s
365 294 m (WHILE fp.fct = LSB.integer DO fp := fp.next END ;) s
365 254 m (WHILE \(ap # NIL\) & \(ap.tag # LSC.type\) DO) s
412 214 m (Link\(fp, E\(ap.a\)\); fp := fp.next; ap := ap.b) s
1 p
%%Page: 0 31
2085 3224 m (Syntax10.Scn.Fnt) f (30) s
365 3134 m (END ;) s
365 3094 m (tempscope := scope; scope := y\(LSB.Variable\).dsc;) s
365 3054 m (S\(ap.b\); scope := tempscope) s
318 3014 m (END) s
271 2974 m (END) s
224 2934 m (END S;) s
224 2854 m (\(* -------------------------------------------------*\)) s
224 2774 m (PROCEDURE Expand*;) s
271 2734 m (VAR obj: LSC.Object;) s
318 2694 m (root, new: LSB.Variable;) s
318 2654 m (y: LSB.Signal;) s
224 2614 m (BEGIN Texts.WriteString\(W, "expanding "\); Texts.WriteString\(W, LSC.globalScope.name\);) s
271 2574 m (Texts.WriteLn\(W\); Texts.Append\(LSB.Log, W.buf\);) s
271 2534 m (obj := LSC.localScope.next; new := NIL;) s
271 2494 m (WHILE \(obj # LSC.guard\) & \(obj.tag = LSC.const\) DO) s
318 2454 m (new := LSB.NewVar\(LSB.integer, SHORT\(V\(obj.b\)\), NIL, NIL, new, obj.name\);) s
318 2414 m (scope := new; obj := obj.next) s
271 2374 m (END ;) s
271 2334 m (WHILE obj # LSC.guard DO) s
318 2294 m (new := NewVar\(obj.a, obj.tag, obj.name, new, NIL\); obj := obj.next) s
271 2254 m (END ;) s
271 2214 m (scope := new; clk := LSB.clk; S\(LSC.body\);) s
271 2174 m (NEW\(root\); root.fct := LSB.record; COPY\(LSC.globalScope.name, root.name\); root.dsc := new;) s
271 2134 m (LSB.Assign\(root\);) s
271 2094 m (LSB.Simplify\(LSB.org\);) s
271 2054 m (LSB.Loops\(LSB.org\)) s
224 2014 m (END Expand;) s
224 1934 m (PROCEDURE Compile*;) s
271 1894 m (VAR beg, end, time: LONGINT;) s
318 1854 m (S: Texts.Scanner; T: Texts.Text; v: Viewers.Viewer;) s
224 1814 m (BEGIN Texts.OpenScanner\(S, Oberon.Par.text, Oberon.Par.pos\); Texts.Scan\(S\);) s
271 1774 m (IF S.class = Texts.Char THEN) s
318 1734 m (IF S.c = "*" THEN) s
365 1694 m (v := Oberon.MarkedViewer\(\);) s
365 1654 m (IF \(v.dsc # NIL\) & \(v.dsc.next IS TextFrames.Frame\) THEN) s
412 1614 m (LSC.Module\(v.dsc.next\(TextFrames.Frame\).text, 0\); Expand) s
365 1574 m (END) s
318 1534 m (ELSIF S.c = "@" THEN) s
365 1494 m (Oberon.GetSelection\(T, beg, end, time\);) s
365 1454 m (IF time >= 0 THEN LSC.Module\(T, beg\); Expand END) s
318 1414 m (END) s
271 1374 m (END) s
224 1334 m (END Compile;) s
224 1254 m (PROCEDURE Show*;) s
224 1214 m (BEGIN) s
271 1174 m (IF LSB.org # NIL THEN LSB.Show\(LSB.org, -1\) END) s
224 1134 m (END Show;) s
177 1054 m (BEGIN Texts.OpenWriter\(W\); Texts.WriteString\(W, "Lola-System NW 15.4.95"\);) s
224 1014 m (Texts.WriteLn\(W\); Texts.Append\(LSB.Log, W.buf\)) s
177 974 m (END Lola.) s
1 p
%%Page: 0 32
2085 3224 m (Syntax10.Scn.Fnt) f (31) s
177 3111 m (MODULE Simulator;  \(*NW 27.12.92 / 15.4.95*\)) s
224 3071 m (IMPORT Texts, Oberon, TextFrames, ParcElems, LSB;) s
224 2991 m (CONST clash = 2; undef = 3;  \(*signal values*\)) s
271 2951 m (BaseTyps = {LSB.bit, LSB.ts, LSB.oc}; Struct = {LSB.array, LSB.record};) s
271 2911 m (Tab = 9X;) s
224 2831 m (VAR rorg: LSB.Signal;  \(*register list*\)) s
271 2791 m (stepno: INTEGER;) s
271 2751 m (sym: ARRAY 4 OF CHAR;) s
271 2711 m (and, or, xor: ARRAY 4, 4 OF SHORTINT;) s
271 2671 m (not: ARRAY 4 OF SHORTINT;) s
271 2631 m (W: Texts.Writer;) s
224 2551 m (PROCEDURE^ assign\(v: LSB.Variable\);) s
224 2471 m (PROCEDURE value\(s: LSB.Signal\): SHORTINT;) s
271 2431 m (VAR w, h: SHORTINT;) s
224 2391 m (BEGIN) s
271 2351 m (IF s # NIL THEN) s
318 2311 m (IF s IS LSB.Variable THEN assign\(s\(LSB.Variable\)\); w := s.val) s
318 2271 m (ELSE) s
365 2231 m (CASE s.fct OF) s
365 2191 m (  0: ) s
365 2151 m (| LSB.or:  w := or[value\(s.x\), value\(s.y\)]) s
365 2111 m (| LSB.xor: w := xor[value\(s.x\), value\(s.y\)]) s
365 2071 m (| LSB.and: w := and[value\(s.x\), value\(s.y\)]) s
365 2031 m (| LSB.not: w := not[value\(s.y\)]) s
365 1991 m (| LSB.mux: h := value\(s.x\);) s
459 1951 m (IF h = undef THEN w := undef) s
459 1911 m (ELSIF h = 0 THEN w := value\(s.y.x\)) s
459 1871 m (ELSE w := value\(s.y.y\)) s
459 1831 m (END) s
365 1791 m (| LSB.reg: w := s.val; s.x := rorg; rorg := s) s
365 1751 m (| LSB.latch: h := value\(s.x\);) s
459 1711 m (IF h = undef THEN w := undef) s
459 1671 m (ELSIF h = 0 THEN w := s.val) s
459 1631 m (ELSE w := value\(s.y\); s.val := w) s
459 1591 m (END) s
365 1551 m (| LSB.sr: h := value\(s.x\); w := value\(s.y\);) s
459 1511 m (IF \(h = undef\) OR \(w = undef\) THEN w := undef) s
459 1471 m (ELSIF h = 0 THEN) s
506 1431 m (IF w = 0 THEN w := clash ELSE w := 1; s.val := 1 END) s
459 1391 m (ELSIF w = 0 THEN w := 0; s.val := 0) s
459 1351 m (ELSE w := s.val) s
459 1311 m (END) s
365 1271 m (END) s
318 1231 m (END) s
271 1191 m (ELSE w := undef) s
271 1151 m (END ;) s
271 1111 m (RETURN w) s
224 1071 m (END value;) s
224 991 m (PROCEDURE assign\(v: LSB.Variable\);) s
271 951 m (VAR lnk, tsg: LSB.Signal;) s
318 911 m (w, h: SHORTINT;) s
224 871 m (BEGIN ) s
271 831 m (IF v.val = LSB.black THEN) s
318 791 m (v.val := LSB.grey;) s
318 751 m (IF v.fct = LSB.bit THEN w := value\(v.x\); ) s
318 711 m (ELSIF v.fct = LSB.ts THEN) s
412 671 m (lnk := v.x; h := 0; w := undef;) s
412 631 m (LOOP) s
459 591 m (IF lnk = NIL THEN EXIT END ;) s
459 551 m (tsg := lnk.x; h := value\(tsg.x\);) s
459 511 m (IF h = 1 THEN) s
506 471 m (w := value\(tsg.y\);) s
506 431 m (REPEAT lnk := lnk.y UNTIL \(lnk = NIL\) OR \(value\(lnk.x.x\) # 0\);) s
506 391 m (IF lnk # NIL THEN w := clash; EXIT END) s
459 351 m (ELSIF h = 0 THEN lnk := lnk.y) s
459 311 m (ELSE EXIT) s
459 271 m (END) s
412 231 m (END) s
318 191 m (ELSIF v.fct = LSB.oc THEN) s
1 p
%%Page: 0 33
2085 3224 m (Syntax10.Scn.Fnt) f (32) s
365 3134 m (lnk := v.x; w := 1;) s
365 3094 m (WHILE \(lnk # NIL\) & \(w = 1\) DO w := value\(lnk.x\); lnk := lnk.y END) s
318 3054 m (END ;) s
318 3014 m (v.val := w) s
271 2974 m (ELSIF v.val = LSB.grey THEN) s
318 2934 m (LSB.WriteName\(W, v\); Texts.WriteString\(W, " in loop"\); Texts.WriteLn\(W\)) s
271 2894 m (END) s
224 2854 m (END assign;) s
224 2774 m (PROCEDURE evaluate\(v: LSB.Variable\);) s
224 2734 m (BEGIN \(*compute new values of variables*\)) s
271 2694 m (IF v.fct IN BaseTyps THEN assign\(v\)) s
271 2654 m (ELSIF v.fct IN Struct THEN v := v.dsc;) s
318 2614 m (WHILE v # NIL DO evaluate\(v\); v := v.next END) s
271 2574 m (END) s
224 2534 m (END evaluate;) s
224 2454 m (PROCEDURE initval\(v: LSB.Variable\);) s
224 2414 m (BEGIN) s
271 2374 m (IF v.fct IN BaseTyps THEN) s
318 2334 m (IF v.x # NIL THEN v.val := LSB.black END) s
271 2294 m (ELSIF v.fct IN Struct THEN v := v.dsc;) s
318 2254 m (WHILE v # NIL DO initval\(v\); v := v.next END) s
271 2214 m (END) s
224 2174 m (END initval;) s
224 2094 m (PROCEDURE list\(v: LSB.Variable\);) s
224 2054 m (BEGIN) s
271 2014 m (IF v.fct IN BaseTyps THEN) s
318 1974 m (IF v.u = 0 THEN Texts.Write\(W, Tab\); Texts.Write\(W, sym[v.val]\) END) s
271 1934 m (ELSIF v.fct IN Struct THEN v := v.dsc;) s
318 1894 m (WHILE v # NIL DO list\(v\); v := v.next END) s
271 1854 m (END) s
224 1814 m (END list;) s
224 1734 m (PROCEDURE Step*;) s
271 1694 m (VAR i: LONGINT; r: LSB.Signal;) s
318 1654 m (S: Texts.Scanner;) s
224 1614 m (BEGIN) s
271 1574 m (IF LSB.org # NIL THEN) s
318 1534 m (Texts.OpenScanner\(S, Oberon.Par.text, Oberon.Par.pos\); Texts.Scan\(S\);) s
318 1494 m (IF S.class = Texts.Int THEN) s
365 1454 m (initval\(LSB.org\); rorg := NIL; evaluate\(LSB.org\); i := S.i;) s
365 1414 m (WHILE i > 0 DO) s
412 1374 m (r := rorg;  \(*compute new values of register inputs*\)) s
412 1334 m (WHILE r # NIL DO) s
459 1294 m (IF value\(r.y.x\) = 1 THEN \(*enabled*\) r.y.val := value\(r.y.y\) END ;) s
459 1254 m (r := r.x) s
412 1214 m (END ;) s
412 1174 m (r := rorg;  \(*tick: replace old values of registers by new values*\)) s
412 1134 m (WHILE r # NIL DO r.val := r.y.val; r := r.x END ;) s
412 1094 m (initval\(LSB.org\); rorg := NIL; evaluate\(LSB.org\);) s
412 1054 m (list\(LSB.org\); Texts.WriteLn\(W\); INC\(stepno\); DEC\(i\)) s
365 1014 m (END ;) s
365 974 m (Texts.Append\(LSB.Log, W.buf\); r := rorg;) s
365 934 m (WHILE rorg # NIL DO r := rorg.x; rorg.x := LSB.clk; rorg := r END) s
318 894 m (END) s
271 854 m (END) s
224 814 m (END Step;) s
224 734 m (PROCEDURE rst1\(s: LSB.Signal\);) s
224 694 m (BEGIN) s
271 654 m (IF \(s # NIL\) & ~\(s IS LSB.Variable\) THEN) s
318 614 m (IF s.fct = LSB.reg THEN s.val := 0 END ;) s
318 574 m (rst1\(s.x\); rst1\(s.y\)) s
271 534 m (END) s
224 494 m (END rst1;) s
224 414 m (PROCEDURE rst0\(v: LSB.Variable\);) s
224 374 m (BEGIN) s
271 334 m (IF v.fct IN BaseTyps THEN rst1\(v.x\)) s
271 294 m (ELSIF v.fct IN Struct THEN v := v.dsc;) s
318 254 m (WHILE v # NIL DO rst0\(v\); v := v.next END) s
271 214 m (END) s
1 p
%%Page: 0 34
2085 3224 m (Syntax10.Scn.Fnt) f (33) s
224 3134 m (END rst0;) s
224 3054 m (PROCEDURE Reset*;) s
224 3014 m (BEGIN) s
271 2974 m (IF LSB.org # NIL THEN stepno := 0; rst0\(LSB.org\) END) s
224 2934 m (END Reset;) s
224 2854 m (PROCEDURE Set*;) s
271 2814 m (VAR v: LSB.Variable;) s
318 2774 m (S: Texts.Scanner;) s
224 2734 m (BEGIN Texts.OpenScanner\(S, Oberon.Par.text, Oberon.Par.pos\);) s
271 2694 m (LOOP Texts.Scan\(S\);) s
318 2654 m (IF \(S.class # Texts.Name\) & \(S.class # Texts.String\) THEN EXIT END ;) s
318 2614 m (v := LSB.This\(LSB.org, S.s\); Texts.Scan\(S\);) s
318 2574 m (IF \(S.class = Texts.Char\) & \(S.c = "="\) THEN Texts.Scan\(S\) END ;) s
318 2534 m (IF S.class # Texts.Int THEN EXIT END ; ) s
318 2494 m (IF v # NIL THEN) s
365 2454 m (Texts.WriteString\(W, "  "\); LSB.WriteName\(W, v\);) s
365 2414 m (IF \(v.x = NIL\) OR \(v.fct = LSB.ts\) THEN) s
412 2374 m (IF S.i = 0 THEN v.val := 0 ELSIF S.i = 1 THEN v.val := 1 ELSE v.val := undef END ;) s
412 2334 m (Texts.Write\(W, "="\); Texts.Write\(W, sym[v.val MOD 4]\)) s
365 2294 m (ELSE Texts.WriteString\(W, " not an input"\)) s
365 2254 m (END) s
318 2214 m (END) s
271 2174 m (END ;) s
271 2134 m (Texts.WriteLn\(W\); Texts.Append\(LSB.Log, W.buf\)) s
224 2094 m (END Set;) s
224 2014 m (PROCEDURE lab\(v: LSB.Variable\);) s
224 1974 m (BEGIN ) s
271 1934 m (IF v.fct IN BaseTyps THEN) s
318 1894 m (IF v.u = 0 THEN Texts.Write\(W, Tab\); LSB.WriteName\(W, v\) END) s
271 1854 m (ELSIF v.fct IN Struct THEN v := v.dsc;) s
318 1814 m (WHILE v # NIL DO lab\(v\); v := v.next END) s
271 1774 m (END) s
224 1734 m (END lab;) s
224 1654 m (PROCEDURE Label*;) s
224 1614 m (BEGIN) s
271 1574 m (IF LSB.org # NIL THEN) s
318 1534 m (lab\(LSB.org\); Texts.WriteLn\(W\); Texts.Append\(LSB.Log, W.buf\)) s
271 1494 m (END) s
224 1454 m (END Label;) s
224 1374 m (PROCEDURE clrsel\(v: LSB.Variable\);) s
224 1334 m (BEGIN) s
271 1294 m (IF v.fct IN BaseTyps THEN v.u := 1) s
271 1254 m (ELSIF v.fct IN Struct THEN v := v.dsc;) s
318 1214 m (WHILE v # NIL DO clrsel\(v\); v := v.next END) s
271 1174 m (END) s
224 1134 m (END clrsel;) s
224 1054 m (PROCEDURE Select*;) s
271 1014 m (VAR i: LONGINT; v: LSB.Variable;) s
318 974 m (S: Texts.Scanner;) s
224 934 m (BEGIN) s
271 894 m (IF LSB.org # NIL THEN) s
318 854 m (Texts.OpenScanner\(S, Oberon.Par.text, Oberon.Par.pos\); Texts.Scan\(S\);) s
318 814 m (clrsel\(LSB.org\); i := 0;) s
318 774 m (WHILE \(S.class = Texts.Name\) & \(i < 14\) DO) s
365 734 m (v := LSB.This\(LSB.org, S.s\);) s
365 694 m (IF v # NIL THEN v.u := 0; INC\(i\) END ;) s
365 654 m (Texts.Scan\(S\)) s
318 614 m (END) s
271 574 m (END) s
224 534 m (END Select;) s
224 454 m (PROCEDURE GetStepNo*;) s
224 414 m (BEGIN Texts.WriteString\(W, "step no = "\); Texts.WriteInt\(W, stepno, 4\);) s
271 374 m (Texts.WriteLn\(W\); Texts.Append\(LSB.Log, W.buf\)) s
224 334 m (END GetStepNo;) s
224 254 m (PROCEDURE Init*;) s
224 214 m (BEGIN stepno := 0; rorg := NIL) s
1 p
%%Page: 0 35
2085 3224 m (Syntax10.Scn.Fnt) f (34) s
224 3134 m (END Init;) s
224 3054 m (PROCEDURE DefOps;) s
271 3014 m (VAR i, j: INTEGER;) s
224 2974 m (BEGIN) s
271 2934 m (FOR i := 0 TO undef DO) s
318 2894 m (FOR j := 0 TO undef DO or[i, j] := undef; and[i, j] := undef; xor[i, j] := undef END ;) s
318 2854 m (not[i] := undef) s
271 2814 m (END ;) s
271 2774 m (or [0, 0] := 0; or [0, 1] := 1; or [1, 0] := 1; or [1, 1] := 1;) s
271 2734 m (and[0, 0] := 0; and[0, 1] := 0; and[1, 0] := 0; and[1, 1] := 1;) s
271 2694 m (xor[0, 0] := 0; xor[0, 1] := 1; xor[1, 0] := 1; xor[1, 1] := 0;) s
271 2654 m (not[0] := 1; not[1] := 0) s
224 2614 m (END DefOps;) s
224 2534 m (PROCEDURE SetTabs*;) s
271 2494 m (CONST mm = 36000; u = 10000;) s
271 2454 m (VAR i: INTEGER; p: TextFrames.Parc;) s
224 2414 m (BEGIN) s
271 2374 m (NEW\(p\); p.W := 100; p.H := 3*mm; p.handle := ParcElems.Handle;) s
271 2334 m (p.first := 0; p.left := 0; p.width := 165*mm; p.lead := mm; p.lsp := 14*u;) s
271 2294 m (p.dsr := 2*u; p.opts := {1}; p.nofTabs := 16; i := 0;) s
271 2254 m (REPEAT p.tab[i] := 11*mm*\(i+1\); INC\(i\) UNTIL i = 18;) s
271 2214 m (Texts.WriteElem\(W, p\); Texts.Append\(LSB.Log, W.buf\)) s
224 2174 m (END SetTabs;) s
177 2094 m (BEGIN Texts.OpenWriter\(W\); SetTabs; DefOps;) s
224 2054 m (sym[0] := "0"; sym[1] := "1"; sym[2] := "+"; sym[3] := "x") s
177 2014 m (END Simulator.) s
1 p
%%Page: 0 36
2085 3224 m (Syntax10.Scn.Fnt) f (35) s
177 3111 m (MODULE GAL1;  \(*NW 26.2.95 / 10.3.95*\)) s
224 3071 m (IMPORT SYSTEM, LSB, Texts, Oberon;) s
224 2991 m (CONST K = 10;   \(*nof registers*\)) s
271 2951 m (M = 44;   \(*nof And terms per row*\)) s
271 2911 m (N = 132;   \(*nof And-rows*\)) s
271 2871 m (G0 = 0FFFF0000H;   \(*output to latch, input from GAL*\)) s
271 2831 m (G1 = 0FFFF0040H;   \(*pulse to GAL clock input, pin 2*\)) s
271 2791 m (G3 = 0FFFF00C0H;   \(*program port, d0 = SDI, d1 = MODE, d4 = SCLK*\)) s
271 2751 m (inputs = {2..7, 9..13, 16}; outputs = {17..21, 23..27};   \(*pin  numbers*\)) s
224 2671 m (TYPE Row = ARRAY N OF SHORTINT;  \(*in map diagram this is a column*\)) s
224 2591 m (VAR res: INTEGER;) s
271 2551 m (W: Texts.Writer;) s
271 2511 m (imap, smap: ARRAY 28 OF SHORTINT;  \(*index is pin number*\)) s
271 2471 m (jmap: ARRAY K+1 OF INTEGER;  \(*index is OMLC no.*\)) s
271 2431 m (S0, S1, S2: ARRAY K OF SHORTINT;   \(*architecture rows*\)) s
271 2391 m (D: ARRAY M OF Row;   \(*and-matrix, first index horizontal in map diagram*\)) s
224 2311 m (\(* A zero entry in D means "connection", a one means "no connection"; initially, all) s
271 2271 m (D[i, j] = 1, as set by Erase command. Programming can create zeroes only.) s
271 2231 m (A term with value 1 is obtained by leaving all connections open, a zero by) s
271 2191 m (connecting to some signal and to its inverse also. All tri-state enables active \(1\).) s
271 2151 m (Note that input at pin 2 is clock. Preset and Reset set to zero *\)) s
224 2071 m (PROCEDURE wait\(n: LONGINT\);) s
271 2031 m (VAR T: LONGINT;) s
224 1991 m (BEGIN T := Oberon.Time\(\) + n DIV 3;) s
271 1951 m (REPEAT UNTIL Oberon.Time\(\) > T) s
224 1911 m (END wait;) s
224 1831 m (PROCEDURE P\(x: SHORTINT\);) s
224 1791 m (BEGIN \(*pulse*\)) s
271 1751 m (SYSTEM.PUT\(G3, x\); SYSTEM.PUT\(G3, x+10H\); SYSTEM.PUT\(G3, x\)) s
224 1711 m (END P;) s
224 1631 m (PROCEDURE EnterCmd\(c: SHORTINT\);) s
271 1591 m (VAR k: INTEGER;) s
224 1551 m (BEGIN P\(3\); k := 0; \(*enter Load Cmd state, then shift in 5 bits*\)) s
271 1511 m (REPEAT P\(c MOD 2\); c := c DIV 2; INC\(k\) UNTIL k = 5;) s
271 1471 m (P\(3\) \(*enter exec state*\)) s
224 1431 m (END EnterCmd;) s
224 1351 m (PROCEDURE WriteRow\(s: SHORTINT; VAR d: ARRAY OF SHORTINT\);) s
271 1311 m (VAR k: INTEGER;) s
224 1271 m (BEGIN EnterCmd\(2\);  \(*shift data in*\)) s
271 1231 m (k := 0;) s
271 1191 m (REPEAT P\(d[k]\); INC\(k\) UNTIL k = N;) s
271 1151 m (k := 0;) s
271 1111 m (REPEAT P\(s MOD 2\); s := s DIV 2; INC\(k\) UNTIL k = 6;) s
271 1071 m (EnterCmd\(7\);   \(*program*\)) s
271 1031 m (P\(0\); wait\(80\)) s
224 991 m (END WriteRow;) s
224 911 m (PROCEDURE Arch;) s
271 871 m (VAR k: INTEGER;) s
224 831 m (BEGIN EnterCmd\(20\);  \(*shift in architecture data*\)) s
271 791 m (k := 0;) s
271 751 m (REPEAT P\(S1[k]\); P\(S0[k]\); INC\(k\) UNTIL k = 10;) s
271 711 m (EnterCmd\(7\);   \(*program*\)) s
271 671 m (P\(0\); wait\(80\)) s
224 631 m (END Arch;) s
224 551 m (PROCEDURE Erase;) s
224 511 m (BEGIN EnterCmd\(3\); P\(0\); wait\(200\)) s
224 471 m (END Erase;) s
224 391 m (\(*----------------------------------------------------*\)) s
224 311 m (PROCEDURE Msg\(v: LSB.Variable; text: ARRAY OF CHAR\);) s
224 271 m (BEGIN LSB.WriteName\(W, v\); Texts.WriteString\(W, text\); Texts.WriteLn\(W\)) s
224 231 m (END Msg;) s
1 p
%%Page: 0 37
2085 3224 m (Syntax10.Scn.Fnt) f (36) s
224 3134 m (PROCEDURE zero\(e: INTEGER\);) s
224 3094 m (BEGIN D[0, e] := 0; D[1, e] := 0) s
224 3054 m (END zero;) s
224 2974 m (PROCEDURE factor\(s: LSB.Signal; j: INTEGER\);) s
271 2934 m (VAR inv: SHORTINT;) s
224 2894 m (BEGIN) s
271 2854 m (IF s.fct = LSB.not THEN inv := 1; s := s.y ELSE inv := 0 END ;) s
271 2814 m (IF s IS LSB.Variable THEN) s
318 2774 m (IF s.u IN inputs + outputs THEN) s
365 2734 m (IF \(s.u IN outputs\) & \(S2[smap[s.u]] = 0\) THEN inv := 1 - inv END ;) s
365 2694 m (D[imap[s.u]+inv, j] := 0) s
318 2654 m (ELSIF s = LSB.zero THEN zero\(j\)) s
318 2614 m (ELSIF s # LSB.one THEN Msg\(s\(LSB.Variable\), " with bad pin number"\); res := 0) s
318 2574 m (END) s
271 2534 m (ELSE Texts.WriteString\(W, "illegal expression "\); Texts.WriteLn\(W\); res := 0) s
271 2494 m (END) s
224 2454 m (END factor;) s
224 2374 m (PROCEDURE term\(s: LSB.Signal; j: INTEGER\);) s
224 2334 m (BEGIN) s
271 2294 m (WHILE s.fct = LSB.and DO factor\(s.y, j\); s := s.x END ;) s
271 2254 m (factor\(s, j\)) s
224 2214 m (END term;) s
224 2134 m (PROCEDURE expression\(s: LSB.Signal; k: INTEGER\);) s
271 2094 m (VAR j, lim: INTEGER;) s
224 2054 m (BEGIN j := jmap[k]+1; lim := jmap[k+1];) s
271 2014 m (WHILE s.fct = LSB.or DO) s
318 1974 m (term\(s.y, j\); INC\(j\);) s
318 1934 m (IF j = lim THEN) s
365 1894 m (Texts.WriteString\(W, "too many terms"\); Texts.WriteLn\(W\); DEC\(j, 8\); res := 0) s
318 1854 m (END ;) s
318 1814 m (s := s.x) s
271 1774 m (END ;) s
271 1734 m (term\(s, j\); INC\(j\);) s
271 1694 m (WHILE j < lim DO zero\(j\); INC\(j\) END) s
224 1654 m (END expression;) s
224 1574 m (PROCEDURE Prescan\(v: LSB.Variable\);) s
271 1534 m (VAR s: LSB.Signal; k: INTEGER;) s
224 1494 m (BEGIN \(*needed to determine feedback inversions S2*\)) s
271 1454 m (WHILE v # NIL DO) s
318 1414 m (IF v.class = LSB.out THEN) s
365 1374 m (IF v.fct = LSB.bit THEN) s
412 1334 m (IF v.x = NIL THEN Msg\(v, " undefined"\); res := 0) s
412 1294 m (ELSIF v.u IN outputs THEN) s
459 1254 m (s := v.x; k := smap[v.u];) s
459 1214 m (IF s.fct = LSB.not THEN S0[k] := 0; s := s.y END ;) s
459 1174 m (IF s.fct = LSB.reg THEN S1[k] := 0; S2[k] := 1 - S0[k] END) s
412 1134 m (ELSE Msg\(v, " bad pin"\); res := 0) s
412 1094 m (END) s
365 1054 m (ELSIF v.fct = LSB.array THEN Prescan\(v.dsc\)) s
365 1014 m (ELSE Msg\(v, " bad signal type"\); res := 0) s
365 974 m (END) s
318 934 m (END ;) s
318 894 m (v := v.next) s
271 854 m (END ;) s
271 814 m (Texts.Append\(LSB.Log, W.buf\)) s
224 774 m (END Prescan;) s
224 694 m (PROCEDURE Evaluate\(v: LSB.Variable\);) s
271 654 m (VAR s: LSB.Signal;) s
224 614 m (BEGIN) s
271 574 m (WHILE v # NIL DO) s
318 534 m (IF v.class = LSB.out THEN) s
365 494 m (IF v.fct = LSB.bit THEN) s
412 454 m (LSB.WriteName\(W, v\); Texts.WriteLn\(W\);) s
412 414 m (s := v.x;) s
412 374 m (IF s.fct = LSB.not THEN s := s.y END ;) s
412 334 m (IF s.fct = LSB.reg THEN) s
459 294 m (IF \(s.x = NIL\) OR \(s.x # LSB.clk\) OR \(s.y.x # LSB.one\) THEN) s
506 254 m (Msg\(v, " register with clock or enable specification"\); res := 0) s
459 214 m (END ;) s
1 p
%%Page: 0 38
2085 3224 m (Syntax10.Scn.Fnt) f (37) s
459 3134 m (s := s.y.y) s
412 3094 m (END ;) s
412 3054 m (expression\(s, smap[v.u]\)) s
365 3014 m (ELSIF v.fct = LSB.array THEN Evaluate\(v.dsc\)) s
365 2974 m (END) s
318 2934 m (END ;) s
318 2894 m (v := v.next) s
271 2854 m (END ;) s
271 2814 m (Texts.Append\(LSB.Log, W.buf\)) s
224 2774 m (END Evaluate;) s
224 2694 m (PROCEDURE Make*;) s
271 2654 m (VAR i, j: INTEGER;) s
224 2614 m (BEGIN res := 1; Texts.WriteString\(W, "making map"\);) s
271 2574 m (Texts.WriteLn\(W\); Texts.Append\(LSB.Log, W.buf\);) s
271 2534 m (FOR i := 0 TO M-1 DO  \(*erase all*\)) s
318 2494 m (FOR j := 0 TO N-1 DO D[i, j] := 1 END) s
271 2454 m (END ;) s
271 2414 m (FOR i := 0 TO K-1 DO S0[i] := 1; S1[i] := 1; S2[i] := 1 END ;) s
271 2374 m (D[M-1, 0] := 0;  \(*pin 16 to asyn reset*\)) s
271 2334 m (zero\(0\); zero\(N-1\); \(*zero to preset and reset*\)) s
271 2294 m (Prescan\(LSB.org.dsc\);) s
271 2254 m (IF res = 1 THEN) s
318 2214 m (Evaluate\(LSB.org.dsc\);) s
318 2174 m (IF res = 1 THEN) s
365 2134 m (Texts.WriteString\(W, "programming"\);) s
365 2094 m (Texts.WriteLn\(W\); Texts.Append\(LSB.Log, W.buf\);) s
365 2054 m (Erase; j := 0;) s
365 2014 m (REPEAT WriteRow\(SHORT\(j\), D[j]\); INC\(j\) UNTIL j = M;) s
365 1974 m (Arch; EnterCmd\(0\); P\(2\); SYSTEM.PUT\(G3, 0\)  \(*idle*\)) s
318 1934 m (END) s
271 1894 m (END) s
224 1854 m (END Make;) s
224 1774 m (PROCEDURE Verify*;) s
271 1734 m (VAR k: INTEGER; i, s, n: SHORTINT;) s
318 1694 m (d: ARRAY 6 OF SHORTINT;) s
318 1654 m (V: ARRAY N OF SHORTINT;) s
224 1614 m (BEGIN i := 0;) s
271 1574 m (REPEAT EnterCmd\(2\); k := 0; \(*shift zeroes in*\)) s
318 1534 m (REPEAT P\(0\); INC\(k\) UNTIL k = N;) s
318 1494 m (s := i; k := 0; \(*shift in row number*\)) s
318 1454 m (REPEAT P\(s MOD 2\); s := s DIV 2; INC\(k\) UNTIL k = 6;) s
318 1414 m (EnterCmd\(10\); P\(0\); wait\(4\);  \(*verify*\)) s
318 1374 m (EnterCmd\(2\); SYSTEM.PUT\(G3, 0\); \(*shift out*\) k := 0;) s
318 1334 m (REPEAT SYSTEM.GET\(G3, V[k]\); P\(0\); INC\(k\) UNTIL k = N;) s
318 1294 m (k := 0; n := 0;) s
318 1254 m (REPEAT SYSTEM.GET\(G3, d[k]\); P\(0\); INC\(k\) UNTIL k = 6;) s
318 1214 m (REPEAT DEC\(k\); n := n*2 + \(d[k] MOD 2\) UNTIL k = 0;) s
318 1174 m (\(*compare*\)) s
318 1134 m (IF n # i THEN) s
365 1094 m (Texts.WriteString\(W, "error row no."\); Texts.WriteInt\(W, s, 4\); Texts.WriteInt\(W, n, 4\);) s
365 1054 m (Texts.WriteLn\(W\)) s
318 1014 m (END ;) s
318 974 m (WHILE \(k < N\) & \(V[k] MOD 2 = D[i, k]\) DO INC\(k\) END ;) s
318 934 m (IF k < N THEN) s
365 894 m (Texts.WriteString\(W, "error in row"\); Texts.WriteInt\(W, i, 4\); Texts.WriteInt\(W, k, 4\);) s
365 854 m (Texts.WriteInt\(W, D[i, k], 4\); Texts.WriteInt\(W, V[k], 6\);) s
365 814 m (Texts.WriteLn\(W\)) s
318 774 m (END ;) s
318 734 m (INC\(i\)) s
271 694 m (UNTIL i = M;) s
271 654 m (EnterCmd\(0\); P\(2\); Texts.Append\(LSB.Log, W.buf\)) s
224 614 m (END Verify;) s
224 534 m (\(*----------------------------------------*\)) s
224 454 m (PROCEDURE ShowMap*;) s
271 414 m (VAR i, j: INTEGER;) s
224 374 m (BEGIN j := 0;) s
271 334 m (REPEAT Texts.WriteInt\(W, j, 4\); Texts.Write\(W, ":"\); i := 0;) s
318 294 m (REPEAT) s
365 254 m (IF D[i, j] = 0 THEN Texts.WriteInt\(W, i, 3\) END ;) s
365 214 m (INC\(i\)) s
1 p
%%Page: 0 39
2085 3224 m (Syntax10.Scn.Fnt) f (38) s
318 3134 m (UNTIL i = M;) s
318 3094 m (Texts.WriteLn\(W\); INC\(j\)) s
271 3054 m (UNTIL j = N;) s
271 3014 m (Texts.WriteString\(W, "S0:"\); i := 0;) s
271 2974 m (REPEAT Texts.WriteInt\(W, S0[i], 2\); INC\(i\) UNTIL i = K;) s
271 2934 m (Texts.WriteLn\(W\); Texts.WriteString\(W, "S1:"\); i := 0;) s
271 2894 m (REPEAT Texts.WriteInt\(W, S1[i], 2\); INC\(i\) UNTIL i = K;) s
271 2854 m (Texts.WriteLn\(W\); Texts.Append\(LSB.Log, W.buf\)) s
224 2814 m (END ShowMap;) s
224 2734 m (PROCEDURE WriteByte\(x: INTEGER\);) s
271 2694 m (VAR s0, s1: SHORTINT;) s
224 2654 m (BEGIN s0 := SHORT\(x\) MOD 10H; s1 := SHORT\(x DIV 10H\) MOD 10H;) s
271 2614 m (IF s0 < 10 THEN INC\(s0, 30H\) ELSE INC\(s0, 37H\) END ;) s
271 2574 m (IF s1 < 10 THEN INC\(s1, 30H\) ELSE INC\(s1, 37H\) END ;) s
271 2534 m (Texts.Write\(W, " "\); Texts.Write\(W, CHR\(s1\)\); Texts.Write\(W, CHR\(s0\)\)) s
224 2494 m (END WriteByte;) s
224 2414 m (PROCEDURE Put*;) s
271 2374 m (VAR S: Texts.Scanner;) s
224 2334 m (BEGIN Texts.OpenScanner\(S, Oberon.Par.text, Oberon.Par.pos\); Texts.Scan\(S\);) s
271 2294 m (SYSTEM.PUT\(G0, SHORT\(SHORT\(S.i\)\)\)) s
224 2254 m (END Put;) s
224 2174 m (PROCEDURE PutS*;) s
271 2134 m (VAR S: Texts.Scanner;) s
224 2094 m (BEGIN Texts.OpenScanner\(S, Oberon.Par.text, Oberon.Par.pos\); Texts.Scan\(S\);) s
271 2054 m (SYSTEM.PUT\(G3, SHORT\(SHORT\(S.i\)\) MOD 10H\)) s
224 2014 m (END PutS;) s
224 1934 m (PROCEDURE Get*;) s
271 1894 m (VAR x: SHORTINT;) s
224 1854 m (BEGIN SYSTEM.GET\(G0, x\); WriteByte\(x\); Texts.Append\(Oberon.Log, W.buf\)) s
224 1814 m (END Get;) s
224 1734 m (PROCEDURE Clock*;) s
224 1694 m (BEGIN SYSTEM.PUT\(G1, 0\)) s
224 1654 m (END Clock;) s
177 1574 m (BEGIN Texts.OpenWriter\(W\);) s
224 1534 m (imap[ 2] :=  0; imap[ 3] :=  4; imap[ 4] :=  8; imap[ 5] := 12;) s
224 1494 m (imap[ 6] := 16; imap[ 7] := 20; imap[ 9] := 24; imap[10] := 28;) s
224 1454 m (imap[11] := 32; imap[12] := 36; imap[13] := 40; imap[16] := 42;) s
224 1414 m (imap[17] := 38; imap[18] := 34; imap[19] := 30; imap[20] := 26;) s
224 1374 m (imap[21] := 22; imap[23] := 18; imap[24] := 14; imap[25] := 10;) s
224 1334 m (imap[26] :=  6; imap[27] :=  2;) s
224 1294 m (jmap[ 0] :=  1; jmap[ 1] := 10; jmap[ 2] := 21; jmap[ 3] := 34;) s
224 1254 m (jmap[ 4] := 49; jmap[ 5] := 66; jmap[ 6] := 83; jmap[ 7] := 98;) s
224 1214 m (jmap[ 8] := 111; jmap[ 9] := 122; jmap[10] := 131;) s
224 1174 m (smap[27] := 0; smap[26] := 1; smap[25] := 2; smap[24] := 3;) s
224 1134 m (smap[23] := 4; smap[21] := 5; smap[20] := 6; smap[19] := 7;) s
224 1094 m (smap[18] := 8; smap[17] := 9;) s
177 1054 m (END GAL1.) s
1 p
%%Page: 0 40
2085 3224 m (Syntax10.Scn.Fnt) f (39) s
177 3111 m (MODULE DNF;   \(*NW 25.3.95*\)) s
224 3071 m (\(*convert Boolean expression to disjunctive normal form*\)) s
224 3031 m (IMPORT Texts, LSB;) s
224 2951 m (PROCEDURE copy\(s: LSB.Signal\): LSB.Signal;) s
224 2911 m (BEGIN) s
271 2871 m (IF \(s IS LSB.Variable\) OR \(s.fct = LSB.not\) THEN RETURN s) s
271 2831 m (ELSE RETURN LSB.New\(s.fct, copy\(s.x\), copy\(s.y\)\)) s
271 2791 m (END) s
224 2751 m (END copy;) s
224 2671 m (PROCEDURE P\(VAR s: LSB.Signal; inv: BOOLEAN\);) s
224 2631 m (BEGIN \(*remove not, xor, and mux*\)) s
271 2591 m (IF s IS LSB.Variable THEN) s
318 2551 m (IF s\(LSB.Variable\).class = LSB.var THEN s := copy\(s.x\); P\(s, inv\)) s
318 2511 m (ELSIF inv THEN s := LSB.New\(LSB.not, NIL, s\)) s
318 2471 m (END) s
271 2431 m (ELSIF s.fct = LSB.not THEN) s
318 2391 m (IF inv THEN s := s.y; P\(s, FALSE\)) s
318 2351 m (ELSIF ~\(s.y IS LSB.Variable\) THEN s := s.y; P\(s, TRUE\)) s
318 2311 m (ELSIF s.y\(LSB.Variable\).class = LSB.var THEN s := copy\(s.y.x\); P\(s, TRUE\)) s
318 2271 m (END) s
271 2231 m (ELSIF s.fct = LSB.and THEN) s
318 2191 m (IF inv THEN s.fct := LSB.or END ;) s
318 2151 m (P\(s.x, inv\); P\(s.y, inv\)) s
271 2111 m (ELSIF s.fct = LSB.or THEN) s
318 2071 m (IF inv THEN s.fct := LSB.and END ;) s
318 2031 m (P\(s.x, inv\); P\(s.y, inv\)) s
271 1991 m (ELSIF s.fct = LSB.xor THEN) s
318 1951 m (s.fct := LSB.or;) s
318 1911 m (s.x := LSB.New\(LSB.and, s.x, s.y\);) s
318 1871 m (s.y := LSB.New\(LSB.and, copy\(s.x.x\), copy\(s.x.y\)\);) s
318 1831 m (P\(s.x.x, FALSE\); P\(s.x.y, ~inv\); P\(s.y.x, TRUE\); P\(s.y.y, inv\)) s
271 1791 m (ELSIF s.fct = LSB.mux THEN) s
318 1751 m (s.fct := LSB.or; s.y.fct := LSB.and;) s
318 1711 m (s.x := LSB.New\(LSB.and, s.x, s.y.x\);) s
318 1671 m (s.y.x := copy\(s.x.x\);) s
318 1631 m (P\(s.x.x, TRUE\); P\(s.x.y, inv\); P\(s.y.x, FALSE\); P\(s.y.y, inv\)) s
271 1591 m (ELSE HALT\(88\)) s
271 1551 m (END) s
224 1511 m (END P;) s
224 1431 m (PROCEDURE Q\(VAR s: LSB.Signal\);) s
271 1391 m (VAR t: LSB.Signal;) s
224 1351 m (BEGIN) s
271 1311 m (IF ~\(s IS LSB.Variable\) & \(s.fct # LSB.not\) THEN) s
318 1271 m (IF s.fct = LSB.or THEN) s
365 1231 m (Q\(s.x\); Q\(s.y\);) s
365 1191 m (IF s.y.fct = LSB.or THEN) s
412 1151 m (t := s.y; s.y := t.x; t.x := s; s := t; Q\(s\)) s
365 1111 m (END) s
318 1071 m (ELSIF s.fct = LSB.and THEN) s
365 1031 m (Q\(s.x\); Q\(s.y\);) s
365 991 m (IF s.x.fct = LSB.or THEN) s
412 951 m (t := s.x; s.x := t.y; t.y := s;) s
412 911 m (t.x := LSB.New\(LSB.and, t.x, copy\(s.y\)\); s := t; Q\(s\)) s
365 871 m (ELSIF s.y.fct = LSB.and THEN) s
412 831 m (t := s.y; s.y := t.x; t.x := s; s := t; Q\(s\)) s
365 791 m (ELSIF s.y.fct = LSB.or THEN) s
412 751 m (t := s.y; s.y := t.x; t.x := s;) s
412 711 m (t.y := LSB.New\(LSB.and, copy\(s.x\), t.y\); s := t; Q\(s\)) s
365 671 m (END) s
318 631 m (ELSE HALT\(99\)) s
318 591 m (END) s
271 551 m (END) s
224 511 m (END Q;) s
224 431 m (PROCEDURE R\(VAR s: LSB.Signal\);) s
224 391 m (BEGIN P\(s, FALSE\); Q\(s\)) s
224 351 m (END R;) s
224 271 m (PROCEDURE elem\(VAR s: LSB.Signal\);) s
224 231 m (BEGIN ) s
271 191 m (IF s.fct = LSB.not THEN) s
1 p
%%Page: 0 41
2085 3224 m (Syntax10.Scn.Fnt) f (40) s
318 3134 m (IF s.y.fct = LSB.reg THEN R\(s.y.y\) ELSE R\(s.y\) END) s
271 3094 m (ELSIF s.fct = LSB.reg THEN R\(s.y\)) s
271 3054 m (ELSE R\(s\)) s
271 3014 m (END) s
224 2974 m (END elem;) s
224 2894 m (PROCEDURE list\(v: LSB.Variable\);) s
224 2854 m (BEGIN) s
271 2814 m (WHILE v # NIL DO) s
318 2774 m (IF v.class = LSB.out THEN) s
365 2734 m (IF v.fct = LSB.array THEN list\(v.dsc\)) s
365 2694 m (ELSIF \(v.fct = LSB.bit\) & \(v.x # NIL\) THEN) s
412 2654 m (elem\(v.x\); LSB.Show\(v, 0\)) s
365 2614 m (END) s
318 2574 m (END ;) s
318 2534 m (v := v.next) s
271 2494 m (END) s
224 2454 m (END list;) s
224 2374 m (PROCEDURE Convert*;) s
271 2334 m (VAR v: LSB.Variable;) s
224 2294 m (BEGIN list\(LSB.org.dsc\)) s
224 2254 m (END Convert;) s
177 2174 m (END DNF.) s
1 p
%%Trailer   
OberonClose
